{"version":3,"sources":["../../node_modules/regenerate-unicode-properties sync /^/.//.*/.js$","components/Markdown.js","components/atomDark.js","components/Example.js","components/PropTable.js","components/PageHeader.js","components/Checkerboard.js","components/Combination.js","Badge.doc.js","Box.doc.js","Button.doc.js","Card.doc.js","Checkbox.doc.js","Collage.doc.js","Column.doc.js","Container.doc.js","Divider.doc.js","Flyout.doc.js","GroupAvatar.doc.js","Heading.doc.js","Icon.doc.js","IconButton.doc.js","Image.doc.js","Label.doc.js","Layer.doc.js","Letterbox.doc.js","Link.doc.js","Mask.doc.js","Masonry.doc.js","Modal.doc.js","Pog.doc.js","Pulsar.doc.js","RadioButton.doc.js","SearchField.doc.js","SegmentedControl.doc.js","SelectList.doc.js","Spinner.doc.js","Sticky.doc.js","Switch.doc.js","Tabs.doc.js","Text.doc.js","TextArea.doc.js","TextField.doc.js","Toast.doc.js","Tooltip.doc.js","Touchable.doc.js","Video.doc.js","components/Link.js","components/Header.js","components/NavLink.js","components/routes.js","components/Navigation.js","components/App.js","components/SearchContent.js","components/CardPage.js","index.js","components/Card.js","../src sync //.doc/.js$","Avatar.doc.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Markdown","text","size","renderer","Renderer","language","highlight","highlightjs","value","html","marked","str","match","indent","Math","min","x","length","re","RegExp","replace","stripIndent","className","dangerouslySetInnerHTML","__html","plain","color","backgroundColor","lineHeight","fontSize","fontFamily","styles","types","style","fontWeight","fontStyle","cursor","Box","gestalt","Column","IconButton","Text","Tooltip","exportDefaultMaybe","startsWith","handleCodeSandbox","a","title","gestaltComponents","usedComponents","Set","component","components","filter","includes","object","files","content","dependencies","react","devDependencies","main","scripts","start","join","parameters","LZString","compressToBase64","JSON","stringify","formData","FormData","append","fetch","method","body","mode","then","response","json","errors","sandbox_id","url","window","open","Example","defaultCode","description","name","direction","trim","Card","stacked","scope","theme","display","marginLeft","marginRight","span","paddingX","alignItems","height","paddingY","flex","position","left","width","padding","inline","dangerouslySetSvgPath","__path","accessibilityLabel","iconColor","onClick","Th","children","borderBottom","overflow","weight","Td","border","colspan","shrink","verticalAlign","colSpan","marginTop","marginBottom","upcase","string","charAt","toUpperCase","slice","PropTable","list","fn","properties","props","hasRequired","Component","some","prop","required","borderCollapse","tableLayout","sort","b","localeCompare","reduce","acc","i","defaultValue","href","responsive","type","push","key","icon","event","preventDefault","elem","document","getElementById","scrollIntoView","block","gestaltPath","ComponentHeader","Checkerboard","xmlns","version","preserveAspectRatio","y","patternUnits","fill","Combination","showValues","fullWidth","heading","wrap","variationsByField","fieldNames","combine","fieldName","restFieldNames","variationsForField","Array","isArray","vs","fieldValue","newAcc","concat","combinations","combination","column","mdColumn","lgColumn","align","toReactAttribute","top","bottom","right","cards","card","c","marginProps","absolutePositioningProps","paddingProps","justifyContent","margin","PaddingSwatch","dangerouslySetInlineStyle","__style","label","MarginSwatch","marginStart","marginEnd","maxWidth","documentElement","isRTL","dir","borderSize","rounding","opacity","disabled","selected","onChange","checked","hasError","indeterminate","user1","src","user2","user3","collaborators","collab","Icon","icons","bgColor","pins","inputStyle","ExampleMasonry","state","updateWidth","target","setState","Number","grid","handleResize","pinList","Promise","getPins","startPins","containerStyle","outline","overflowY","this","scrollContainer","max","step","ref","el","columnWidth","comp","data","alt","naturalHeight","naturalWidth","flexible","gutterWidth","items","layout","minCols","React","MasonryUniformRowLayout","hovered","focused","active","useCheckerboard","switched","Tabs","thumbnail","button","thumbnailShape","withRouter","history","to","createHref","createLocation","location","handleClick","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Header","useState","setIsRTL","togglePageDirSvgPath","mdPaddingX","lgPaddingX","isLeftClickEvent","path","routes","requireCard","require","paths","forEach","pathname","default","Navigation","mdDisplay","role","mdPadding","lgPadding","App","minHeight","mdSpan","SearchContent","CardPage","container","Element","render","StrictMode"],"mappings":"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E,YACE,+EACFgE,KAAM,wBAER,CACE/D,KAAM,yBACNiE,KAAM,SACNlE,YACE,gEACFgE,KAAM,wBAER,CACE/D,KAAM,0BACNiE,KAAM,SACNlE,YACE,iEACFgE,KAAM,wBAER,CACE/D,KAAM,yBACNiE,KAAM,SACNlE,YACE,gEACFgE,KAAM,wBAER,CACE/D,KAAM,2BACNiE,KAAM,SACNlE,YACE,kEACFgE,KAAM,wBAER,CACE/D,KAAM,cACNiE,KAAM,SACNlE,YAAY,iGACZsD,UAAU,EACVU,KAAM,gBAER,CACE/D,KAAM,WACNiE,KAAM,SACNlE,YAAa,0DACbsD,UAAU,EACVU,KAAM,gBAER,CACE/D,KAAM,WACNiE,KAAM,aACNlE,YAAY,mNAGd,CACEC,KAAM,WACNiE,KAAM,UACNlE,YAAa,iCACbgE,KAAM,wBAER,CACE/D,KAAM,OACNiE,KAAM,UACNlE,YAAa,wDACbgE,KAAM,gCAER,CACE/D,KAAM,mBACNiE,KACE,0EACFlE,YACE,iFAEJ,CACEC,KAAM,UACNiE,KAAM,wDACNlE,YAAa,6CAEf,CACEC,KAAM,qBACNiE,KAAM,kDACNlE,YAAa,kDAEf,CACEC,KAAM,iBACNiE,KACE,wEACFlE,YAAa,uDAEf,CACEC,KAAM,SACNiE,KAAM,sDACNlE,YACE,kEACFgE,KAAM,uBAER,CACE/D,KAAM,iBACNiE,KAAM,2DACNlE,YAAa,iDAEf,CACEC,KAAM,eACNiE,KAAM,2DACNlE,YAAa,+CAEf,CACEC,KAAM,UACNiE,KAAM,sDACNlE,YAAa,+BACbgE,KAAM,uBAER,CACE/D,KAAM,UACNiE,KAAM,wDACNlE,YAAa,gDAEf,CACEC,KAAM,SACNiE,KAAM,wDACNlE,YAAa,0DAEf,CACEC,KAAM,eACNiE,KACE,sEACFlE,YACE,mFAEJ,CACEC,KAAM,iBACNiE,KACE,sEACFlE,YAAa,qCACbgE,KAAM,uBAER,CACE/D,KAAM,eACNiE,KAAM,SACNlE,YACE,6DACF+D,aAAc,EACdC,KAAM,uBAER,CACE/D,KAAM,UACNiE,KAAM,UACNlE,YAAa,iDACb+D,cAAc,E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","file":"static/js/main.4ce8d795.chunk.js","sourcesContent":["var map = {\n\t\"./Binary_Property/ASCII.js\": 295,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 296,\n\t\"./Binary_Property/Alphabetic.js\": 297,\n\t\"./Binary_Property/Any.js\": 298,\n\t\"./Binary_Property/Assigned.js\": 299,\n\t\"./Binary_Property/Bidi_Control.js\": 300,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 301,\n\t\"./Binary_Property/Case_Ignorable.js\": 302,\n\t\"./Binary_Property/Cased.js\": 303,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 304,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 305,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 306,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 307,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 308,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 309,\n\t\"./Binary_Property/Dash.js\": 310,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 311,\n\t\"./Binary_Property/Deprecated.js\": 312,\n\t\"./Binary_Property/Diacritic.js\": 313,\n\t\"./Binary_Property/Emoji.js\": 314,\n\t\"./Binary_Property/Emoji_Component.js\": 315,\n\t\"./Binary_Property/Emoji_Modifier.js\": 316,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 317,\n\t\"./Binary_Property/Emoji_Presentation.js\": 318,\n\t\"./Binary_Property/Extended_Pictographic.js\": 319,\n\t\"./Binary_Property/Extender.js\": 320,\n\t\"./Binary_Property/Grapheme_Base.js\": 321,\n\t\"./Binary_Property/Grapheme_Extend.js\": 322,\n\t\"./Binary_Property/Hex_Digit.js\": 323,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 324,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 325,\n\t\"./Binary_Property/ID_Continue.js\": 326,\n\t\"./Binary_Property/ID_Start.js\": 327,\n\t\"./Binary_Property/Ideographic.js\": 328,\n\t\"./Binary_Property/Join_Control.js\": 329,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 330,\n\t\"./Binary_Property/Lowercase.js\": 331,\n\t\"./Binary_Property/Math.js\": 332,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 333,\n\t\"./Binary_Property/Pattern_Syntax.js\": 334,\n\t\"./Binary_Property/Pattern_White_Space.js\": 335,\n\t\"./Binary_Property/Quotation_Mark.js\": 336,\n\t\"./Binary_Property/Radical.js\": 337,\n\t\"./Binary_Property/Regional_Indicator.js\": 338,\n\t\"./Binary_Property/Sentence_Terminal.js\": 339,\n\t\"./Binary_Property/Soft_Dotted.js\": 340,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 341,\n\t\"./Binary_Property/Unified_Ideograph.js\": 342,\n\t\"./Binary_Property/Uppercase.js\": 343,\n\t\"./Binary_Property/Variation_Selector.js\": 344,\n\t\"./Binary_Property/White_Space.js\": 345,\n\t\"./Binary_Property/XID_Continue.js\": 346,\n\t\"./Binary_Property/XID_Start.js\": 347,\n\t\"./General_Category/Cased_Letter.js\": 348,\n\t\"./General_Category/Close_Punctuation.js\": 349,\n\t\"./General_Category/Connector_Punctuation.js\": 350,\n\t\"./General_Category/Control.js\": 351,\n\t\"./General_Category/Currency_Symbol.js\": 352,\n\t\"./General_Category/Dash_Punctuation.js\": 353,\n\t\"./General_Category/Decimal_Number.js\": 354,\n\t\"./General_Category/Enclosing_Mark.js\": 355,\n\t\"./General_Category/Final_Punctuation.js\": 356,\n\t\"./General_Category/Format.js\": 357,\n\t\"./General_Category/Initial_Punctuation.js\": 358,\n\t\"./General_Category/Letter.js\": 359,\n\t\"./General_Category/Letter_Number.js\": 360,\n\t\"./General_Category/Line_Separator.js\": 361,\n\t\"./General_Category/Lowercase_Letter.js\": 362,\n\t\"./General_Category/Mark.js\": 363,\n\t\"./General_Category/Math_Symbol.js\": 364,\n\t\"./General_Category/Modifier_Letter.js\": 365,\n\t\"./General_Category/Modifier_Symbol.js\": 366,\n\t\"./General_Category/Nonspacing_Mark.js\": 367,\n\t\"./General_Category/Number.js\": 368,\n\t\"./General_Category/Open_Punctuation.js\": 369,\n\t\"./General_Category/Other.js\": 370,\n\t\"./General_Category/Other_Letter.js\": 371,\n\t\"./General_Category/Other_Number.js\": 372,\n\t\"./General_Category/Other_Punctuation.js\": 373,\n\t\"./General_Category/Other_Symbol.js\": 374,\n\t\"./General_Category/Paragraph_Separator.js\": 375,\n\t\"./General_Category/Private_Use.js\": 376,\n\t\"./General_Category/Punctuation.js\": 377,\n\t\"./General_Category/Separator.js\": 378,\n\t\"./General_Category/Space_Separator.js\": 379,\n\t\"./General_Category/Spacing_Mark.js\": 380,\n\t\"./General_Category/Surrogate.js\": 381,\n\t\"./General_Category/Symbol.js\": 382,\n\t\"./General_Category/Titlecase_Letter.js\": 383,\n\t\"./General_Category/Unassigned.js\": 384,\n\t\"./General_Category/Uppercase_Letter.js\": 385,\n\t\"./Script/Adlam.js\": 386,\n\t\"./Script/Ahom.js\": 387,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 388,\n\t\"./Script/Arabic.js\": 389,\n\t\"./Script/Armenian.js\": 390,\n\t\"./Script/Avestan.js\": 391,\n\t\"./Script/Balinese.js\": 392,\n\t\"./Script/Bamum.js\": 393,\n\t\"./Script/Bassa_Vah.js\": 394,\n\t\"./Script/Batak.js\": 395,\n\t\"./Script/Bengali.js\": 396,\n\t\"./Script/Bhaiksuki.js\": 397,\n\t\"./Script/Bopomofo.js\": 398,\n\t\"./Script/Brahmi.js\": 399,\n\t\"./Script/Braille.js\": 400,\n\t\"./Script/Buginese.js\": 401,\n\t\"./Script/Buhid.js\": 402,\n\t\"./Script/Canadian_Aboriginal.js\": 403,\n\t\"./Script/Carian.js\": 404,\n\t\"./Script/Caucasian_Albanian.js\": 405,\n\t\"./Script/Chakma.js\": 406,\n\t\"./Script/Cham.js\": 407,\n\t\"./Script/Cherokee.js\": 408,\n\t\"./Script/Chorasmian.js\": 409,\n\t\"./Script/Common.js\": 410,\n\t\"./Script/Coptic.js\": 411,\n\t\"./Script/Cuneiform.js\": 412,\n\t\"./Script/Cypriot.js\": 413,\n\t\"./Script/Cyrillic.js\": 414,\n\t\"./Script/Deseret.js\": 415,\n\t\"./Script/Devanagari.js\": 416,\n\t\"./Script/Dives_Akuru.js\": 417,\n\t\"./Script/Dogra.js\": 418,\n\t\"./Script/Duployan.js\": 419,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 420,\n\t\"./Script/Elbasan.js\": 421,\n\t\"./Script/Elymaic.js\": 422,\n\t\"./Script/Ethiopic.js\": 423,\n\t\"./Script/Georgian.js\": 424,\n\t\"./Script/Glagolitic.js\": 425,\n\t\"./Script/Gothic.js\": 426,\n\t\"./Script/Grantha.js\": 427,\n\t\"./Script/Greek.js\": 428,\n\t\"./Script/Gujarati.js\": 429,\n\t\"./Script/Gunjala_Gondi.js\": 430,\n\t\"./Script/Gurmukhi.js\": 431,\n\t\"./Script/Han.js\": 432,\n\t\"./Script/Hangul.js\": 433,\n\t\"./Script/Hanifi_Rohingya.js\": 434,\n\t\"./Script/Hanunoo.js\": 435,\n\t\"./Script/Hatran.js\": 436,\n\t\"./Script/Hebrew.js\": 437,\n\t\"./Script/Hiragana.js\": 438,\n\t\"./Script/Imperial_Aramaic.js\": 439,\n\t\"./Script/Inherited.js\": 440,\n\t\"./Script/Inscriptional_Pahlavi.js\": 441,\n\t\"./Script/Inscriptional_Parthian.js\": 442,\n\t\"./Script/Javanese.js\": 443,\n\t\"./Script/Kaithi.js\": 444,\n\t\"./Script/Kannada.js\": 445,\n\t\"./Script/Katakana.js\": 446,\n\t\"./Script/Kayah_Li.js\": 447,\n\t\"./Script/Kharoshthi.js\": 448,\n\t\"./Script/Khitan_Small_Script.js\": 449,\n\t\"./Script/Khmer.js\": 450,\n\t\"./Script/Khojki.js\": 451,\n\t\"./Script/Khudawadi.js\": 452,\n\t\"./Script/Lao.js\": 453,\n\t\"./Script/Latin.js\": 454,\n\t\"./Script/Lepcha.js\": 455,\n\t\"./Script/Limbu.js\": 456,\n\t\"./Script/Linear_A.js\": 457,\n\t\"./Script/Linear_B.js\": 458,\n\t\"./Script/Lisu.js\": 459,\n\t\"./Script/Lycian.js\": 460,\n\t\"./Script/Lydian.js\": 461,\n\t\"./Script/Mahajani.js\": 462,\n\t\"./Script/Makasar.js\": 463,\n\t\"./Script/Malayalam.js\": 464,\n\t\"./Script/Mandaic.js\": 465,\n\t\"./Script/Manichaean.js\": 466,\n\t\"./Script/Marchen.js\": 467,\n\t\"./Script/Masaram_Gondi.js\": 468,\n\t\"./Script/Medefaidrin.js\": 469,\n\t\"./Script/Meetei_Mayek.js\": 470,\n\t\"./Script/Mende_Kikakui.js\": 471,\n\t\"./Script/Meroitic_Cursive.js\": 472,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 473,\n\t\"./Script/Miao.js\": 474,\n\t\"./Script/Modi.js\": 475,\n\t\"./Script/Mongolian.js\": 476,\n\t\"./Script/Mro.js\": 477,\n\t\"./Script/Multani.js\": 478,\n\t\"./Script/Myanmar.js\": 479,\n\t\"./Script/Nabataean.js\": 480,\n\t\"./Script/Nandinagari.js\": 481,\n\t\"./Script/New_Tai_Lue.js\": 482,\n\t\"./Script/Newa.js\": 483,\n\t\"./Script/Nko.js\": 484,\n\t\"./Script/Nushu.js\": 485,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 486,\n\t\"./Script/Ogham.js\": 487,\n\t\"./Script/Ol_Chiki.js\": 488,\n\t\"./Script/Old_Hungarian.js\": 489,\n\t\"./Script/Old_Italic.js\": 490,\n\t\"./Script/Old_North_Arabian.js\": 491,\n\t\"./Script/Old_Permic.js\": 492,\n\t\"./Script/Old_Persian.js\": 493,\n\t\"./Script/Old_Sogdian.js\": 494,\n\t\"./Script/Old_South_Arabian.js\": 495,\n\t\"./Script/Old_Turkic.js\": 496,\n\t\"./Script/Oriya.js\": 497,\n\t\"./Script/Osage.js\": 498,\n\t\"./Script/Osmanya.js\": 499,\n\t\"./Script/Pahawh_Hmong.js\": 500,\n\t\"./Script/Palmyrene.js\": 501,\n\t\"./Script/Pau_Cin_Hau.js\": 502,\n\t\"./Script/Phags_Pa.js\": 503,\n\t\"./Script/Phoenician.js\": 504,\n\t\"./Script/Psalter_Pahlavi.js\": 505,\n\t\"./Script/Rejang.js\": 506,\n\t\"./Script/Runic.js\": 507,\n\t\"./Script/Samaritan.js\": 508,\n\t\"./Script/Saurashtra.js\": 509,\n\t\"./Script/Sharada.js\": 510,\n\t\"./Script/Shavian.js\": 511,\n\t\"./Script/Siddham.js\": 512,\n\t\"./Script/SignWriting.js\": 513,\n\t\"./Script/Sinhala.js\": 514,\n\t\"./Script/Sogdian.js\": 515,\n\t\"./Script/Sora_Sompeng.js\": 516,\n\t\"./Script/Soyombo.js\": 517,\n\t\"./Script/Sundanese.js\": 518,\n\t\"./Script/Syloti_Nagri.js\": 519,\n\t\"./Script/Syriac.js\": 520,\n\t\"./Script/Tagalog.js\": 521,\n\t\"./Script/Tagbanwa.js\": 522,\n\t\"./Script/Tai_Le.js\": 523,\n\t\"./Script/Tai_Tham.js\": 524,\n\t\"./Script/Tai_Viet.js\": 525,\n\t\"./Script/Takri.js\": 526,\n\t\"./Script/Tamil.js\": 527,\n\t\"./Script/Tangut.js\": 528,\n\t\"./Script/Telugu.js\": 529,\n\t\"./Script/Thaana.js\": 530,\n\t\"./Script/Thai.js\": 531,\n\t\"./Script/Tibetan.js\": 532,\n\t\"./Script/Tifinagh.js\": 533,\n\t\"./Script/Tirhuta.js\": 534,\n\t\"./Script/Ugaritic.js\": 535,\n\t\"./Script/Vai.js\": 536,\n\t\"./Script/Wancho.js\": 537,\n\t\"./Script/Warang_Citi.js\": 538,\n\t\"./Script/Yezidi.js\": 539,\n\t\"./Script/Yi.js\": 540,\n\t\"./Script/Zanabazar_Square.js\": 541,\n\t\"./Script_Extensions/Adlam.js\": 542,\n\t\"./Script_Extensions/Ahom.js\": 543,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 544,\n\t\"./Script_Extensions/Arabic.js\": 545,\n\t\"./Script_Extensions/Armenian.js\": 546,\n\t\"./Script_Extensions/Avestan.js\": 547,\n\t\"./Script_Extensions/Balinese.js\": 548,\n\t\"./Script_Extensions/Bamum.js\": 549,\n\t\"./Script_Extensions/Bassa_Vah.js\": 550,\n\t\"./Script_Extensions/Batak.js\": 551,\n\t\"./Script_Extensions/Bengali.js\": 552,\n\t\"./Script_Extensions/Bhaiksuki.js\": 553,\n\t\"./Script_Extensions/Bopomofo.js\": 554,\n\t\"./Script_Extensions/Brahmi.js\": 555,\n\t\"./Script_Extensions/Braille.js\": 556,\n\t\"./Script_Extensions/Buginese.js\": 557,\n\t\"./Script_Extensions/Buhid.js\": 558,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 559,\n\t\"./Script_Extensions/Carian.js\": 560,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 561,\n\t\"./Script_Extensions/Chakma.js\": 562,\n\t\"./Script_Extensions/Cham.js\": 563,\n\t\"./Script_Extensions/Cherokee.js\": 564,\n\t\"./Script_Extensions/Chorasmian.js\": 565,\n\t\"./Script_Extensions/Common.js\": 566,\n\t\"./Script_Extensions/Coptic.js\": 567,\n\t\"./Script_Extensions/Cuneiform.js\": 568,\n\t\"./Script_Extensions/Cypriot.js\": 569,\n\t\"./Script_Extensions/Cyrillic.js\": 570,\n\t\"./Script_Extensions/Deseret.js\": 571,\n\t\"./Script_Extensions/Devanagari.js\": 572,\n\t\"./Script_Extensions/Dives_Akuru.js\": 573,\n\t\"./Script_Extensions/Dogra.js\": 574,\n\t\"./Script_Extensions/Duployan.js\": 575,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 576,\n\t\"./Script_Extensions/Elbasan.js\": 577,\n\t\"./Script_Extensions/Elymaic.js\": 578,\n\t\"./Script_Extensions/Ethiopic.js\": 579,\n\t\"./Script_Extensions/Georgian.js\": 580,\n\t\"./Script_Extensions/Glagolitic.js\": 581,\n\t\"./Script_Extensions/Gothic.js\": 582,\n\t\"./Script_Extensions/Grantha.js\": 583,\n\t\"./Script_Extensions/Greek.js\": 584,\n\t\"./Script_Extensions/Gujarati.js\": 585,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 586,\n\t\"./Script_Extensions/Gurmukhi.js\": 587,\n\t\"./Script_Extensions/Han.js\": 588,\n\t\"./Script_Extensions/Hangul.js\": 589,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 590,\n\t\"./Script_Extensions/Hanunoo.js\": 591,\n\t\"./Script_Extensions/Hatran.js\": 592,\n\t\"./Script_Extensions/Hebrew.js\": 593,\n\t\"./Script_Extensions/Hiragana.js\": 594,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 595,\n\t\"./Script_Extensions/Inherited.js\": 596,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 597,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 598,\n\t\"./Script_Extensions/Javanese.js\": 599,\n\t\"./Script_Extensions/Kaithi.js\": 600,\n\t\"./Script_Extensions/Kannada.js\": 601,\n\t\"./Script_Extensions/Katakana.js\": 602,\n\t\"./Script_Extensions/Kayah_Li.js\": 603,\n\t\"./Script_Extensions/Kharoshthi.js\": 604,\n\t\"./Script_Extensions/Khitan_Small_Script.js\": 605,\n\t\"./Script_Extensions/Khmer.js\": 606,\n\t\"./Script_Extensions/Khojki.js\": 607,\n\t\"./Script_Extensions/Khudawadi.js\": 608,\n\t\"./Script_Extensions/Lao.js\": 609,\n\t\"./Script_Extensions/Latin.js\": 610,\n\t\"./Script_Extensions/Lepcha.js\": 611,\n\t\"./Script_Extensions/Limbu.js\": 612,\n\t\"./Script_Extensions/Linear_A.js\": 613,\n\t\"./Script_Extensions/Linear_B.js\": 614,\n\t\"./Script_Extensions/Lisu.js\": 615,\n\t\"./Script_Extensions/Lycian.js\": 616,\n\t\"./Script_Extensions/Lydian.js\": 617,\n\t\"./Script_Extensions/Mahajani.js\": 618,\n\t\"./Script_Extensions/Makasar.js\": 619,\n\t\"./Script_Extensions/Malayalam.js\": 620,\n\t\"./Script_Extensions/Mandaic.js\": 621,\n\t\"./Script_Extensions/Manichaean.js\": 622,\n\t\"./Script_Extensions/Marchen.js\": 623,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 624,\n\t\"./Script_Extensions/Medefaidrin.js\": 625,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 626,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 627,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 628,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 629,\n\t\"./Script_Extensions/Miao.js\": 630,\n\t\"./Script_Extensions/Modi.js\": 631,\n\t\"./Script_Extensions/Mongolian.js\": 632,\n\t\"./Script_Extensions/Mro.js\": 633,\n\t\"./Script_Extensions/Multani.js\": 634,\n\t\"./Script_Extensions/Myanmar.js\": 635,\n\t\"./Script_Extensions/Nabataean.js\": 636,\n\t\"./Script_Extensions/Nandinagari.js\": 637,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 638,\n\t\"./Script_Extensions/Newa.js\": 639,\n\t\"./Script_Extensions/Nko.js\": 640,\n\t\"./Script_Extensions/Nushu.js\": 641,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 642,\n\t\"./Script_Extensions/Ogham.js\": 643,\n\t\"./Script_Extensions/Ol_Chiki.js\": 644,\n\t\"./Script_Extensions/Old_Hungarian.js\": 645,\n\t\"./Script_Extensions/Old_Italic.js\": 646,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 647,\n\t\"./Script_Extensions/Old_Permic.js\": 648,\n\t\"./Script_Extensions/Old_Persian.js\": 649,\n\t\"./Script_Extensions/Old_Sogdian.js\": 650,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 651,\n\t\"./Script_Extensions/Old_Turkic.js\": 652,\n\t\"./Script_Extensions/Oriya.js\": 653,\n\t\"./Script_Extensions/Osage.js\": 654,\n\t\"./Script_Extensions/Osmanya.js\": 655,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 656,\n\t\"./Script_Extensions/Palmyrene.js\": 657,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 658,\n\t\"./Script_Extensions/Phags_Pa.js\": 659,\n\t\"./Script_Extensions/Phoenician.js\": 660,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 661,\n\t\"./Script_Extensions/Rejang.js\": 662,\n\t\"./Script_Extensions/Runic.js\": 663,\n\t\"./Script_Extensions/Samaritan.js\": 664,\n\t\"./Script_Extensions/Saurashtra.js\": 665,\n\t\"./Script_Extensions/Sharada.js\": 666,\n\t\"./Script_Extensions/Shavian.js\": 667,\n\t\"./Script_Extensions/Siddham.js\": 668,\n\t\"./Script_Extensions/SignWriting.js\": 669,\n\t\"./Script_Extensions/Sinhala.js\": 670,\n\t\"./Script_Extensions/Sogdian.js\": 671,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 672,\n\t\"./Script_Extensions/Soyombo.js\": 673,\n\t\"./Script_Extensions/Sundanese.js\": 674,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 675,\n\t\"./Script_Extensions/Syriac.js\": 676,\n\t\"./Script_Extensions/Tagalog.js\": 677,\n\t\"./Script_Extensions/Tagbanwa.js\": 678,\n\t\"./Script_Extensions/Tai_Le.js\": 679,\n\t\"./Script_Extensions/Tai_Tham.js\": 680,\n\t\"./Script_Extensions/Tai_Viet.js\": 681,\n\t\"./Script_Extensions/Takri.js\": 682,\n\t\"./Script_Extensions/Tamil.js\": 683,\n\t\"./Script_Extensions/Tangut.js\": 684,\n\t\"./Script_Extensions/Telugu.js\": 685,\n\t\"./Script_Extensions/Thaana.js\": 686,\n\t\"./Script_Extensions/Thai.js\": 687,\n\t\"./Script_Extensions/Tibetan.js\": 688,\n\t\"./Script_Extensions/Tifinagh.js\": 689,\n\t\"./Script_Extensions/Tirhuta.js\": 690,\n\t\"./Script_Extensions/Ugaritic.js\": 691,\n\t\"./Script_Extensions/Vai.js\": 692,\n\t\"./Script_Extensions/Wancho.js\": 693,\n\t\"./Script_Extensions/Warang_Citi.js\": 694,\n\t\"./Script_Extensions/Yezidi.js\": 695,\n\t\"./Script_Extensions/Yi.js\": 696,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 697,\n\t\"./index.js\": 698,\n\t\"./unicode-version.js\": 699\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 294;","// @flow strict\nimport React from 'react';\nimport { Text } from 'gestalt';\nimport marked, { Renderer } from 'marked';\nimport highlightjs from 'highlight.js';\nimport './Markdown.css';\n\ntype Props = {|\n  text: string,\n  size?: 'md' | 'lg',\n|};\n\n// Source: https://github.com/Thinkmill/react-markings/blob/master/index.js\n// which originally got it from https://github.com/sindresorhus/strip-indent\nconst stripIndent = (str: string): string => {\n  const match = str.match(/^[ \\t]*(?=\\S)/gm);\n  if (!match) {\n    return str;\n  }\n\n  const indent = Math.min(...match.map(x => x.length));\n\n  if (indent === 0) {\n    return str;\n  }\n\n  const re = new RegExp(`^[ \\\\t]{${indent}}`, 'gm');\n  return str.replace(re, '');\n};\n\nexport default function Markdown({ text, size = 'lg' }: Props) {\n  const renderer = new Renderer();\n\n  renderer.code = (code, language) => {\n    const highlight = highlightjs.highlight(language, code).value;\n    return `<pre><code class=\"hljs ${language}\">${highlight}</code></pre>`;\n  };\n\n  const html = marked(stripIndent(text), { renderer });\n\n  return (\n    <Text size={size}>\n      {/* eslint-disable-next-line react/no-danger */}\n      <div className=\"Markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </Text>\n  );\n}\n","// @flow strict\nexport default {\n  plain: {\n    color: '#c5c8c6',\n    backgroundColor: '#111',\n    lineHeight: 1.4,\n    fontSize: 16,\n    fontFamily:\n      'PragmataPro, \"Roboto Mono\", Monaco, Consolas, \"Courier New\", \"Courier, monospace !important',\n  },\n  styles: [\n    {\n      types: ['cdata', 'comment', 'doctype', 'prolog'],\n      style: {\n        color: 'hsl(30, 20%, 50%)',\n      },\n    },\n    {\n      types: ['punctuation'],\n      style: {\n        color: 'rgba(197, 200, 198, 0.7)',\n      },\n    },\n    {\n      types: [\n        'boolean',\n        'constant',\n        'keyword',\n        'number',\n        'property',\n        'symbol',\n        'tag',\n      ],\n      style: {\n        color: 'hsl(350, 40%, 70%)',\n      },\n    },\n    {\n      types: ['selector', 'attr-name', 'string', 'char', 'builtin', 'inserted'],\n      style: {\n        color: 'hsl(75, 70%, 60%)',\n      },\n    },\n    {\n      types: [],\n      style: {\n        color: '#c6c5fe',\n      },\n    },\n    {\n      types: ['operator', 'entity', 'url', 'string', 'variable'],\n      style: {\n        color: 'hsl(40, 90%, 60%)',\n      },\n    },\n    {\n      types: ['atrule', 'attr-value', 'keyword'],\n      style: {\n        color: 'hsl(350, 40%, 70%)',\n      },\n    },\n    {\n      types: ['function'],\n      style: {\n        color: '#dad085',\n      },\n    },\n    {\n      types: ['regex', 'important'],\n      style: {\n        color: '#e90',\n      },\n    },\n    {\n      types: ['important', 'bold'],\n      style: {\n        fontWeight: 'bold',\n      },\n    },\n    {\n      types: ['italic'],\n      style: {\n        fontStyle: 'italic',\n      },\n    },\n    {\n      types: ['entity'],\n      style: {\n        cursor: 'help',\n      },\n    },\n    {\n      types: ['deleted'],\n      style: {\n        color: 'red',\n      },\n    },\n  ],\n};\n","// @flow strict\nimport React from 'react';\nimport * as gestalt from 'gestalt';\nimport LZString from 'lz-string';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport Card from './Card.js';\nimport theme from './atomDark.js';\n\ntype Props = {|\n  defaultCode: string,\n  description?: string,\n  id?: string,\n  name: string,\n  direction?: 'row' | 'column',\n|};\n\nconst { Box, Column, IconButton, Text, Tooltip } = gestalt;\n\nconst compress = object =>\n  LZString.compressToBase64(JSON.stringify(object))\n    .replace(/\\+/g, '-') // Convert '+' to '-'\n    .replace(/\\//g, '_') // Convert '/' to '_'\n    .replace(/=+$/, ''); // Remove ending '='\n\nconst exportDefaultMaybe = ({ code }) =>\n  code.startsWith('function') || code.startsWith('class')\n    ? `export default ${code}`\n    : `const Demo = () => (\n  ${code}\n);\n\nexport default Demo;`;\n\nconst handleCodeSandbox = async ({ code, title }) => {\n  const gestaltComponents = Object.keys(gestalt);\n  const usedComponents = [\n    ...new Set(\n      code.match(/<((\\w+))/g).map(component => component.replace('<', ''))\n    ),\n  ];\n  const components = gestaltComponents.filter(x => usedComponents.includes(x));\n  const parameters = compress({\n    module: '/example.js',\n    files: {\n      'package.json': {\n        content: {\n          title,\n          // description: demoConfig.description,\n          dependencies: {\n            react: 'latest',\n            'react-dom': 'latest',\n            gestalt: 'latest',\n          },\n          devDependencies: {\n            'react-scripts': 'latest',\n          },\n          main: 'index.js',\n          scripts: {\n            start: 'react-scripts start',\n          },\n        },\n      },\n      'index.js': {\n        content: `import React from \"react\";\nimport { render } from \"react-dom\";\nimport Example from \"./example\";\nrender(<Example />, document.querySelector(\"#root\"));`,\n      },\n      'example.js': {\n        content: `import React from \"react\";\nimport \"../node_modules/gestalt/dist/gestalt.css\";\nimport { ${components.join(', ')} } from \"gestalt\";\n\n${exportDefaultMaybe({ code })}`,\n      },\n      'index.html': {\n        content: `<body>\n  <div id=\"root\"></div>\n</body>\n`,\n      },\n    },\n  });\n\n  const formData = new FormData();\n  formData.append('parameters', parameters);\n\n  const url = await fetch(\n    'https://codesandbox.io/api/v1/sandboxes/define?json=1',\n    {\n      method: 'post',\n      body: formData,\n      mode: 'cors',\n    }\n  )\n    .then(response => response.json())\n    .then(({ errors, sandbox_id: id }) => {\n      if (errors) throw errors;\n      return `https://codesandbox.io/s/${id}?module=/example.js`;\n    });\n  window.open(url);\n};\n\nconst Example = ({\n  defaultCode,\n  description,\n  id,\n  name,\n  direction = 'column',\n}: Props) => {\n  const code = defaultCode.trim();\n  return (\n    <Card\n      name={name}\n      description={description}\n      id={id}\n      stacked={direction === 'column'}\n    >\n      <LiveProvider code={code} scope={gestalt} theme={theme}>\n        <Box\n          display=\"flex\"\n          direction={direction}\n          marginLeft={-2}\n          marginRight={-2}\n        >\n          <Column span={direction === 'column' ? 12 : 6}>\n            <Box\n              paddingX={2}\n              display=\"flex\"\n              direction=\"column\"\n              alignItems=\"stretch\"\n              height=\"100%\"\n            >\n              <Box paddingY={2}>\n                <Text size=\"md\" color=\"gray\">\n                  Preview\n                </Text>\n              </Box>\n\n              <Box flex=\"grow\" position=\"relative\">\n                <Box\n                  position=\"absolute\"\n                  left\n                  width={4}\n                  color=\"lightGray\"\n                  height=\"100%\"\n                />\n                <Box position=\"relative\" padding={4}>\n                  <LivePreview />\n                </Box>\n              </Box>\n            </Box>\n          </Column>\n\n          <Column span={direction === 'column' ? 12 : 6}>\n            <Box paddingX={2}>\n              <Box paddingY={2}>\n                <Text size=\"md\" color=\"gray\">\n                  Editor\n                </Text>\n              </Box>\n              <Box position=\"relative\" display=\"flex\" color=\"darkGray\">\n                <Box flex=\"grow\">\n                  <LiveEditor padding={16} />\n                </Box>\n                <Box padding={2}>\n                  <Tooltip inline text=\"Open in CodeSandbox\">\n                    <IconButton\n                      dangerouslySetSvgPath={{\n                        __path:\n                          'M9.365 21.17v-8.645L1.93 8.248v4.928l3.405 1.974v3.705l4.029 2.314zm1.93.05l4.104-2.363v-3.794l3.427-1.986V8.211l-7.53 4.348v8.661zm6.54-14.666L13.878 4.26l-3.475 2.017L6.9 4.257 2.907 6.583l7.452 4.288 7.477-4.316zM0 18.017V6.04L10.377 0l10.38 6.015v11.983l-10.38 5.98L0 18.018z',\n                      }}\n                      accessibilityLabel=\"Open in CodeSandbox\"\n                      iconColor=\"white\"\n                      onClick={() => {\n                        handleCodeSandbox({ code, title: name });\n                      }}\n                    />\n                  </Tooltip>\n                </Box>\n              </Box>\n            </Box>\n          </Column>\n        </Box>\n\n        <Box padding={2}>\n          <Text color=\"watermelon\">\n            <LiveError />\n          </Text>\n        </Box>\n      </LiveProvider>\n    </Card>\n  );\n};\n\nexport default Example;\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Text, Icon, Link } from 'gestalt';\n\ntype Props = {|\n  props: Array<{|\n    defaultValue?: any,\n    description?: ?string,\n    href: ?string,\n    name: string,\n    required?: boolean,\n    responsive?: boolean,\n    type: string,\n  |}>,\n  Component?: React.ComponentType<any>,\n|};\n\nconst Th = ({ children }: {| children?: React.Node |}) => (\n  <th style={{ borderBottom: '2px solid #ddd' }}>\n    <Box padding={2}>\n      <Text size=\"md\" color=\"gray\" overflow=\"normal\" weight=\"bold\">\n        {children}\n      </Text>\n    </Box>\n  </th>\n);\n\nconst Td = ({\n  border = true,\n  children,\n  colspan = 1,\n  shrink = false,\n  color = 'darkGray',\n}: {\n  border?: boolean,\n  children?: React.Node,\n  colspan?: number,\n  shrink?: boolean,\n  color?: 'darkGray' | 'gray',\n}) => (\n  <td\n    style={{\n      verticalAlign: 'top',\n      borderBottom: border && '1px solid #ddd',\n      padding: 0,\n      width: shrink ? '1px' : '',\n    }}\n    colSpan={colspan}\n  >\n    <Box paddingX={2} marginTop={2} marginBottom={border ? 2 : 0}>\n      <Text overflow=\"normal\" color={color}>\n        {children}\n      </Text>\n    </Box>\n  </td>\n);\n\nconst upcase = string => string.charAt(0).toUpperCase() + string.slice(1);\nconst sortBy = (list, fn) => list.sort((a, b) => fn(a).localeCompare(fn(b)));\n\nexport default function PropTable({ props: properties, Component }: Props) {\n  const hasRequired = properties.some(prop => prop.required);\n\n  if (process.env.NODE_ENV === 'development' && Component) {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    const { displayName, propTypes } = Component;\n    const missingProps = Object.keys(propTypes || {}).reduce((acc, prop) => {\n      if (!properties.find(p => p.name === prop)) {\n        return acc.concat(prop);\n      }\n      return acc;\n    }, []);\n    if (missingProps.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `${displayName || ''} is missing ${\n          missingProps.length\n        } PropTable definitions ${missingProps.join(', ')}`\n      );\n    }\n  }\n\n  return (\n    <Box overflow=\"auto\">\n      <table\n        style={{\n          width: '100%',\n          borderCollapse: 'collapse',\n          tableLayout: 'auto',\n        }}\n      >\n        <thead>\n          <tr>\n            {hasRequired && <Th />}\n            <Th>Name</Th>\n            <Th>Type</Th>\n            <Th>Default</Th>\n          </tr>\n        </thead>\n        <tbody>\n          {properties.length > 0 ? (\n            sortBy(\n              properties,\n              ({ required, name }) => `${required ? 'a' : 'b'}${name}`\n            ).reduce(\n              (\n                acc,\n                {\n                  defaultValue,\n                  description,\n                  href,\n                  name,\n                  required,\n                  responsive,\n                  type,\n                },\n                i\n              ) => {\n                acc.push(\n                  <tr key={i}>\n                    {hasRequired && (\n                      <Td shrink border={!description}>\n                        {required && (\n                          <Box paddingY={1}>\n                            <Icon\n                              icon=\"check-circle\"\n                              size={16}\n                              color=\"darkGray\"\n                              accessibilityLabel={`Property ${name} is required`}\n                            />\n                          </Box>\n                        )}\n                      </Td>\n                    )}\n                    <Td shrink border={!description}>\n                      <Box>\n                        <Text overflow=\"normal\" weight=\"bold\">\n                          {href ? (\n                            <Link\n                              href={`#${href}`}\n                              onClick={({ event }) => {\n                                event.preventDefault();\n                                const elem = document.getElementById(href);\n                                if (elem) {\n                                  elem.scrollIntoView({\n                                    block: 'start',\n                                  });\n                                }\n                              }}\n                            >\n                              <code>{name}</code>\n                            </Link>\n                          ) : (\n                            <code>{name}</code>\n                          )}\n                        </Text>\n                      </Box>\n                      {responsive && (\n                        <Box>\n                          <Text>\n                            <code>\n                              sm{upcase(name)}, md{upcase(name)}, lg\n                              {upcase(name)}\n                            </code>\n                          </Text>\n                        </Box>\n                      )}\n                    </Td>\n                    <Td border={!description}>\n                      <code>{type}</code>\n                    </Td>\n                    <Td\n                      shrink\n                      overflow=\"normal\"\n                      color={defaultValue != null ? 'darkGray' : 'gray'}\n                      border={!description}\n                    >\n                      {defaultValue != null ? (\n                        <code>{JSON.stringify(defaultValue)}</code>\n                      ) : (\n                        '-'\n                      )}\n                    </Td>\n                  </tr>\n                );\n                if (description) {\n                  acc.push(\n                    <tr key={`${i}-description`}>\n                      <Td colspan={hasRequired ? 2 : 1} />\n                      <Td colspan={2} overflow=\"normal\" color=\"gray\">\n                        {description}\n                      </Td>\n                    </tr>\n                  );\n                }\n                return acc;\n              },\n              []\n            )\n          ) : (\n            <tr>\n              <Td colspan={3} color=\"gray\">\n                No properties\n              </Td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Box>\n  );\n}\n","// @flow strict\nimport React from 'react';\nimport { Box, Text, Heading, Link } from 'gestalt';\nimport Markdown from './Markdown.js';\n\ntype Props = {|\n  name: string,\n  description?: string,\n|};\n\nconst gestaltPath = component => `packages/gestalt/src/${component}.js`;\n\nconst githubUrl = component =>\n  [\n    'https://github.com/pinterest/gestalt/blob/master',\n    gestaltPath(component),\n  ].join('/');\n\nexport default function ComponentHeader({ name, description = '' }: Props) {\n  return (\n    <Box marginBottom={6}>\n      <Box marginBottom={4}>\n        <Heading>{name}</Heading>\n        <Text color=\"gray\">\n          <Link href={githubUrl(name)} inline>\n            Source\n          </Link>\n        </Text>\n      </Box>\n      {description && <Markdown text={description} size=\"lg\" />}\n    </Box>\n  );\n}\n","// @flow strict\nimport React from 'react';\n\ntype Props = {|\n  size?: number,\n|};\n\nexport default function Checkerboard({ size = 8 }: Props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width=\"100%\"\n      height=\"100%\"\n      style={{ display: 'flex' }}\n      preserveAspectRatio=\"none\"\n    >\n      <pattern\n        id=\"pattern\"\n        x={0}\n        y={0}\n        width={size * 2}\n        height={size * 2}\n        patternUnits=\"userSpaceOnUse\"\n      >\n        <rect\n          fill=\"rgba(0, 0, 0, 0.06)\"\n          x={0}\n          width={size}\n          height={size}\n          y={0}\n        />\n        <rect\n          fill=\"rgba(0, 0, 0, 0.06)\"\n          x={size}\n          width={size}\n          height={size}\n          y={size}\n        />\n      </pattern>\n      <rect fill=\"url(#pattern)\" x={0} y={0} width=\"100%\" height=\"100%\" />\n    </svg>\n  );\n}\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Text } from 'gestalt';\nimport Checkerboard from './Checkerboard.js';\nimport Card from './Card.js';\n\ntype Props = {\n  children: (Object, number) => React.Node,\n  description?: string,\n  heading?: boolean,\n  id?: string,\n  name?: string,\n  fullWidth?: boolean,\n  showValues?: boolean,\n  stacked?: boolean,\n};\n\nconst flatMap = (arr, fn) => arr.map(fn).reduce((a, b) => a.concat(b));\nconst combinations = variationsByField => {\n  const fieldNames = Object.keys(variationsByField);\n\n  if (!fieldNames.length) return [{}];\n\n  const combine = ([fieldName, ...restFieldNames], acc) => {\n    const variationsForField = variationsByField[fieldName];\n\n    if (!Array.isArray(variationsForField) || !variationsForField.length) {\n      throw new Error(\n        `Please provide a non-empty array of possible values for prop ${fieldName}`\n      );\n    }\n\n    const vs = variationsForField.map(fieldValue => ({\n      ...acc,\n      [fieldName]: fieldValue,\n    }));\n\n    if (!restFieldNames.length) {\n      return vs;\n    }\n    return flatMap(vs, newAcc => combine(restFieldNames, newAcc));\n  };\n\n  return combine(fieldNames, {});\n};\n\nconst toReactAttribute = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return value && key;\n    case 'string':\n      return `${key}=${JSON.stringify(value)}`;\n    default:\n      return `${key}={${JSON.stringify(value)}}`;\n  }\n};\n\nexport default function Combination({\n  name = '',\n  description = '',\n  id,\n  showValues = true,\n  stacked = false,\n  fullWidth = false,\n  heading = true,\n  children,\n  ...props\n}: Props) {\n  return (\n    <Card\n      name={name}\n      description={description}\n      id={id}\n      stacked={stacked}\n      heading={heading}\n    >\n      <Box display=\"flex\" wrap>\n        {combinations(props).map((combination, i) => (\n          <Box\n            column={fullWidth ? 12 : 4}\n            mdColumn={fullWidth ? 12 : 3}\n            lgColumn={fullWidth ? 12 : 2}\n            key={i}\n            padding={4}\n            display=\"flex\"\n            direction=\"column\"\n            alignItems=\"center\"\n          >\n            {showValues && (\n              <Box marginBottom={2}>\n                {Object.keys(combination).map(key => (\n                  <Text align=\"center\" size=\"md\" key={`${i}-${key}`}>\n                    {toReactAttribute(key, combination[key])}\n                  </Text>\n                ))}\n              </Box>\n            )}\n            <Box position=\"relative\" padding={4}>\n              <Box position=\"absolute\" top left bottom right>\n                <Checkerboard />\n              </Box>\n              <Box position=\"relative\">{children(combination, i)}</Box>\n            </Box>\n          </Box>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Badge\"\n    description={`The \\`Badge\\` component helps to label text.\n`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'text',\n        type: `string`,\n        required: true,\n      },\n      {\n        name: 'position',\n        type: `\"middle\" | \"top\"`,\n        defaultValue: 'middle',\n        description: 'Badge position relative to its parent element.',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    The `Badge` component is rendered inline within parent element.\"\n    name=\"Example\"\n    defaultCode={`\n<Text>Some text that uses Badge component as its child <Badge text=\"new\" /></Text>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    Larger text looks better with a superscript `Badge`.\"\n    name=\"Example\"\n    defaultCode={`\n  <Heading>Heading <Badge text=\"new\" position=\"top\" /></Heading>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Button } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\nconst marginProps = [\n  { name: 'margin', description: 'Scale is in boints, where 1bt is 4px' },\n  { name: 'marginTop' },\n  { name: 'marginRight' },\n  { name: 'marginBottom' },\n  { name: 'marginLeft' },\n  { name: 'marginStart' },\n  { name: 'marginEnd' },\n].map((prop: {| name: string, description?: string |}) => ({\n  name: prop.name,\n  type: '-12 ... 12 | \"auto\"',\n  defaultValue: 0,\n  responsive: true,\n  description: prop.description,\n  href: 'margins',\n}));\n\nconst absolutePositioningProps = ['left', 'right', 'top', 'bottom'].map(\n  name => ({\n    name,\n    type: 'boolean',\n    defaultValue: false,\n    href: 'absolutePositioning',\n  })\n);\n\nconst paddingProps = ['padding', 'paddingX', 'paddingY'].map(name => ({\n  name,\n  type: '0 .. 12',\n  defaultValue: 0,\n  responsive: true,\n  href: 'padding',\n}));\n\ncard(\n  <PageHeader\n    name=\"Box\"\n    description={`In the darkest night, Box will rise to bring the light. The Lloyd has spoken.\n\n&mdash; Anon _(Winning Box Haiku, 2017)_`}\n  />\n);\n\ncard(\n  <PropTable\n    Component={Box}\n    props={[\n      {\n        name: 'dangerouslySetInlineStyle',\n        type: '{ __style: { [key: string]: string | number | void } }',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'display',\n        type: `\"none\" | \"flex\" | \"block\" | \"inlineBlock\" | \"visuallyHidden\"`,\n        defaultValue: 'block',\n        responsive: true,\n        href: 'display',\n      },\n      {\n        name: 'direction',\n        type: `\"row\" | \"column\"`,\n        defaultValue: 'row',\n        responsive: true,\n        description:\n          'Establishes the main-axis, thus defining the direction flex items are placed in the flex container.',\n      },\n      {\n        name: 'alignContent',\n        type: `\"start\" | \"end\" | \"center\" | \"between\" | \"around\" | \"evenly\" | \"stretch\"`,\n        defaultValue: 'stretch',\n        description:\n          \"Aligns a flex container's lines within when there is extra space in the cross-axis, similar to how justify-content aligns individual items within the main-axis.\",\n      },\n      {\n        name: 'alignItems',\n        type: `\"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\"`,\n        defaultValue: 'stretch',\n        description:\n          'Defines the default behaviour for how flex items are laid out along the cross-axis on the current line. Think of it as the justify-content version for the cross-axis (perpendicular to the main-axis).',\n        href: 'layout',\n      },\n      {\n        name: 'alignSelf',\n        type: `\"auto\" | \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\"`,\n        defaultValue: 'stretch',\n        description:\n          'Allows the default alignment (or the one specified by align-items) to be overridden for individual flex items.',\n      },\n      {\n        name: 'borderSize',\n        type: `\"sm\" | \"lg\" | \"none\"`,\n        defaultValue: 'none',\n        description:\n          'Specify a border width for the box. \"sm\" is 1px and \"lg\" is 2px. Setting a size will always default the border style to solid and color to lightGray',\n        href: 'border',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"darkGray\" | \"darkWash\" | \"eggplant\" | \"gray\" | \"green\" | \"lightGray\" | \"lightWash\" | \"maroon\" | \"midnight\" | \"navy\" | \"olive\" | \"orange\" | \"orchid\" | \"pine\" | \"purple\" | \"red\" | \"transparent\" | \"transparentDarkGray\" | \"watermelon\" | \"white\"`,\n        defaultValue: 'transparent',\n        href: 'color',\n      },\n      { name: 'fit', type: 'boolean', defaultValue: false },\n      {\n        name: 'flex',\n        type: '\"grow\" | \"shrink\" | \"none\"',\n        defaultValue: 'shrink',\n        description: `Defines how a flex item will be sized. \"grow\", equivalent to \"flex: 1 1 auto\", will size the Box relative to its parent, growing and shrinking based on available space. \"shrink\", equivalent to \"flex: 0 1 auto\" (the browser default), allows the Box to shrink if compressed but not grow if given extra space. Finally, \"none\", equivalent to \"flex: 0 0 auto\", preserves the Box's size based on child content regardless of its container's size.`,\n      },\n      {\n        name: 'justifyContent',\n        type: `\"start\" | \"end\" | \"center\" | \"between\" | \"around\" | \"evenly\"`,\n        defaultValue: 'start',\n        description:\n          'Defines the alignment along the main axis. It helps distribute extra free space left over when either all the flex items on a line are inflexible, or are flexible but have reached their maximum size. It also exerts some control over the alignment of items when they overflow the line.',\n        href: 'layout',\n      },\n      ...absolutePositioningProps,\n      ...marginProps,\n      {\n        name: 'column',\n        type: `0 .. 12`,\n        responsive: true,\n      },\n      {\n        name: 'maxHeight',\n        type: `number | string`,\n      },\n      {\n        name: 'maxWidth',\n        type: `number | string`,\n        description: `Use numbers for pixels: maxWidth={100} and strings for percentages: maxWidth=\"100%\"`,\n      },\n      {\n        name: 'minHeight',\n        type: `number | string`,\n        description: `Use numbers for pixels: minHeight={100} and strings for percentages: minHeight=\"100%\"`,\n      },\n      {\n        name: 'minWidth',\n        type: `number | string`,\n        description: `Use numbers for pixels: minWidth={100} and strings for percentages: minWidth=\"100%\"`,\n      },\n      {\n        name: 'height',\n        type: `number | string`,\n        description: `Use numbers for pixels: height={100} and strings for percentages: height=\"100%\"`,\n      },\n      {\n        name: 'width',\n        type: `number | string`,\n        description: `Use numbers for pixels: width={100} and strings for percentages: width=\"100%\"`,\n      },\n      {\n        name: 'opacity',\n        type: `0 | 0.1 | 0.2 | 0.3 | 0.4 | 0.5 | 0.6 | 0.7 | 0.8 | 0.9 | 1`,\n      },\n      {\n        name: 'overflow',\n        type: `\"visible\" | \"hidden\" | \"scroll\" | \"scrollX\" | \"scrollY\" | \"auto\"`,\n        defaultValue: 'visible',\n      },\n      ...paddingProps,\n      {\n        name: 'position',\n        type: `\"static\" | \"absolute\" | \"relative\" | \"fixed\"`,\n        defaultValue: 'static',\n        href: 'absolutePositioning',\n      },\n      {\n        name: 'rounding',\n        type: `\"pill\" | \"circle\" | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8`,\n        href: 'rounding',\n      },\n      {\n        name: 'wrap',\n        type: 'boolean',\n        defaultValue: false,\n        description: `By default, flex items will all try to fit onto one line. You can change that and allow the items to wrap onto multiple lines, from top to bottom.`,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    The [media object](http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/) is a common pattern for displaying data. What's interesting about this example is the use of \\`flex\\` to align the items. If you try changing the size of the \\`Avatar\\` or the number of lines of \\`Text\\`, both will stay aligned because they are center aligned.\n\n    Also, this is a good example of symmetrical padding. Try re-ordering the \\`Avatar\\` and the \\`Box\\` containing the text. You don't need to do any styling to keep the padding the same because it's symmetrical (\\`paddingX\\`). People often use something like \\`marginStart\\` here but in doing so you lose flexibility and have to change styling if you make changes to the structure.\n  `}\n    name=\"Example: Media object\"\n    defaultCode={`\n<Box\n  alignItems=\"center\"\n  direction=\"row\"\n  display=\"flex\"\n  marginStart={-1}\n  marginEnd={-1}\n>\n  <Box paddingX={1}>\n    <Avatar name=\"chrislloyd\" size=\"md\" />\n  </Box>\n  <Box paddingX={1}>\n    <Text weight=\"bold\">Chris Lloyd</Text>\n    <Text>joined 2 years ago</Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    In this example we use \\`flex=\"grow\"\\` to mark a flex child as something that can expand. Try removing the \\`grow\\` property and see what happens.\n  `}\n    name=\"Example: Double-sided media object\"\n    defaultCode={`\n<Box\n  alignItems=\"center\"\n  direction=\"row\"\n  display=\"flex\"\n  marginStart={-1}\n  marginEnd={-1}\n>\n  <Box paddingX={1}>\n    <Avatar name=\"chrislloyd\" size=\"md\" />\n  </Box>\n  <Box paddingX={1}  flex=\"grow\">\n    <Text weight=\"bold\">Chris Lloyd</Text>\n    <Text>joined 2 years ago</Text>\n  </Box>\n  <Box paddingX={1}>\n    <Button text=\"Follow\" size=\"sm\" color=\"red\" />\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Setting \\`display=\"visuallyHidden\"\\` on \\`Box\\` allows for an element to be visually hidden but still be read by screenreaders.\n  `}\n    id=\"display\"\n    name=\"Example: Visually Hidden\"\n    defaultCode={`\n<>\n  <Text>Enable your screenreader to hear the following text:</Text>\n  <Box display=\"visuallyHidden\">In the darkest night, Box will rise to bring the light. The Lloyd has spoken.</Box>\n</>\n`}\n  />\n);\n\ncard(\n  <Combination\n    description={`\n    Box uses Flexbox to achieve layout. If you're new to flex layout, please read the excellent [CSS-Tricks guide to flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n  `}\n    id=\"layout\"\n    name=\"Layout\"\n    // alignContent={['start', 'end', 'center', 'between', 'around', 'stretch']}\n    justifyContent={['start', 'end', 'center', 'between', 'around']}\n    alignItems={['start', 'end', 'center', 'baseline', 'stretch']}\n  >\n    {props => (\n      <Box display=\"flex\" width={96} {...props}>\n        <Box margin={1} color=\"gray\" height={8} width={8} />\n        <Box margin={1} color=\"gray\" height={16} width={8} />\n        <Box margin={1} color=\"gray\" height={32} width={8} />\n      </Box>\n    )}\n  </Combination>\n);\n\ncard(\n  <Card\n    description={`\n    As of Gestalt v0.86.0, \\`Box\\` supports React's new [\\`forwardRef\\`](https://reactjs.org/docs/forwarding-refs.html) functionality.\n    This allows you to set a \\`ref\\` on the actual \\`<Box />\\` component and it will be passed down to the underlying \\`<div>\\` element.\n    The \\`ref\\` can be set through any of the supported React methods and accessing it will yield the \\`<div>\\` that \\`Box\\` implements.\n  `}\n    name=\"Refs\"\n  />\n);\n\ncard(\n  <Card\n    description={`\n    Box is a pass-through component, meaning that any other properties you provide to it will be directly applied to the underlying \\`<div>\\`. There are exceptions, however. \\`onClick\\`, \\`className\\` and \\`style\\` aren't passed to the child component. The former is for accessibility reasons, and the latter two are to ensure style encapsulation.\n\n    If you need to use these features, please use a \\`<div>\\` instead.\n  `}\n    name=\"Blacklisted properties\"\n  />\n);\n\nconst PaddingSwatch = (props: *) => (\n  <Box\n    {...props}\n    dangerouslySetInlineStyle={{\n      __style: { backgroundColor: 'rgba(0, 0, 255, 0.2)' },\n    }}\n  >\n    <Box color=\"white\" padding={1}>\n      {props.label}\n    </Box>\n  </Box>\n);\n\ncard(\n  <Card\n    description={`\n    Padding is applied in boints and is always symmetric. You should try to use padding before you use margins as they compose better and don't collapse.\n\n    ~~~jsx\n    <Box padding={1} />\n    <Box paddingX={1} />\n    <Box paddingY={1} />\n    ~~~\n  `}\n    id=\"padding\"\n    name=\"Padding\"\n  >\n    <Box\n      display=\"flex\"\n      direction=\"row\"\n      justifyContent=\"between\"\n      alignItems=\"center\"\n      wrap\n    >\n      <PaddingSwatch padding={1} label=\"1\" />\n      <PaddingSwatch paddingX={1} label=\"X=1\" />\n      <PaddingSwatch paddingY={1} label=\"Y=1\" />\n    </Box>\n  </Card>\n);\n\nconst MarginSwatch = (props: *) => (\n  <Box\n    margin={1}\n    dangerouslySetInlineStyle={{\n      __style: { backgroundColor: 'rgba(255, 0, 0, 0.2)' },\n    }}\n  >\n    <Box\n      padding={1}\n      {...props}\n      dangerouslySetInlineStyle={{\n        __style: { backgroundColor: 'rgba(0, 0, 255, 0.2)' },\n      }}\n    >\n      {JSON.stringify(props)}\n    </Box>\n  </Box>\n);\n\ncard(\n  <Card\n    description={`\n    Margins are applied in boints and are asymmetric. Margins can be -6 to 6 boints. You can set margin to be auto in the left and right axis.\n\n    In the example on the right the outer \\`Box\\` is in transparent red, and the inner \\`Box\\` is transparent blue.\n\n    Instead of using \\`marginLeft\\` and \\`marginRight\\`, opt for the RTL-language-aware \\`marginStart\\` and \\`marginEnd\\`.\n\n    ~~~jsx\n    <Box margin={1} />\n    <Box marginTop={1} />\n    <Box marginBottom={1} />\n    <Box marginStart={1} />\n    <Box marginEnd={1} />\n    ~~~\n  `}\n    id=\"margins\"\n    name=\"Margins\"\n  >\n    <Box\n      display=\"flex\"\n      direction=\"row\"\n      justifyContent=\"between\"\n      alignItems=\"center\"\n      wrap\n    >\n      <MarginSwatch margin={1} />\n      <MarginSwatch marginTop={1} />\n      <MarginSwatch marginBottom={1} />\n      <MarginSwatch marginStart={1} />\n      <MarginSwatch marginEnd={1} />\n    </Box>\n    <Box\n      display=\"flex\"\n      direction=\"row\"\n      justifyContent=\"between\"\n      alignItems=\"center\"\n      wrap\n    >\n      <MarginSwatch margin={-1} />\n      <MarginSwatch marginTop={-1} />\n      <MarginSwatch marginBottom={-1} />\n      <MarginSwatch marginStart={-1} />\n      <MarginSwatch marginEnd={-1} />\n    </Box>\n  </Card>\n);\n\ncard(\n  <Card\n    description={`\n    Auto margin is a useful tool when using flexbox layouts. When a flex container has extra space and no components are set to grow, the browser would normally place elements next to each other. By setting any of the margin properties to \"auto\", the margin will extend to fill the extra space.\n\n    ~~~jsx\n    <Box display=\"flex\" direction=\"column\" height={120} color=\"green\">\n      <Box>This is a title!</Box>\n      <Box>This one is a subtitle.</Box>\n      <Box marginTop=\"auto\">\n        I’m pushed to the bottom due to marginTop: auto.\n      </Box>\n    </Box>\n    ~~~\n  `}\n    id=\"auto-margin\"\n    name=\"Auto Margin\"\n  >\n    <Box display=\"flex\" direction=\"column\" height={120} color=\"green\">\n      <Box>This is a title!</Box>\n      <Box>This one is a subtitle.</Box>\n      <Box marginTop=\"auto\">\n        I’m pushed to the bottom due to marginTop: auto.\n      </Box>\n    </Box>\n  </Card>\n);\n\nconst toggleRTL = () => {\n  if (document.documentElement) {\n    const isRTL = document.documentElement.dir === 'rtl';\n    document.documentElement.dir = isRTL ? 'ltr' : 'rtl';\n  }\n};\n\ncard(\n  <Card\n    description={`\n    Some languages (ex. Arabic, Hebrew) read from right to left (RTL) instead of from left to right. \\`marginStart\\` and \\`marginEnd\\` are margins that offer RTL support.\n\n    \\`marginStart\\` is a left margin that flips to a right margin in a RTL layout.\n\n    \\`marginEnd\\` is a right margin that flips to a left margin in a RTL layout.\n\n    You can toggle the page direction using the button below to see this behavior.\n    `}\n    name=\"Page Direction\"\n  >\n    <Box maxWidth={200} marginBottom={2}>\n      <Button size=\"sm\" onClick={toggleRTL} text=\"Toggle Page Direction\" />\n      <MarginSwatch marginStart={1} />\n      <MarginSwatch marginEnd={1} />\n      <MarginSwatch marginStart={-1} />\n      <MarginSwatch marginEnd={-1} />\n    </Box>\n  </Card>\n);\n\ncard(\n  <Example\n    description={`\n    Position is static by default but can be made absolute. \\`Box\\` has helpers to help align to absolute edges (top, bottom, left, right). These can be used in combination with padding to achieve desired offsets from edges.\n  `}\n    id=\"absolutePositioning\"\n    name=\"Example: Absolute positioning\"\n    defaultCode={`\n<Box position=\"relative\" color=\"white\" height={200}>\n  <Box position=\"absolute\" top left padding={1}>\n    Top, left\n  </Box>\n  <Box position=\"absolute\" top right padding={1}>\n    Top, right\n  </Box>\n  <Box position=\"absolute\" bottom left padding={1}>\n    Bottom, left\n  </Box>\n  <Box position=\"absolute\" bottom right padding={1}>\n    Bottom, right\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    Borders are controlled by the \"borderSize\" prop. Setting a size enables a solid light gray color in that width.\n  `}\n    id=\"border\"\n    name=\"Borders\"\n  >\n    <Combination borderSize={['sm', 'lg']}>\n      {props => (\n        <Box\n          width={60}\n          height={60}\n          rounding=\"circle\"\n          color=\"white\"\n          {...props}\n        />\n      )}\n    </Combination>\n  </Card>\n);\n\ncard(\n  <Combination\n    id=\"color\"\n    name=\"Colors\"\n    color={[\n      'red',\n      'white',\n      'lightGray',\n      'gray',\n      'darkGray',\n      'green',\n      'pine',\n      'olive',\n      'blue',\n      'navy',\n      'midnight',\n      'purple',\n      'orchid',\n      'eggplant',\n      'maroon',\n      'watermelon',\n      'orange',\n      'transparent',\n      'transparentDarkGray',\n      'lightWash',\n      'darkWash',\n    ]}\n  >\n    {props => <Box width={60} height={60} rounding=\"circle\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Card\n    description={`\n    Sets a border radius for the Box. Options are \"circle\" or \"pill\" for fully rounded corners or 0-8 representing the radius in boints.\n  `}\n    id=\"rounding\"\n    name=\"Rounding\"\n  >\n    <Combination rounding={['pill', 'circle', 0, 1, 2, 3, 4, 5, 6, 7, 8]}>\n      {props => (\n        <Box\n          color=\"gray\"\n          width={props.rounding === 'pill' ? 120 : 70}\n          height={70}\n          {...props}\n        />\n      )}\n    </Combination>\n  </Card>\n);\n\ncard(\n  <Card\n    description={`\n    Sets a css opacity value for the Box. Be sure to maintain accessibility when using this prop. The contrast of the text should still be <a href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\" target=\"_blank\">WCAG 2.0 AA compatible</a>.\n  `}\n    id=\"opacity\"\n    name=\"Opacity\"\n  >\n    <Combination opacity={[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]}>\n      {props => <Box color=\"darkGray\" width={60} height={60} {...props} />}\n    </Combination>\n  </Card>\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Button } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Button\"\n    description=\"\nA form component that should be used to make something happen on the same page (i.e. open a modal).\nYou are able to specify the color, type, and width of buttons to change their appearance.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityExpanded',\n        type: 'boolean',\n        description:\n          'Use this property on elements that can expand to reveal additional information',\n      },\n      {\n        name: 'accessibilityHaspopup',\n        type: 'boolean',\n        description:\n          'Indicates that the element has a popup context menu or sub-level menu.',\n      },\n      {\n        name: 'accessibilityLabel',\n        type: 'string',\n        description:\n          'String that clients such as VoiceOver will read to describe the element. Always localize the label.',\n        href: 'accessibilityLabel',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"gray\" | \"red\" | \"transparent\" | \"white\"`,\n        defaultValue: 'gray',\n        href: 'color',\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'combinations',\n      },\n      {\n        name: 'selected',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'combinations',\n      },\n      {\n        name: 'iconEnd',\n        type: '$Keys<typeof icons>',\n        description:\n          'Add an icon to be displayed after the button text. This allows type checking for a valid icon name based on the keys from the list of icons in Icon.',\n        href: 'iconEnd',\n      },\n      {\n        name: 'inline',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'widths',\n      },\n      {\n        name: 'name',\n        type: 'string',\n      },\n      {\n        name: 'onClick',\n        type: '({ event: SyntheticMouseEvent<> }) => void',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\" | \"lg\"`,\n        defaultValue: 'md',\n        description: 'sm: 32px, md: 40px, lg: 48px',\n        href: 'combinations',\n      },\n      {\n        name: 'text',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'textColor',\n        type: `\"blue\" | \"red\" | \"darkGray\" | \"white\"`,\n        description:\n          'The color for the text shown inside the Button. Note: should only be used for \"white\" buttons',\n        href: 'textColor',\n      },\n      {\n        name: 'type',\n        type: `\"submit\" | \"button\"`,\n        defaultValue: 'button',\n        href: 'types',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example\"\n    defaultCode={`\n<Button text=\"Medium sized button\" inline />\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    There are two different width options for buttons. The inline buttons are\n    are sized by the text within the button, whereas the default block buttons\n    expand to the full width of their container. The default \\`inline\\` is false.\n  `}\n    id=\"widths\"\n    name=\"Widths\"\n    defaultCode={`\n<Box margin={-2}>\n  <Box padding={2}>\n    <Button text=\"Inline button\" inline />\n  </Box>\n  <Box padding={2}>\n    <Button text=\"Default full width button\" />\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\\`transparent\\` and \\`white\\` are our secondary colors for \\`Button\\`.`}\n    id=\"color\"\n    name=\"Colors: Dark Backgrounds\"\n    defaultCode={`\n<Box color=\"darkGray\" maxWidth={320} rounding={2} padding={4}>\n  <Box marginBottom={4}>\n    <Text color=\"white\">\n      Explore today’s trending ideas, curated finds, and personalized\n      picks.\n    </Text>\n  </Box>\n  <Box display=\"flex\" direction=\"row\" marginLeft={-2} marginRight={-2}>\n    <Box display=\"flex\" direction=\"row\" column={6} paddingX={2}>\n      <Button color=\"transparent\" text=\"Later\" />\n    </Box>\n    <Box column={6} paddingX={2}>\n      <Button color=\"white\" text=\"Learn more\" />\n    </Box>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`When using the \\`white\\` background color for \\`Button\\` it may become necessary to\n      override the text color within the button to match that of the parent's background. For this you\n      may use the \\`textColor\\` prop to manually set the text color. NOTE: please refrain from overriding\n      the text color for any button besides those with white background as it breaks our design standards.`}\n    id=\"textColor\"\n    name=\"Text colors\"\n    defaultCode={`\n<Box display=\"flex\">\n  <Box color=\"blue\" maxWidth={320} rounding={2} padding={4} margin={4}>\n    <Box marginBottom={4}>\n      <Text color=\"white\">\n        Click to crop, rotate, apply filters, or edit your image.\n      </Text>\n    </Box>\n    <Box display=\"flex\" direction=\"row\" marginLeft={-2} marginRight={-2}>\n      <Box display=\"flex\" direction=\"row\" column={6} paddingX={2}>\n        <Button color=\"transparent\" text=\"Later\" />\n      </Box>\n      <Box column={6} paddingX={2}>\n        <Button color=\"white\" textColor=\"blue\" text=\"Got it\" />\n      </Box>\n    </Box>\n  </Box>\n  <Box color=\"red\" maxWidth={320} rounding={2} padding={4} margin={4}>\n    <Box marginBottom={4}>\n      <Text color=\"white\">\n        Oops, something went wrong! Would you like to try again?\n      </Text>\n    </Box>\n    <Box display=\"flex\" direction=\"row\" marginLeft={-2} marginRight={-2}>\n      <Box display=\"flex\" direction=\"row\" column={6} paddingX={2}>\n        <Button color=\"transparent\" text=\"Cancel\" />\n      </Box>\n      <Box column={6} paddingX={2}>\n        <Button color=\"white\" textColor=\"red\" text=\"Try again\" />\n      </Box>\n    </Box>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\nA \"selected\" state should be used as a toggle state to turn something on or off.\n  `}\n    id=\"selected\"\n    name=\"Selected state\"\n    defaultCode={`\n\nfunction Example() {\n  const [selected, setSelected] = React.useState(true);\n  return (\n    <Button\n      inline\n      color=\"red\"\n      selected={selected}\n      onClick={() => {setSelected(!selected)}}\n      text={selected ? 'Selected' : 'Deselected'}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    There are 2 types of buttons: button and submit. Use the \\`submit\\` type when you do not\n    need to specify an \\`onClick\\` handler. The default type is \\`button\\`.\n  `}\n    id=\"types\"\n    name=\"Types\"\n    defaultCode={`\n<Box margin={-2} display=\"flex\">\n  <Box padding={2}>\n    <Button onClick={() => {}} text=\"Clear\" type=\"button\" inline />\n  </Box>\n  <Box padding={2}>\n    <Button color=\"red\" text=\"Submit\" type=\"submit\" inline />\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Sometimes an icon can help clarify the usage of the button. Menus are a common use case.\n  `}\n    id=\"iconEnd\"\n    name=\"Icons\"\n    defaultCode={`\nfunction MenuButtonExample() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef();\n\n  return (\n    <>\n      <Box display=\"inlineBlock\" ref={anchorRef}>\n        <Button\n          accessibilityExpanded={!!open}\n          accessibilityHaspopup\n          color=\"white\"\n          iconEnd=\"arrow-down\"\n          inline\n          onClick={() => setOpen(!open)}\n          text=\"Menu\"\n        />\n      </Box>\n\n      {open && (\n        <Layer>\n          <Flyout\n            anchor={anchorRef.current}\n            idealDirection=\"down\"\n            onDismiss={() => setOpen(false)}\n            positionRelativeToAnchor={false}\n            size=\"md\"\n          >\n            <Box direction=\"column\" display=\"flex\" padding={2}>\n              <Box padding={2}>\n                <Text weight=\"bold\">\n                  Option 1\n                </Text>\n              </Box>\n              <Box padding={2}>\n                <Text weight=\"bold\">\n                  Option 2\n                </Text>\n              </Box>\n            </Box>\n          </Flyout>\n        </Layer>\n      )}\n    </>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    We want to make sure every button on the page is unique when being read by screenreader.\n    \\`accessibilityLabel\\` allows us to update the spoken text.\n\n    Be sure to internationalize your \\`accessibilityLabel\\`!\n  `}\n    id=\"accessibilityLabel\"\n    name=\"Accessibility Label\"\n    defaultCode={`\n<Box margin={-2} display=\"flex\">\n  <Box padding={2}>\n    <Button accessibilityLabel=\"Add James\" text=\"Add\" inline />\n  </Box>\n  <Box padding={2}>\n    <Button accessibilityLabel=\"Add Irene\" text=\"Add\" inline />\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"combinations\"\n    name=\"Combinations\"\n    color={['gray', 'red']}\n    disabled={[false, true]}\n    selected={[false, true]}\n    size={['sm', 'md', 'lg']}\n  >\n    {(props, i) => (\n      <Button\n        id={`example-${i}`}\n        onChange={() => {}}\n        {...props}\n        text=\"Button\"\n      />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Card\"\n    description=\"\nThe Card component is meant to highlight content in grids. It visually shows that items belong together and highlights the items on hover.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'active',\n        type: '?boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'image',\n        type: 'React.Node',\n      },\n      {\n        name: 'onMouseEnter',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> })',\n      },\n      {\n        name: 'onMouseLeave',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> })',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Using \\`Card\\` is as easy as it can be, simply wrap your component(s) with it. Ideally all of the children should be clickable and cover 100% of the area\n  `}\n    name=\"Example\"\n    defaultCode={`\nfunction CardExample() {\n  return (\n    <Box maxWidth={236} padding={2} column={12}>\n      <Card image={<Avatar name=\"James Jones\" src=\"https://i.ibb.co/2Fc00R3/james.jpg\" />}>\n        <Text align=\"center\" weight=\"bold\">\n          <Link href=\"https://pinterest.com\">\n            <Box paddingX={3} paddingY={2}>\n              James Jones\n            </Box>\n          </Link>\n        </Text>\n        <Button\n          accessibilityLabel=\"Follow James Jones\"\n          color=\"red\"\n          text=\"Follow\"\n        />\n      </Card>\n    </Box>\n  );\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Checkbox } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Checkbox\"\n    description={\n      'We recommending using a Checkbox over a Switch when you have a long list (>3) of toggles.'\n    }\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'checked',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'combinations',\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'combinations',\n      },\n      {\n        name: 'errorMessage',\n        type: 'string',\n      },\n      {\n        name: 'hasError',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'hasError',\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'indeterminate',\n        type: 'boolean',\n        defaultValue: false,\n        description: `Indeterminism is\npurely presentational - the value of\na checkbox and its indeterminism are independent.`,\n        href: 'combinations',\n      },\n      {\n        name: 'label',\n        type: 'string',\n      },\n      {\n        name: 'name',\n        type: 'string',\n      },\n      {\n        name: 'onChange',\n        type: `({ event: SyntheticInputEvent<>, checked: boolean }) => void`,\n        required: true,\n      },\n      {\n        name: 'onClick',\n        type: `({ event: SyntheticInputEvent<HTMLInputElement>, checked: boolean }) => void`,\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\"`,\n        defaultValue: 'md',\n        description: `\"sm\" is 16px & \"md\" is 24px`,\n        href: 'combinations',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"single\"\n    name=\"Example\"\n    defaultCode={`\nfunction CheckboxExample() {\n  const [checked, setChecked] = React.useState(true);\n\n  return (\n      <Checkbox\n        checked={checked}\n        id=\"usa\"\n        label=\"United States of America\"\n        name=\"usa\"\n        onChange={({ checked }) => {\n          setChecked(checked);\n        }}\n      />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"group\"\n    description=\"Here is an example of an accessible group of checkboxes.\"\n    name=\"Example: Group\"\n    defaultCode={`\nfunction CheckboxExample() {\n    const [checkedEn, setCheckedEn] = React.useState(false);\n    const [checkedSp, setCheckedSp] = React.useState(false);\n    const [checkedCh, setCheckedCh] = React.useState(false);\n\n  return (\n    <Box margin={-2}>\n      <Box padding={2}>\n        <Checkbox\n          checked={checkedEn}\n          id=\"english\"\n          label=\"English\"\n          name=\"english\"\n          onChange={({ checked }) => {\n            setCheckedEn(checked);\n          }}\n        />\n      </Box>\n      <Box padding={2}>\n        <Checkbox\n          checked={checkedSp}\n          id=\"spanish\"\n          label=\"Spanish\"\n          name=\"spanish\"\n          onChange={({ checked }) => {\n            setCheckedSp(checked);\n          }}\n        />\n      </Box>\n      <Box padding={2}>\n        <Checkbox\n          checked={checkedCh}\n          id=\"chinese\"\n          label=\"Chinese\"\n          name=\"chinese\"\n          onChange={({ checked }) => {\n            setCheckedCh(checked);\n          }}\n        />\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"Here is an example of a checkbox showing an error message.\"\n    id=\"hasError\"\n    name=\"Example: Error state\"\n    defaultCode={`\nfunction CheckboxExample() {\n  return (\n      <Checkbox\n        id=\"error\"\n        errorMessage=\"This checkbox has an error\"\n        label=\"Email\"\n        name=\"error\"\n        onChange={() => {}}\n      />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"combinations\"\n    checked={[false, true]}\n    hasError={[false, true]}\n    disabled={[false, true]}\n    indeterminate={[false, true]}\n    size={['sm', 'md']}\n    heading={false}\n  >\n    {(props, i) => (\n      <Checkbox id={`example-${i}`} onChange={() => {}} {...props} />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Collage\"\n    description=\"\nLike Masonry, Collage creates a deterministic grid layout that can absolutely position and virtualize images.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'columns',\n        type: 'number',\n        description: 'Number of columns (2 - 4)',\n        required: true,\n        href: 'columns',\n      },\n      {\n        name: 'cover',\n        type: 'boolean',\n        description: 'Whether or not the first image is a cover image',\n        defaultValue: false,\n        href: 'coverImage',\n      },\n      {\n        name: 'gutter',\n        type: 'number',\n        description: 'The amount of vertical & horizontal space between images',\n        defaultValue: 0,\n        href: 'gutter',\n      },\n      {\n        name: 'height',\n        type: 'number',\n        description: 'Height of the collage',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'layoutKey',\n        type: 'number',\n        description: `\n        Depending on the number of columns of the collage, there may be multiple layouts available.\n        If there are N layouts available, (layoutKey % N) will determine which layout is used.\n        `,\n        defaultValue: 0,\n        href: 'layoutKey',\n      },\n      {\n        name: 'renderImage',\n        type:\n          '({ width: number, height: number, index: number }) => React.Node',\n        description: 'Render prop for the collage images',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'width',\n        type: 'number',\n        description: 'Width of the collage',\n        required: true,\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Basic example\"\n    defaultCode={`\n<Collage\n  columns={3}\n  height={300}\n  width={300}\n  renderImage={({ index, width, height }) => {\n    const images = [\n      {\n        color: 'rgb(111, 91, 77)',\n        naturalHeight: 751,\n        naturalWidth: 564,\n        src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n      },\n      {\n        color: 'rgb(231, 186, 176)',\n        naturalHeight: 200,\n        naturalWidth: 98,\n        src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n      },\n      {\n        color: '#000',\n        naturalHeight: 300,\n        naturalWidth: 200,\n        src: 'https://i.ibb.co/d0pQsJz/stock3.jpg',\n      },\n      {\n        color: '#000',\n        naturalHeight: 517,\n        naturalWidth: 564,\n        src: 'https://i.ibb.co/SB0pXgS/stock4.jpg',\n      },\n      {\n        color: '#000',\n        naturalHeight: 806,\n        naturalWidth: 564,\n        src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n      },\n      {\n        color: '#000',\n        naturalHeight: 200,\n        naturalWidth: 200,\n        src: 'https://i.ibb.co/FY2MKr5/stock6.jpg',\n      },\n    ];\n    const image = images[index];\n    return (\n      <Mask wash width={width} height={height}>\n        <Image\n          alt=\"collage image\"\n          color={image.color}\n          fit=\"cover\"\n          naturalHeight={image.naturalHeight}\n          naturalWidth={image.naturalWidth}\n          src={image.src}\n        />\n      </Mask>\n    );\n  }}\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"columns\"\n    name=\"Different columns\"\n    description=\"2 - 4 columns\"\n    defaultCode={`\n<Box display=\"flex\" wrap>\n  {[2, 3, 4].map((columns) => (\n    <Box key={columns} padding={2}>\n      <Box><Text>columns = {columns}</Text></Box>\n      <Collage\n        columns={columns}\n        height={150}\n        width={150}\n        renderImage={({ index, width, height }) => {\n          const images = [\n            {\n              color: 'rgb(111, 91, 77)',\n              naturalHeight: 751,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n            },\n            {\n              color: 'rgb(231, 186, 176)',\n              naturalHeight: 200,\n              naturalWidth: 98,\n              src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 300,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/d0pQsJz/stock3.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 517,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/SB0pXgS/stock4.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 806,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 200,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/FY2MKr5/stock6.jpg',\n            },\n          ];\n          const image = images[index];\n          return (\n            <Mask wash width={width} height={height}>\n              {image ? (\n                <Image\n                  alt=\"collage image\"\n                  color={image.color}\n                  fit=\"cover\"\n                  naturalHeight={image.naturalHeight}\n                  naturalWidth={image.naturalWidth}\n                  src={image.src}\n                />\n              ) : (\n                <Box\n                  color=\"lightGray\"\n                  height={height}\n                  width={width}\n                />\n              )}\n            </Mask>\n          );\n        }}\n      />\n    </Box>\n  ))}\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"gutter\"\n    name=\"Gutter\"\n    defaultCode={`\n<Box color=\"gray\" width={300} height={300}>\n  <Collage\n    columns={3}\n    gutter={8}\n    height={300}\n    width={300}\n    renderImage={({ index, width, height }) => {\n      const images = [\n        {\n          color: 'rgb(111, 91, 77)',\n          naturalHeight: 751,\n          naturalWidth: 564,\n          src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n        },\n        {\n          color: 'rgb(231, 186, 176)',\n          naturalHeight: 200,\n          naturalWidth: 98,\n          src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n        },\n        {\n          color: '#000',\n          naturalHeight: 300,\n          naturalWidth: 200,\n          src: 'https://i.ibb.co/d0pQsJz/stock3.jpg',\n        },\n        {\n          color: '#000',\n          naturalHeight: 517,\n          naturalWidth: 564,\n          src: 'https://i.ibb.co/SB0pXgS/stock4.jpg',\n        },\n        {\n          color: '#000',\n          naturalHeight: 806,\n          naturalWidth: 564,\n          src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n        },\n        {\n          color: '#000',\n          naturalHeight: 200,\n          naturalWidth: 200,\n          src: 'https://i.ibb.co/FY2MKr5/stock6.jpg',\n        },\n      ];\n      const image = images[index];\n      return (\n        <Mask wash width={width} height={height}>\n          <Image\n            alt=\"collage image\"\n            color={image.color}\n            fit=\"cover\"\n            naturalHeight={image.naturalHeight}\n            naturalWidth={image.naturalWidth}\n            src={image.src}\n          />\n        </Mask>\n      );\n    }}\n  />\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"coverImage\"\n    name=\"Cover image\"\n    defaultCode={`\n<Box color=\"gray\" width={300} height={300}>\n  <Collage\n    columns={3}\n    cover\n    height={300}\n    gutter={8}\n    renderImage={({ index, width, height }) => {\n      const coverImage = {\n        color: '#000',\n        naturalHeight: 806,\n        naturalWidth: 564,\n        src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n      };\n      const nonCoverImages = [\n        {\n          color: 'rgb(111, 91, 77)',\n          naturalHeight: 751,\n          naturalWidth: 564,\n          src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n        },\n        {\n          color: 'rgb(231, 186, 176)',\n          naturalHeight: 200,\n          naturalWidth: 98,\n          src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n        },\n      ];\n      const image = index === 0 ? coverImage : nonCoverImages[index - 1];\n      return (\n        <Mask width={width} height={height}>\n          <Image\n            alt=\"cover image\"\n            src={image.src}\n            color={image.color}\n            naturalHeight={image.naturalHeight}\n            naturalWidth={image.naturalWidth}\n            fit=\"cover\"\n          />\n        </Mask>\n      );\n    }}\n    width={300}\n  />\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Different columns with cover image\"\n    description=\"2 - 4 columns with cover image\"\n    defaultCode={`\n<Box display=\"flex\" wrap>\n  {[2, 3, 4].map((columns) => (\n    <Box key={columns} padding={2}>\n      <Box><Text>columns = {columns}</Text></Box>\n      <Collage\n        columns={columns}\n        cover\n        height={150}\n        width={150}\n        renderImage={({ index, width, height }) => {\n          const images = [\n            {\n              color: 'rgb(111, 91, 77)',\n              naturalHeight: 751,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n            },\n            {\n              color: 'rgb(231, 186, 176)',\n              naturalHeight: 200,\n              naturalWidth: 98,\n              src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 300,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/d0pQsJz/stock3.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 517,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/SB0pXgS/stock4.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 806,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 200,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/FY2MKr5/stock6.jpg',\n            },\n          ];\n          const image = images[index];\n          return (\n            <Mask wash width={width} height={height}>\n              {image ? (\n                <Image\n                  alt=\"collage image\"\n                  color={image.color}\n                  fit=\"cover\"\n                  naturalHeight={image.naturalHeight}\n                  naturalWidth={image.naturalWidth}\n                  src={image.src}\n                />\n              ) : (\n                <Box\n                  color=\"lightGray\"\n                  height={height}\n                  width={width}\n                />\n              )}\n            </Mask>\n          );\n        }}\n      />\n    </Box>\n  ))}\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"layoutKey\"\n    name=\"Layout key\"\n    description=\"\n      You can pick a layout using the layout key (layout key is 0 by default).\n      Depending on the number of columns of the collage, there may be multiple layouts available.\n      If there are N layouts available, (layoutKey % N) will determine which layout is used.\n      \"\n    defaultCode={`\n<Box display=\"flex\" wrap>\n  {[0, 1, 2, 3].map((layoutKey) => (\n    <Box key={layoutKey} padding={2}>\n      <Box><Text>layoutKey = {layoutKey}</Text></Box>\n      <Collage\n        columns={3}\n        height={150}\n        width={150}\n        layoutKey={layoutKey}\n        renderImage={({ index, width, height }) => {\n          const images = [\n            {\n              color: 'rgb(111, 91, 77)',\n              naturalHeight: 751,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/Lx54BCT/stock1.jpg',\n            },\n            {\n              color: 'rgb(231, 186, 176)',\n              naturalHeight: 200,\n              naturalWidth: 98,\n              src: 'https://i.ibb.co/7bQQYkX/stock2.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 300,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/d0pQsJz/stock3.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 517,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/SB0pXgS/stock4.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 806,\n              naturalWidth: 564,\n              src: 'https://i.ibb.co/jVR29XV/stock5.jpg',\n            },\n            {\n              color: '#000',\n              naturalHeight: 200,\n              naturalWidth: 200,\n              src: 'https://i.ibb.co/FY2MKr5/stock6.jpg',\n            },\n          ];\n          const image = images[index];\n          return (\n            <Mask wash width={width} height={height}>\n              <Image\n                alt=\"collage image\"\n                color={image.color}\n                fit=\"cover\"\n                naturalHeight={image.naturalHeight}\n                naturalWidth={image.naturalWidth}\n                src={image.src}\n              />\n            </Mask>\n          );\n        }}\n      />\n    </Box>\n  ))}\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Card from './components/Card.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Column\"\n    description=\"Gestalt supports a 12-column system.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'span',\n        type: '0 .. 12',\n        required: true,\n        responsive: true,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    Column is a basic layout component to help you size your UI. A full width is composed\n    of 12 units, each equal to 1/12 of the total width. By setting the \\`span\\` prop you\n    dictate the percent width an element can occupy.\n  `}\n    name=\"Static columns\"\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Basic Column Unit\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" paddingY={2}>\n  {Array(12).fill().map((_, i) => (\n    <Column span={1} key={i}>\n      <Box color=\"lightGray\" padding={1}>\n        <Box color=\"white\" paddingY={2}>\n          <Text align=\"center\">1</Text>\n        </Box>\n      </Box>\n    </Column>\n  ))}\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Three Equal Columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" paddingY={2}>\n  <Column span={4}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">4</Text>\n      </Box>\n    </Box>\n  </Column>\n  <Column span={4}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">4</Text>\n      </Box>\n    </Box>\n  </Column>\n  <Column span={4}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">4</Text>\n      </Box>\n    </Box>\n  </Column>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Two Equal Columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" paddingY={2}>\n  <Column span={6}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">6</Text>\n      </Box>\n    </Box>\n  </Column>\n  <Column span={6}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">6</Text>\n      </Box>\n    </Box>\n  </Column>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Two Unequal Columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" paddingY={2}>\n  <Column span={8}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">8</Text>\n      </Box>\n    </Box>\n  </Column>\n  <Column span={4}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Text align=\"center\">4</Text>\n      </Box>\n    </Box>\n  </Column>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    Column supports setting a span at our 3 responsive breakpoints: sm, md, lg. Each\n    sets the span of the column from that breakpoint and up. If you don't want your\n    column to be responsive, only set the \\`span\\` prop.\n  `}\n    name=\"Responsive columns\"\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Stacking Columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" wrap paddingY={2}>\n  <Column span={12} mdSpan={6}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Box display=\"block\" mdDisplay=\"none\">\n          <Text align=\"center\">12</Text>\n        </Box>\n        <Box display=\"none\" mdDisplay=\"block\">\n          <Text align=\"center\">6</Text>\n        </Box>\n      </Box>\n    </Box>\n  </Column>\n  <Column span={12} mdSpan={6}>\n    <Box color=\"lightGray\" padding={1}>\n      <Box color=\"white\" paddingY={2}>\n        <Box display=\"block\" mdDisplay=\"none\">\n          <Text align=\"center\">12</Text>\n        </Box>\n        <Box display=\"none\" mdDisplay=\"block\">\n          <Text align=\"center\">6</Text>\n        </Box>\n      </Box>\n    </Box>\n  </Column>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Resizing Columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" wrap paddingY={2}>\n  {Array(4).fill().map((_, i) => (\n    <Column span={6} mdSpan={3} key={i}>\n      <Box color=\"lightGray\" padding={1}>\n        <Box color=\"white\" paddingY={2}>\n          <Box display=\"block\" mdDisplay=\"none\">\n            <Text align=\"center\">6</Text>\n          </Box>\n          <Box display=\"none\" mdDisplay=\"block\">\n            <Text align=\"center\">3</Text>\n          </Box>\n        </Box>\n      </Box>\n    </Column>\n  ))}\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"Unlike traditional CSS columns, using flex columns makes each column equal height by default.\"\n    name=\"Example: Equal height columns\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\">\n  <Column span={6}>\n    <Box color=\"darkGray\" padding={2}>\n      <Text color=\"white\">Tall column</Text>\n      <Box height={200} />\n      <Text color=\"white\">With lots of content</Text>\n    </Box>\n  </Column>\n\n  <Column span={6}>\n    <Box color=\"gray\" height=\"100%\" padding={2}>\n      <Text color=\"white\">Short column</Text>\n    </Box>\n  </Column>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"Column gutters can be created through composition and negative margins.\"\n    name=\"Example: Gutters\"\n    defaultCode={`\n<Box paddingY={2} color=\"darkGray\">\n  <Box paddingX={2} marginBottom={2}>\n    <Text color=\"white\">Content</Text>\n  </Box>\n  <Box\n    display=\"flex\"\n    direction=\"row\"\n    paddingY={2}\n    marginLeft={-2}\n    marginRight={-2}\n    color=\"gray\"\n    wrap\n  >\n    <Column span={12}>\n      <Box paddingX={2} marginBottom={2}>\n        <Text color=\"white\">Row</Text>\n      </Box>\n    </Column>\n    <Column span={6}>\n      <Box paddingX={2}>\n        <Box color=\"white\">Column A</Box>\n      </Box>\n    </Column>\n    <Column span={6}>\n      <Box paddingX={2}>\n        <Box color=\"white\">Column B</Box>\n      </Box>\n    </Column>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Container\"\n    description=\"Containers are useful in responsively laying out content on different screens.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    On small screens, the container is the width of the screen. On large screens, it centers the content with a max-width of 800px.\n  \"\n    name=\"Responsive content\"\n    defaultCode={`\n<Box color=\"gray\" padding={3}>\n  <Container>\n    <Box color=\"white\" padding={3}>\n      <Text>Centered content</Text>\n    </Box>\n  </Container>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Divider\"\n    description=\"If you have two things that need to be separated, put a `Divider` between them.\"\n  />\n);\n\ncard(<PropTable props={[]} />);\n\ncard(\n  <Example\n    description=\"\n    You can use this component for a visual divider between two elements.\n  \"\n    name=\"Example\"\n    defaultCode={`\n<Box color=\"white\">\n  <Box padding={2}>\n    <Text>Some content</Text>\n  </Box>\n  <Divider />\n  <Box padding={2}>\n    <Text>Other content</Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Flyout\"\n    description=\"Flyouts are similar to modals. They’re an alternative when there is less content to display,\nor to make the interaction feel faster.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'anchor',\n        type: '?HTMLElement',\n        required: true,\n        description: 'Ref for the element that the Flyout will attach to',\n        href: 'anchor',\n      },\n      {\n        name: 'idealDirection',\n        type: `'up' | 'right' | 'down' | 'left'`,\n        description: 'Preferred direction for the Flyout to open',\n        href: 'idealDirection',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'onDismiss',\n        type: '() => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'positionRelativeToAnchor',\n        type: 'boolean',\n        defaultValue: true,\n        description:\n          'Depicts if the Flyout shares a relative root with the anchor element',\n        href: 'anchor',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"orange\" | \"red\" | \"white\" | \"darkGray\"`,\n        defaultValue: 'white',\n        description:\n          'The background color of the Flyout; red matches other default error messaging',\n        href: 'errorFlyout',\n      },\n      {\n        name: 'shouldFocus',\n        type: 'boolean',\n        defaultValue: true,\n        description: 'Focus on the flyout when opened',\n        href: 'errorFlyout',\n      },\n      {\n        name: 'showCaret',\n        type: 'boolean',\n        defaultValue: false,\n        description: 'Show the caret on the flyout',\n        href: 'showCaret',\n      },\n      {\n        name: 'size',\n        type: `'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'flexible' | number`,\n        description: `xs: 180px, sm: 230px, md: 284px, lg: 320px, xl: 360px, flexible: no inherent sizing from flyout`,\n        defaultValue: 'sm',\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Example\"\n    defaultCode={`\nfunction FlyoutExample() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef();\n  return (\n    <Box>\n      <Box display=\"inlineBlock\" ref={anchorRef}>\n        <Button\n          accessibilityExpanded={!!open}\n          accessibilityHaspopup\n          onClick={() => setOpen(!open)}\n          text=\"Help\"\n        />\n      </Box>\n      {open &&\n        <Layer>\n          <Flyout\n            anchor={anchorRef.current}\n            idealDirection=\"up\"\n            onDismiss={() => setOpen(false)}\n            positionRelativeToAnchor={false}\n            size=\"md\"\n          >\n            <Box padding={3} display=\"flex\" alignItems=\"center\" direction=\"column\" column={12}>\n              <Text align=\"center\" weight=\"bold\">\n                Need help with something? Check out our Help Center.\n              </Text>\n              <Box paddingX={2} marginTop={3}>\n                <Button color=\"red\" text=\"Visit the help center\" />\n              </Box>\n            </Box>\n          </Flyout>\n        </Layer>}\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"showCaret\"\n    name=\"Example: Show Caret\"\n    defaultCode={`\nfunction FlyoutExample() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef();\n  return (\n    <Box>\n      <Box display=\"inlineBlock\" ref={anchorRef}>\n        <Button\n          accessibilityExpanded={!!open}\n          accessibilityHaspopup\n          onClick={() => setOpen(!open)}\n          text=\"Help\"\n        />\n      </Box>\n      {open &&\n        <Layer>\n          <Flyout\n            anchor={anchorRef.current}\n            idealDirection=\"up\"\n            showCaret\n            onDismiss={() => setOpen(false)}\n            positionRelativeToAnchor={false}\n            size=\"md\"\n          >\n            <Box padding={3} column={12}>\n              <Text align=\"center\" weight=\"bold\">\n                Flyout with a caret, not a 🥕\n              </Text>\n            </Box>\n          </Flyout>\n        </Layer>}\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"errorFlyout\"\n    name=\"Example: ErrorFlyout\"\n    description={`Flyout can also take on additional roles. Like [TextField](#TextField) and [TextArea](#TextArea), this component\ncan be used to highlight errors on other types of form fields by setting the \\`color\\` to \\`red.\\``}\n    defaultCode={`\nfunction ErrorFlyoutExample() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef();\n  return (\n    <Box>\n      <Box display=\"inlineBlock\" ref={anchorRef}>\n        <Button onClick={() => setOpen(!open)} text=\"Remove\" />\n      </Box>\n      {open &&\n        <Layer>\n          <Flyout\n            anchor={anchorRef.current}\n            color=\"red\"\n            idealDirection=\"up\"\n            onDismiss={() => setOpen(false)}\n            positionRelativeToAnchor={false}\n            shouldFocus={false}\n            size=\"md\"\n          >\n            <Box padding={3}>\n              <Text color=\"white\" weight=\"bold\">\n                Oops! This item is out of stock.\n              </Text>\n            </Box>\n          </Flyout>\n        </Layer>\n      }\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Card\n    id=\"anchor\"\n    description={`\n    The \\`anchor\\` ref you pass in should not include anything other than the trigger element itself. The Flyout\n    calculates its position based on the bounding box of the \\`anchor\\`. To achieve this, we recommend setting a\n    ref directly on the component itself or adding \\`display: inline-block\\` to the parent container with the ref.\n\n    If you put the \\`Flyout\\` in a portal or provider or it no longer shares\n    a relative root with the \\`anchor\\`, you must set \\`positionRelativeToAnchor=false\\` in order for it to be\n    positioned correctly relative to the body.\n  `}\n    name=\"anchor\"\n  />\n);\n\ncard(\n  <Card\n    id=\"idealDirection\"\n    description={`\n    The \\`Flyout\\` component gives you the ability to _influence_ the preferred direction that it\n    opens. This may be a useful property to specify if you have a page with many potential flyouts\n    and you want the behavior to look uniform.\n\n    If an \\`idealDirection\\` is provided, the flyout will attempt to open in the direction specified.\n    It is important to note that the direction you specifiy can be over-ruled if there is not enough space\n    within the viewport in that specific direction and there is enough space in another direction.\n\n    If no \\`idealDirection\\` is provided, the flyout will open in the direction where there is the\n    most space available within the viewport. If there is not enough space in any direction, the flyout\n    will no longer be context-specific (with a caret to the anchor) and will appear at the bottom of\n    the screen. This is to ensure that users are always able to view the contents of the flyout,\n    regardless of their screen size.\n  `}\n    name=\"Ideal Direction Preference\"\n  />\n);\n\ncard(\n  <Card\n    description={`\n    We recommend passing in the following ARIA attributes to the anchor element:\n\n    * \\`aria-haspopup\\` lets the screenreader know that there is a flyout linked to the tigger.\n    * \\`aria-expanded\\` informs the screenreader whether the flyout is currently open or closed.\n  `}\n    name=\"Accessibility\"\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { GroupAvatar } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"GroupAvatar\"\n    description={`You can use an \\`GroupAvatar\\` to represent a group of users. A light wash is automatically\napplied to each collaborator image to ensure the component retains a circular appearance.`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'collaborators',\n        type: 'Array<{ name: string, src?: string }>',\n        required: true,\n      },\n      {\n        name: 'outline',\n        type: 'boolean',\n        defaultValue: false,\n        description: `Adds a white border around GroupAvatar so it's visible when displayed on other images`,\n      },\n      {\n        name: 'size',\n        type: `\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"fit\"`,\n        defaultValue: 'fit',\n        description:\n          'xs: 24px, sm: 32px, md: 48px, lg: 64px, xl: 120px. If size is `fit`, GroupAvatar will fill 100% of the parent container width',\n      },\n    ]}\n  />\n);\n\nconst user1 = {\n  name: 'Keerthi',\n  src: 'https://i.ibb.co/ZfCZrY8/keerthi.jpg',\n};\nconst user2 = {\n  name: 'Shanice',\n  src: 'https://i.ibb.co/7tGKGvb/shanice.jpg',\n};\nconst user3 = {\n  name: 'James',\n  src: 'https://i.ibb.co/2Fc00R3/james.jpg',\n};\n\ncard(\n  <Example\n    name=\"Example\"\n    defaultCode={`\n<Box width={108}>\n  <GroupAvatar\n    collaborators={[\n      {\n        name: 'Keerthi',\n        src: 'https://i.ibb.co/ZfCZrY8/keerthi.jpg',\n      },\n      {\n        name: 'Shanice',\n        src: 'https://i.ibb.co/7tGKGvb/shanice.jpg',\n      },\n    ]}\n    size=\"lg\"\n  />\n</Box>\n`}\n  />\n);\n\ncard(\n  <Combination\n    name=\"Size Combinations: 1 Person\"\n    size={['xs', 'sm', 'md', 'lg', 'xl']}\n  >\n    {props => <GroupAvatar collaborators={[user1]} {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    name=\"Size Combinations: 2 People\"\n    size={['xs', 'sm', 'md', 'lg', 'xl']}\n  >\n    {props => <GroupAvatar collaborators={[user1, user3]} {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    name=\"Size Combinations: 3 People\"\n    size={['xs', 'sm', 'md', 'lg', 'xl']}\n  >\n    {props => <GroupAvatar collaborators={[user1, user3, user2]} {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    name=\"Size Combinations: 1 Person (no pictures)\"\n    size={['sm', 'md', 'lg']}\n  >\n    {props => (\n      <GroupAvatar\n        collaborators={[user1].map(collab => ({\n          name: collab.name,\n        }))}\n        {...props}\n      />\n    )}\n  </Combination>\n);\n\ncard(\n  <Combination\n    name=\"Size Combinations: 3 People (no pictures)\"\n    size={['sm', 'md', 'lg']}\n  >\n    {props => (\n      <GroupAvatar\n        collaborators={[user1, user3, user2].map(collab => ({\n          name: collab.name,\n        }))}\n        {...props}\n      />\n    )}\n  </Combination>\n);\n\ncard(\n  <Example\n    description={`\n    GroupAvatars that are not given a \\`size\\` prop will expand to fit to the width of their\n    parent container. A common use case is to achieve column-based sizing.\n\n    Resize the browser to see these GroupAvatar change to match the width of the \\`Column\\` they\n    have been placed in.\n  `}\n    name=\"Container-based Sizes\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\">\n  <Box column={2} padding={2}>\n    <GroupAvatar collaborators={[{ name: 'Julia' }]} />\n  </Box>\n  <Box column={2} padding={2}>\n    <GroupAvatar collaborators={[{ name: 'James', src: \"https://i.ibb.co/2Fc00R3/james.jpg\" }, { name: 'Julia' }]} />\n  </Box>\n  <Box column={3} padding={2}>\n    <GroupAvatar collaborators={[{ name: 'Keerthi', src: \"https://i.ibb.co/ZfCZrY8/keerthi.jpg\" }, { name: 'Shanice', src: \"https://i.ibb.co/7tGKGvb/shanice.jpg\" }, { name: 'Julia' }]} />\n  </Box>\n</Box>\n  `}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Heading\"\n    description={`\nThe \\`Heading\\` component allows you to show headings on the page & has a bigger line height than regular text.\n`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityLevel',\n        type: '1 | 2 | 3 | 4 | 5 | 6',\n        description: 'Allows you to override the default heading level',\n        href: 'levels',\n      },\n      {\n        name: 'align',\n        type: `\"left\" | \"right\" | \"center\" | \"justify\"`,\n        defaultValue: 'left',\n        href: 'align',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"darkGray\" | \"eggplant\" | \"gray\" | \"green\" | \"lightGray\" | \"maroon\" | \"midnight\" | \"navy\" | \"olive\" | \"orange\" | \"orchid\" | \"pine\" | \"purple\" | \"red\" | \"watermelon\" | \"white\"`,\n        defaultValue: 'darkGray',\n        href: 'colors',\n      },\n      {\n        name: 'id',\n        type: 'string',\n      },\n      {\n        name: 'overflow',\n        type: '\"normal\" | \"breakWord\"',\n        defaultValue: 'breakWord',\n        href: 'overflowTruncation',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\" | \"lg\"`,\n        description: `sm: 20px, md: 28px, lg: 36px`,\n        defaultValue: 'lg',\n        href: 'sizes',\n      },\n      {\n        name: 'truncate',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'overflowTruncation',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"sizes\"\n    name=\"Example: Sizes\"\n    defaultCode={`\n<Box maxWidth=\"8em\">\n  <Heading size=\"sm\">Heading small</Heading>\n  <span lang=\"ja\">\n    <Heading size=\"sm\">こんにちは</Heading>\n  </span>\n  <span>\n    <Heading size=\"md\">Heading medium</Heading>\n  </span>{' '}\n  <span lang=\"ja\">\n    <Heading size=\"md\">こんにちは</Heading>\n  </span>\n  <Heading size=\"lg\">Heading large</Heading>\n  <span lang=\"ja\">\n    <Heading size=\"lg\">こんにちは</Heading>\n  </span>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"colors\"\n    name=\"Example: Colors\"\n    defaultCode={`\n<Box>\n  <Box margin={-1}>\n    <Box color=\"gray\" padding={1}>\n      <Heading color=\"white\" size=\"md\">\n        White\n      </Heading>\n    </Box>\n  </Box>\n  <Heading size=\"md\">\n    Dark gray (default)\n  </Heading>\n  <Heading color=\"gray\" size=\"md\">\n    Gray\n  </Heading>\n  <Heading color=\"blue\" size=\"md\">\n    Blue\n  </Heading>\n  <Heading color=\"red\" size=\"md\">\n    Red\n  </Heading>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"overflowTruncation\"\n    name=\"Example: Overflow & truncation\"\n    defaultCode={`\n<Box maxWidth={240} marginTop={-2} marginBottom={-2}>\n  <Box paddingY={2}>\n    <Heading size=\"sm\">\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉\n    </Heading>\n  </Box>\n\n  <Box paddingY={2}>\n    <Heading size=\"sm\" truncate>\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉\n    </Heading>\n  </Box>\n\n  <Box paddingY={2}>\n    <Heading size=\"sm\" overflow=\"normal\">\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉\n    </Heading>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"align\"\n    name=\"Example: Alignment\"\n    defaultCode={`\n<Box maxWidth=\"24em\">\n  <Heading align=\"left\" size=\"sm\">Left-aligned heading (default)</Heading>\n  <Heading align=\"right\" size=\"sm\">Right-aligned heading</Heading>\n  <Heading align=\"center\" size=\"sm\">Center-aligned heading</Heading>\n  <Heading align=\"justify\" size=\"sm\">Justify-aligned heading</Heading>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"levels\"\n    description=\"\n    For accessibility purposes, we allow you to override the heading level.\n\n    We should have one level 1 per page & levels should be appropriately nested. E.g. level 1 followed by level 2 & level 2 followed by level 2 or level 3.\n  \"\n    name=\"Example: Levels\"\n    defaultCode={`\n<Box>\n  <Heading size=\"md\" accessibilityLevel={2}>\n    Medium heading level 2\n  </Heading>\n  <Heading size=\"sm\" accessibilityLevel={3}>\n    Small heading level 3\n  </Heading>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Icon } from 'gestalt';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Icon\"\n    description=\"\nShow icons with different colors and sizes in an accessible way.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityLabel',\n        type: 'string',\n        required: true,\n        description:\n          'String that clients such as VoiceOver will read to describe the element. Always localize the label.',\n        href: 'iconWithLabel',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"darkGray\" | \"eggplant\" | \"gray\" | \"green\" | \"lightGray\" | \"maroon\" | \"midnight\" | \"navy\" | \"olive\" | \"orange\" | \"orchid\" | \"pine\" | \"purple\" | \"red\" | \"watermelon\" | \"white\"`,\n        defaultValue: 'gray',\n        href: 'sizeColorCombinations',\n      },\n      {\n        name: 'icon',\n        type: Icon.icons.map(name => `'${name}'`).join(' | '),\n        description: `This allows us to type check for a valid icon name based on the keys from the list of icons shown below.`,\n        href: 'iconCombinations',\n      },\n      {\n        name: 'size',\n        type: `number | string`,\n        description: `Use a number for pixel sizes or a string for percentage based sizes`,\n        defaultValue: 16,\n        href: 'sizeColorCombinations',\n      },\n      {\n        name: 'inline',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'dangerouslySetSvgPath',\n        type: `{ __path: string }`,\n        description: `When using this prop, make sure that the viewbox around the SVG path is 24x24`,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"iconWithLabel\"\n    description=\"Icon with a label\"\n    name=\"Example:\"\n    defaultCode={`\n<Box alignItems=\"center\" display=\"flex\">\n  <Box marginRight={1} padding={1}>\n    <Icon icon=\"pin\" accessibilityLabel=\"Pin\" color=\"darkGray\" />\n  </Box>\n  <Text align=\"center\" color=\"darkGray\" weight=\"bold\">\n    Pinterest\n  </Text>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Combination id=\"iconCombinations\" name=\"Icon Combinations\" icon={Icon.icons}>\n    {props => (\n      <Icon color=\"darkGray\" accessibilityLabel=\"\" size={32} {...props} />\n    )}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"sizeColorCombinations\"\n    name=\"Size & Color Combinations\"\n    size={[16, 24, 32]}\n    color={['gray', 'darkGray', 'red']}\n  >\n    {(props, i) => (\n      <Icon key={i} icon=\"heart\" accessibilityLabel=\"\" {...props} />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport { IconButton } from 'gestalt';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"IconButton\"\n    description=\"The IconButton component allows you to define an action with a specific Icon.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityExpanded',\n        type: 'boolean',\n        description:\n          'Use this property on elements that can expand to reveal additional information',\n        href: 'accessibility',\n      },\n      {\n        name: 'accessibilityHaspopup',\n        type: 'boolean',\n        description:\n          'Indicates that the element has a popup context menu or sub-level menu.',\n        href: 'accessibility',\n      },\n      {\n        name: 'accessibilityLabel',\n        type: 'string',\n        required: true,\n        description:\n          'String that clients such as VoiceOver will read to describe the element. Always localize the label.',\n        href: 'accessibility',\n      },\n      {\n        name: 'bgColor',\n        type:\n          '\"transparent\" | \"transparentDarkGray\" | \"darkGray\" | \"gray\" | \"lightGray\" | \"white\" | \"red\"',\n        defaultValue: 'transparent',\n        href: 'backgroundColorCombinations',\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'disabledCombinations',\n      },\n      {\n        name: 'iconColor',\n        type: `\"darkGray\" | \"gray\" | \"red\" | \"white\"`,\n        defaultValue: 'gray',\n        href: 'iconColorCombinations',\n      },\n      {\n        name: 'icon',\n        type: '$Keys<typeof icons>',\n        description: `This allows type checking for a valid icon name based on the keys from the list of icons in\n        Icon.`,\n      },\n      {\n        name: 'dangerouslySetSvgPath',\n        type: `{ __path: string }`,\n        description: `When using this prop, make sure that the viewbox around the SVG path is 24x24`,\n      },\n      {\n        name: 'selected',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'selectedCombinations',\n      },\n      {\n        name: 'size',\n        type: `\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"`,\n        description: `xs: 24px, sm: 32px, md: 40px, lg: 48px, xl: 56px`,\n        defaultValue: 'md',\n        href: 'sizeCombinations',\n      },\n      {\n        name: 'onClick',\n        type: '({ event: SyntheticMouseEvent<> }) => void',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example\"\n    defaultCode={`\n<IconButton\n  accessibilityLabel=\"Love\"\n  bgColor=\"white\"\n  icon=\"heart\"\n  iconColor=\"red\"\n  onClick={() => { console.log('❤️')}}\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"accessibility\"\n    description={`\n      We want to make sure every button on the page is unique when being read by screenreader.\n      \\`accessibilityExpanded\\` allows us to specify that the associated content (i.e. Flyout) is open.\n      \\`accessibilityHaspopup\\` allows us to specify that the button has associated content (i.e. Flyout).\n      \\`accessibilityLabel\\` allows us to update the spoken text.\n\n    Be sure to internationalize your \\`accessibilityLabel\\`.\n  `}\n    name=\"Example: Accessibility\"\n    defaultCode={`\nfunction A11yEx() {\n  const [isOpen, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  return (\n    <Box>\n      <Box display=\"inlineBlock\" ref={anchorRef}>\n        <IconButton\n          accessibilityLabel=\"see more\"\n          accessibilityHaspopup\n          accessibilityExpanded={isOpen}\n          icon=\"ellipsis\"\n          onClick={() => setOpen(!isOpen)}\n        />\n      </Box>\n      {isOpen && (\n        <Flyout anchor={anchorRef && anchorRef.current} onDismiss={() => undefined} idealDirection=\"right\">\n          <Box padding={2}>\n            <Text>I am a popup.</Text>\n          </Box>\n        </Flyout>\n      )}\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"sizeCombinations\"\n    name=\"Combinations: Size\"\n    size={['xs', 'sm', 'md', 'lg', 'xl']}\n  >\n    {props => <IconButton icon=\"heart\" accessibilityLabel=\"\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"iconColorCombinations\"\n    name=\"Combinations: Icon Color\"\n    iconColor={['darkGray', 'gray', 'red', 'white']}\n  >\n    {props => <IconButton icon=\"heart\" accessibilityLabel=\"\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"backgroundColorCombinations\"\n    name=\"Combinations: Background Color\"\n    bgColor={[\n      'transparent',\n      'transparentDarkGray',\n      'darkGray',\n      'gray',\n      'lightGray',\n      'white',\n    ]}\n  >\n    {props => <IconButton icon=\"heart\" accessibilityLabel=\"\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"selectedCombinations\"\n    name=\"Combinations: Selected\"\n    color={['gray']}\n    selected={[false, true]}\n  >\n    {props => <IconButton icon=\"heart\" accessibilityLabel=\"\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"disabledCombinations\"\n    name=\"Combinations: Disabled\"\n    description=\"Icon buttons can be disabled as well. Adding the disabled flag to any color combination will add a 50% opacity and remove interactivity\"\n    iconColor={['darkGray', 'gray', 'red', 'white']}\n  >\n    {props => (\n      <IconButton icon=\"heart\" accessibilityLabel=\"\" disabled {...props} />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Image\"\n    description={`\nThis component is the workhorse of Pinterest. If you define Pinterest to be all\nabout collecting ideas, then images is how we choose to represent those ideas.\nIn response, we've added a few extra superpowers to the regular <img> tag to\nmake it even more awesome.\n`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'alt',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'color',\n        type: 'string',\n        required: true,\n        href: 'placeholders',\n      },\n      {\n        name: 'fit',\n        type: `\"cover\" | \"contain\" | \"none\"`,\n        defaultValue: 'none',\n        description: `Doesn't work with srcSet or sizes.`,\n        href: 'fit',\n      },\n      {\n        name: 'importance',\n        type: `\"high\" | \"low\" | \"auto\"`,\n        defaultValue: 'auto',\n        description: `Priority Hints provide developers a way to indicate a resource's relative importance to the browser, allowing more control over the order resources are loaded (only available via Chrome Origin Trial). ‘high‘ the developer considers the resource as being high priority. ‘low‘ the developer considers the resource as being low priority. ‘auto‘ the developer does not indicate a preference. This also serves as the attribute's invalid value default and missing value default.`,\n        href: 'fit',\n      },\n      {\n        name: 'loading',\n        type: `\"eager\" | \"lazy\" | \"auto\"`,\n        defaultValue: 'auto',\n        description: `\n        Controls if loading the image should be defered when it's off-screen. ‘lazy’ to defer the load until the image or iframe reaches a distance threshold from the viewport. ‘eager’ to load the resource immediately. ‘auto’ the default behavior, which is to eagerly load the resource.\n        `,\n        href: 'fit',\n      },\n      {\n        name: 'naturalHeight',\n        type: 'number',\n        required: true,\n        description: 'Exact height of source image',\n        href: 'fit',\n      },\n      {\n        name: 'naturalWidth',\n        type: 'number',\n        required: true,\n        description: 'Exact width of source image',\n        href: 'fit',\n      },\n      {\n        name: 'onError',\n        type: '() => void',\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n      },\n      {\n        name: 'sizes',\n        type: 'string',\n        description:\n          'A list of one or more strings separated by commas indicating a set of source sizes',\n      },\n      {\n        name: 'src',\n        type: 'string',\n        required: true,\n        href: 'placeholders',\n      },\n      {\n        name: 'srcSet',\n        type: 'string',\n        description:\n          'A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use.',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    One thing that might be unusual is that the \\`width\\` and the \\`height\\` of the\n    component are required, yet the image will scale to the size of its container.\n    This is so that the placeholder's size can be calculated before the image has\n    rendered.\n\n    While the exact dimensions supplied aren't used (only the ratio between them is\n    considered), you should always try to try to supply the exact dimensions of the\n    source image requested.\n  `}\n    name=\"Dimensions\"\n  />\n);\n\ncard(\n  <Example\n    id=\"placeholders\"\n    description={`\n    The color you pass into \\`Image\\` will be used to fill the placeholder that shows up\n    as an image loads. The example shown has an empty \\`src\\` prop provided so it remains\n    a placeholder.\n  `}\n    name=\"Placeholders\"\n    defaultCode={`\n<Column span={6}>\n  <Image\n    alt=\"example.com\"\n    color=\"rgb(111, 91, 77)\"\n    naturalHeight={564}\n    naturalWidth={564}\n    src=\"\"\n  />\n</Column>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    You can overlay content on an Image by passing it children.\n  \"\n    name=\"Overlay\"\n    defaultCode={`\n<Box column={6} paddingX={2}>\n  <Image\n    alt=\"Tropic greens: The taste of Petrol and Porcelain | Interior design, Vintage Sets and Unique Pieces agave\"\n    color=\"rgb(231, 186, 176)\"\n    naturalHeight={751}\n    naturalWidth={564}\n    src=\"https://i.ibb.co/7bQQYkX/stock2.jpg\"\n  >\n    <Box padding={3}>\n      <Text color=\"white\">\n        Tropic greens: The taste of Petrol and Porcelain\n      </Text>\n    </Box>\n  </Image>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"fit\"\n    description={`\n    In some cases, you may want to scale an image to fit into its container.\n    To achieve that, you can set \\`fit\\` to either \\`cover\\` or \\`contain\\`, depending on the effect you wish to achieve.\n\n    Contain: This makes it so that the image is \"contained\" within its container. This means that the image is resized appropriately\n    such that the entire image can fit in the container, while maintaining its aspect ratio (think letterbox);\n\n    ~~~jsx\n    <Image alt=\"...\" color=\"#000\" fit=\"contain\" src=\"...\" />\n    ~~~\n\n    Cover: This does the opposite of contain and tries to scale the image as large as possible so that the entire container is occupied,\n    while maintaining the aspect ratio of the image.\n\n    ~~~jsx\n    <Image alt=\"...\" color=\"#000\" fit=\"cover\" src=\"...\" />\n    ~~~\n\n    Notes:\n\n    * When using cover/contain, \\`naturalHeight\\` and \\`naturalWidth\\` are ignored since the aspect ratio is handled by the browser.\n    * In order for cover/contain to work properly, the container must have some sort of implicit height.\n  `}\n    name=\"Fit\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" wrap>\n  <Box>\n    <h3>Square content: contain vs cover</h3>\n    <Box display=\"flex\" direction=\"row\" justifyContent=\"around\">\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"square\"\n          color=\"#000\"\n          fit=\"contain\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/d0pQsJz/stock3.jpg\"\n        />\n      </Box>\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"square\"\n          color=\"#000\"\n          fit=\"cover\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/d0pQsJz/stock3.jpg\"\n        />\n      </Box>\n    </Box>\n  </Box>\n  <Box>\n    <h3>Wide content: contain vs cover</h3>\n    <Box display=\"flex\" direction=\"row\" justifyContent=\"around\">\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"wide\"\n          color=\"#000\"\n          fit=\"contain\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/SB0pXgS/stock4.jpg\"\n        />\n      </Box>\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"wide\"\n          color=\"#000\"\n          fit=\"cover\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/SB0pXgS/stock4.jpg\"\n        />\n      </Box>\n    </Box>\n  </Box>\n  <Box>\n    <h3>Tall content: contain vs cover</h3>\n    <Box display=\"flex\" direction=\"row\" justifyContent=\"around\">\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"tall\"\n          color=\"#000\"\n          fit=\"contain\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/jVR29XV/stock5.jpg\"\n        />\n      </Box>\n      <Box\n        color=\"darkGray\"\n        height={200}\n        width={200}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Image\n          alt=\"tall\"\n          color=\"#000\"\n          fit=\"cover\"\n          naturalHeight={1}\n          naturalWidth={1}\n          src=\"https://i.ibb.co/jVR29XV/stock5.jpg\"\n        />\n      </Box>\n    </Box>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    You can delay loading images that are off-screen with the loading attribute.\n  \"\n    name=\"Lazy\"\n    defaultCode={`\n<Box column={6} paddingX={2}>\n  <Image\n    alt=\"Tropic greens: The taste of Petrol and Porcelain | Interior design, Vintage Sets and Unique Pieces agave\"\n    color=\"rgb(231, 186, 176)\"\n    naturalHeight={496}\n    naturalWidth={496}\n    src=\"https://i.ibb.co/FY2MKr5/stock6.jpg\"\n    loading=\"lazy\"\n  />\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Label\"\n    description=\"Use the Label component to connect a label with a form component in an accessible way.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'htmlFor',\n        type: 'string',\n        required: true,\n        description: 'Id of the element this label is describing',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Whenever you are using a [SelectList](#/SelectList), [Switch](#/Switch), [TextField](#/TextField) or [TextArea](#/TextArea) component, you should use a \\`Label\\`.\n  `}\n    name=\"Example\"\n    defaultCode={`\nfunction LabelExample() {\n  const [switched, setSwitched] = React.useState(false);\n\n  return (\n    <Box>\n      <Box paddingY={1}>\n        <Label htmlFor=\"switchExample\">\n          <Text>Live example</Text>\n        </Label>\n      </Box>\n      <Switch\n        onChange={() => setSwitched(!switched)}\n        id=\"switchExample\"\n        switched={switched}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Card from './components/Card.js';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Layer\"\n    description=\"Layers allow you to render children outside the DOM hierarchy of the parent. It's a wrapper around React createPortal that lets you use it as a component. This is particularly useful for places you might have needed to use z-index to overlay the screen before.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n        required: true,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Card\n    description=\"\n    Because creating a portal in Layer depends on DOM manipulation, if document is not present,\n    such as in a server rendering environment, the children will not be rendered.\n  \"\n    name=\"Server Rendering\"\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    Child content will be rendered outside the DOM hierarchy for easy overlaying. Click to see an example.\n  \"\n    name=\"Overlaying Content\"\n    defaultCode={`\nfunction Example() {\n\n  const [showLayer, setShowLayer] = React.useState(false);\n\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"Show Layer\"\n          onClick={() => setShowLayer(!showLayer)}\n        />\n        {showLayer && (\n          <Layer>\n            <Box color=\"darkWash\" position=\"fixed\" top left right bottom display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n              <Box color=\"white\" padding={3} display=\"flex\" alignItems=\"center\">\n                <Text>Layer Content</Text>\n                <Box marginStart={2}>\n                  <IconButton\n                    accessibilityLabel=\"Close\"\n                    icon=\"cancel\"\n                    onClick={() => setShowLayer(!showLayer)}\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Letterbox\"\n    description={`\nLetterboxes are useful if you have some source media which is larger than\nthe area you want to display it in. For instance, you might have a really\ntall image and want it to be displayed in a neatly cropped square. While the\nideal solution to this problem is to update the source image, this might not\nalways be possible for either cost or performance reasons.\n\nLetterbox should be used in situations where you would otherwise use the\nCSS property \\`background-size: cover\\`.`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'contentAspectRatio',\n        type: 'number',\n        required: true,\n        description:\n          'Proportional relationship between width and height of element',\n      },\n      {\n        name: 'height',\n        type: 'number',\n        required: true,\n        description: 'Desired final height of element',\n      },\n      {\n        name: 'width',\n        type: 'number',\n        required: true,\n        description: 'Desired final width of element',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Tall content (564:806)\"\n    defaultCode={`\n<Letterbox width={200} height={200} contentAspectRatio={564 / 806}>\n  <Image\n    alt=\"tall\"\n    src=\"https://i.ibb.co/jVR29XV/stock5.jpg\"\n    naturalWidth={564}\n    naturalHeight={806}\n  />\n</Letterbox>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Wide content (564:517)\"\n    defaultCode={`\n<Letterbox width={200} height={200} contentAspectRatio={564 / 517}>\n  <Image\n    alt=\"wide\"\n    src=\"https://i.ibb.co/SB0pXgS/stock4.jpg\"\n    naturalWidth={564}\n    naturalHeight={517}\n  />\n</Letterbox>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Square content (1:1)\"\n    defaultCode={`\n<Letterbox width={200} height={200} contentAspectRatio={1}>\n  <Image\n    alt=\"square\"\n    src=\"https://i.ibb.co/FY2MKr5/stock6.jpg\"\n    naturalWidth={1}\n    naturalHeight={1}\n  />\n</Letterbox>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Square content (1:1) in a vertical frame\"\n    defaultCode={`\n<Letterbox width={200} height={300} contentAspectRatio={1}>\n  <Image\n    alt=\"square\"\n    src=\"https://i.ibb.co/d0pQsJz/stock3.jpg\"\n    naturalWidth={1}\n    naturalHeight={1}\n  />\n</Letterbox>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Square content (1:1) in a horizontal frame\"\n    defaultCode={`\n<Letterbox width={300} height={200} contentAspectRatio={1}>\n  <Image\n    alt=\"square\"\n    src=\"https://i.ibb.co/d0pQsJz/stock3.jpg\"\n    naturalWidth={1}\n    naturalHeight={1}\n  />\n</Letterbox>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Link\"\n    description=\"The Link component allows you to show links on the page, open them in a new window, and change the color.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'href',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'inline',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'onClick',\n        type: '({ event: SyntheticMouseEvent<> }) => void',\n      },\n      {\n        name: 'target',\n        type: `\"null\" | \"self\" | \"blank\"`,\n        defaultValue: 'null',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    You should wrap \\`Link\\` components inside of a \\`Text\\` component to get the correct font & underline color.\n  `}\n    name=\"Example\"\n    defaultCode={`\n<Box>\n  <Link href=\"https://pinterest.com\">\n    <Box padding={2}>\n      <Text weight=\"bold\">Pinterest.com</Text>\n    </Box>\n  </Link>\n  <Box color=\"darkGray\">\n    <Text color=\"white\" weight=\"bold\">\n      <Link href=\"https://pinterest.com\">\n        <Box padding={2}>\n          Pinterest.com\n        </Box>\n      </Link>\n    </Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    When providing the content for the link, avoid phrases like \"click here\" or \"go to\".\n  `}\n    name=\"Accessibility\"\n    defaultCode={`\n<Box>\n  <Heading>\n    Bad ❌\n  </Heading>\n  <Text>\n    For more information,{' '}\n    <Text inline weight=\"bold\">\n      <Link inline href=\"https://pinterest.com\">\n        click here\n      </Link>\n    </Text>.\n  </Text>\n  <Box paddingY={4}>\n    <Heading>\n      Good ✅\n    </Heading>\n    <Text>\n      Visit\n      {' '}\n      <Text inline weight=\"bold\">\n        <Link inline href=\"https://pinterest.com\">\n          Pinterest.com\n        </Link>\n      </Text>\n      {' '}\n      for more information.\n    </Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Mask } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Mask\"\n    description={`If you have an item you need to fit into a shape, you can achieve this by\nputting a \\`Mask\\` on it.\n`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'height',\n        type: `number | string`,\n        href: 'basicExample',\n        description: `Use numbers for pixels: height={100} and strings for percentages: height=\"100%\"`,\n      },\n      {\n        name: 'width',\n        type: `number | string`,\n        href: 'basicExample',\n        description: `Use numbers for pixels: width={100} and strings for percentages: width=\"100%\"`,\n      },\n      {\n        name: 'rounding',\n        type: `\"circle\" | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8`,\n        defaultValue: 0,\n        href: 'roundingCombinations',\n      },\n      {\n        name: 'wash',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'wash',\n      },\n      {\n        name: 'willChangeTransform',\n        type: 'boolean',\n        defaultValue: true,\n        href: 'willChangeTransform',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Example\"\n    defaultCode={`\n<Mask height={70} rounding=\"circle\" width={70}>\n  <div style={{ backgroundColor: '#0fa573', width: 70, height: 70 }} />\n</Mask>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    You can compose images with other content (like images or videos) to produce different shapes like rounded rectangles or circles.\n  \"\n    name=\"Example: Masking other content\"\n    defaultCode={`\n<Box maxWidth={300}>\n  <Mask rounding=\"circle\">\n    <img\n      alt=\"weakendclub.com\"\n      src=\"https://i.ibb.co/121JJzC/stock7.jpg\"\n      style={{ maxWidth: '100%', display: 'block' }}\n    />\n  </Mask>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"wash\"\n    description=\"\n    If you expect the masked content to be nearly white, you can apply a wash to emphasize the edge of the mask.\n  \"\n    name=\"Example: Adding a wash\"\n    defaultCode={`\n<Box maxWidth={300}>\n  <Mask rounding={2} wash>\n    <img\n      alt=\"subliming.tumblr.com\"\n      src=\"https://i.ibb.co/8BSrgzX/stock8.jpg\"\n      style={{ maxWidth: '100%', display: 'block' }}\n    />\n  </Mask>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"roundingCombinations\"\n    name=\"Rounding Combinations\"\n    rounding={['circle', 0, 1, 2, 3, 4, 5, 6, 7, 8]}\n  >\n    {props => (\n      <Mask height={70} width={70} {...props}>\n        <div style={{ backgroundColor: '#e3780c', width: 70, height: 70 }} />\n      </Mask>\n    )}\n  </Combination>\n);\n\ncard(\n  <Example\n    id=\"willChangeTransform\"\n    description=\"\n  If you want to turn off the `willChange:transform` property for rendering reasons, you can set this to false.\n  \"\n    name=\"Example: willChangeTransform\"\n    defaultCode={`\n<Box maxWidth={300}>\n  <Mask rounding={2} willChangeTransform={false}>\n    <img\n      alt=\"subliming.tumblr.com\"\n      src=\"https://i.ibb.co/8BSrgzX/stock8.jpg\"\n      style={{ maxWidth: '100%', display: 'block' }}\n    />\n  </Mask>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Masonry, Image, Text, MasonryUniformRowLayout } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Masonry\"\n    description=\"\nMasonry creates a deterministic grid layout, positioning items based on available vertical space.\nIt contains performance optimizations like virtualization and support for infinite scrolling.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'columnWidth',\n        type: 'number',\n        defaultValue: 236,\n        description:\n          'Specifies a fixed width of elements in the grid. However, using flexible is preferred.',\n      },\n      {\n        name: 'comp',\n        type: 'React.ComponentType',\n        required: true,\n        description:\n          'A React component (or stateless functional component) that renders the item you would like displayed in the grid. This component is passed three props: `data: T`, `itemIdx: number`, and `isMeasuring: boolean`.',\n      },\n      {\n        name: 'flexible',\n        type: 'boolean',\n        defaultValue: false,\n        description:\n          'Item width will grow to fill column space and shrink to fit if below min columns.',\n      },\n      {\n        name: 'gutterWidth',\n        type: `number`,\n        defaultValue: 'null',\n        description:\n          'The amount of vertical and horizontal space between each item, specified in pixels.',\n      },\n      {\n        name: 'items',\n        type: 'T[]',\n        required: true,\n        description:\n          'An array of items to display that contains the information that `comp` needs to render.',\n      },\n      {\n        name: 'minCols',\n        type: 'number',\n        defaultValue: 3,\n        description: 'Minimum number of columns to display.',\n      },\n      {\n        name: 'loadItems',\n        type: '() => void',\n        description:\n          'A callback when the user scrolls and you need to load more items into the grid. Note that `scrollContainer` must be specified.',\n      },\n      {\n        name: 'scrollContainer',\n        type: '() => HTMLElement',\n        description:\n          'A function that returns a DOM node that Masonry uses for on-scroll event subscription. This DOM node is intended to be the most immediate ancestor of Masonry in the DOM that will have a scroll bar; in most cases this will be the `window` itself, although sometimes Masonry is used inside containers that have `overflow: auto`. `scrollContainer` is optional, although it is required for features such as `virtualize` and `loadItems`.',\n      },\n      {\n        name: 'virtualize',\n        type: 'boolean',\n        description:\n          'Specifies whether or not Masonry dynamically adds/removes content from the grid based on the user’s viewport and scroll position. Note that `scrollContainer` must be specified when virtualizing.',\n        defaultValue: false,\n      },\n      {\n        name: 'virtualBoundsTop',\n        type: 'number',\n        description:\n          'If `virtualize` is enabled, Masonry will only render items that fit in the viewport, plus some buffer. `virtualBoundsTop` allows customization of the buffer size above the viewport, specified in pixels.',\n      },\n      {\n        name: 'virtualBoundsBottom',\n        type: 'number',\n        description:\n          'If `virtualize` is enabled, Masonry will only render items that fit in the viewport, plus some buffer. `virtualBoundsBottom` allows customization of the buffer size below the viewport, specified in pixels.',\n      },\n      {\n        name: 'measurementStore',\n        type: 'typeof MeasurementStore',\n        description:\n          'Masonry internally caches item sizes/positions using a measurement store. If `measurementStore` is provided, Masonry will use it as its cache and will keep it updated with future measurements. This is often used to prevent re-measurement when users navigate away and back to a grid. Create a new measurement store with `Masonry.createMeasurementStore()`.',\n      },\n      {\n        name: 'layout',\n        type: 'MasonryDefaultLayout | MasonryUniformRowLayout',\n        defaultValue: 'MasonryDefaultLayout',\n        description:\n          'MasonryUniformRowLayout will make it so that each row is as tall as the tallest item in that row.',\n      },\n    ]}\n  />\n);\n\ntype Props = {|\n  flexible?: boolean,\n  layout?: Function,\n|};\n\ntype State = {|\n  pins: Array<{|\n    color: string,\n    height: number,\n    name: string,\n    src: string,\n    width: number,\n  |}>,\n  width: number,\n|};\n\nconst pins = [\n  {\n    color: '#2b3938',\n    height: 316,\n    src: 'https://i.ibb.co/sQzHcFY/stock9.jpg',\n    width: 474,\n    name: 'the Hang Son Doong cave in Vietnam',\n  },\n  {\n    color: '#8e7439',\n    height: 1081,\n    src: 'https://i.ibb.co/zNDxPtn/stock10.jpg',\n    width: 474,\n    name: 'La Gran Muralla, Pekín, China',\n  },\n  {\n    color: '#698157',\n    height: 711,\n    src: 'https://i.ibb.co/M5TdMNq/stock11.jpg',\n    width: 474,\n    name: 'Plitvice Lakes National Park, Croatia',\n  },\n  {\n    color: '#4e5d50',\n    height: 632,\n    src: 'https://i.ibb.co/r0NZKrk/stock12.jpg',\n    width: 474,\n    name:\n      'Ban Gioc – Detian Falls : 2 waterfalls straddling the Vietnamese and Chinese border.',\n  },\n  {\n    color: '#6d6368',\n    height: 710,\n    src: 'https://i.ibb.co/zmFd0Dv/stock13.jpg',\n    width: 474,\n    name: 'Border of China and Vietnam',\n  },\n];\n\nconst inputStyle = { width: '700px', display: 'block', margin: '10px auto' };\n\nconst getPins = () => {\n  let pinList = [];\n  for (let i = 0; i < 3; i += 1) {\n    pinList = pinList.concat(pins.slice());\n  }\n  return Promise.resolve(pinList);\n};\n\nclass ExampleMasonry extends React.Component<Props, State> {\n  // ref on a component gets the mounted instance of the component\n  // https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-class-component\n  grid: ?Masonry<*>;\n\n  scrollContainer: ?HTMLElement;\n\n  state = {\n    pins: [],\n    width: 700,\n  };\n\n  componentDidMount() {\n    getPins().then(startPins => {\n      this.setState({\n        pins: startPins,\n      });\n    });\n  }\n\n  updateWidth = ({ target }: { target: HTMLInputElement }) => {\n    this.setState({ width: Number(target.value) }, () => {\n      if (this.grid) {\n        this.grid.handleResize();\n      }\n    });\n  };\n\n  render() {\n    const containerStyle = {\n      height: '300px',\n      margin: '0 auto',\n      outline: '3px solid #ddd',\n      overflowY: 'scroll',\n      width: `${this.state.width}px`,\n    };\n    const { scrollContainer } = this;\n    return (\n      <div>\n        <input\n          type=\"range\"\n          defaultValue={700}\n          onChange={this.updateWidth}\n          min={200}\n          max={700}\n          step={5}\n          style={inputStyle}\n        />\n        <div\n          ref={el => {\n            this.scrollContainer = el;\n          }}\n          style={containerStyle}\n        >\n          {scrollContainer && (\n            <Masonry\n              columnWidth={170}\n              comp={({ data }) => (\n                <Box>\n                  <Image\n                    alt=\"Test\"\n                    color={data.color}\n                    naturalHeight={data.height}\n                    naturalWidth={data.width}\n                    src={data.src}\n                  />\n                  <Text>{data.name}</Text>\n                </Box>\n              )}\n              flexible={this.props.flexible}\n              gutterWidth={5}\n              items={this.state.pins}\n              layout={this.props.layout}\n              minCols={1}\n              ref={ref => {\n                this.grid = ref;\n              }}\n              scrollContainer={() => scrollContainer}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\ncard(\n  <Card\n    description={`\n    The number of columns in this grid changes responsively based on the width of the parent.\n\n    ~~~jsx\n    <Masonry\n      comp={Item}\n      items={this.state.pins}\n      loadItems={this.loadItems}\n      minCols={1}\n    />\n    ~~~\n  `}\n    name=\"Fluid number of columns\"\n  />\n);\n\ncard(\n  <Box\n    description={`\n    When the \\`flexible\\` property is set to true, the item width will shrink/grow to fill the container. This is great for responsive designs.\n\n    ~~~jsx\n    <Masonry flexible comp={Item} items={items} minCols={1} />\n    ~~~\n  `}\n    name=\"Flexible item width\"\n  >\n    <ExampleMasonry flexible />\n  </Box>\n);\n\ncard(\n  <Box\n    description={`\n    When the \\`flexible\\` property is ommitted, the item width will be fixed to \\`columnWidth\\`.\n\n    ~~~jsx\n    <Masonry comp={Item} items={items} minCols={1} />\n    ~~~\n  `}\n    name=\"Non-flexible item width\"\n  >\n    <ExampleMasonry />\n  </Box>\n);\n\ncard(\n  <Box\n    description={`\n    Using the \\`MasonryUniformRowLayout\\` layout.\n\n    ~~~jsx\n    import { Masonry, MasonryUniformRowLayout } from 'gestalt';\n    <Masonry comp={Item} items={items} layout={MasonryUniformRowLayout} />;\n    ~~~\n  `}\n    name=\"Uniform row heights\"\n  >\n    <ExampleMasonry layout={MasonryUniformRowLayout} />\n  </Box>\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Modal\"\n    description=\"Modals are light temporary views; general purpose containers allowing for a multitude of design choices.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityModalLabel',\n        type: 'string',\n        required: true,\n        description:\n          'String that clients such as VoiceOver will read to describe the modal. Always localize the label.',\n        href: 'accessibility',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'closeOnOutsideClick',\n        type: 'boolean',\n        description: 'Close the modal when you click outside of it',\n        defaultValue: true,\n      },\n      {\n        name: 'footer',\n        type: 'React.Node',\n        href: 'sizesExample',\n      },\n      {\n        name: 'heading',\n        type: `string | React.Node`,\n        required: false,\n        href: 'heading',\n      },\n      {\n        name: 'onDismiss',\n        type: '() => void',\n        required: true,\n        href: 'sizesExample',\n      },\n      {\n        name: 'role',\n        type: `\"alertdialog\" | \"dialog\"`,\n        defaultValue: 'dialog',\n        href: 'role',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\" | \"lg\" | number`,\n        defaultValue: 'sm',\n        description: `sm: 540px, md: 720px, lg: 900px`,\n        href: 'sizesExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"sizesExample\"\n    name=\"Sizes\"\n    description={`\n      There are 3 different pre-selected widths available for a \\`Modal\\`, as well as a last-resort\n      option to set a custom width. Click on each button to view a sample Modal of the specified size.\n      All Modals have a max width of 100%.\n    `}\n    defaultCode={`\nfunction Example(props) {\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'small':\n        return {modal: 'small'};\n      case 'medium':\n        return {modal: 'medium'};\n      case 'large':\n        return {modal: 'large'};\n      case 'none':\n        return {modal: 'none'};\n      default:\n        throw new Error();\n    }\n  }\n\n  const initialState = {modal: 'none'};\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"size='sm'\"\n          onClick={() => { dispatch({type: 'small'}) }}\n        />\n        {state.modal === 'small' && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View default padding and styling\"\n              heading=\"Small modal\"\n              onDismiss={() => { dispatch({type: 'none'}) }}\n              footer={<Heading size=\"md\">Footer</Heading>}\n              size=\"sm\"\n            >\n              <Box padding={8}>\n                <Heading size=\"md\">Children</Heading>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n      <Box padding={1}>\n        <Button\n          text=\"size='md'\"\n          onClick={() => { dispatch({type: 'medium'}) }}\n        />\n        {state.modal === 'medium' && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View default padding and styling\"\n              heading=\"Medium modal\"\n              onDismiss={() => { dispatch({type: 'none'}) }}\n              footer={<Heading size=\"md\">Footer</Heading>}\n              size=\"md\"\n            >\n              <Box padding={8}>\n                <Heading size=\"md\">Children</Heading>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n      <Box padding={1}>\n        <Button\n          text=\"size='lg'\"\n          onClick={() => { dispatch({type: 'large'}) }}\n        />\n        {state.modal === 'large' && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View default padding and styling\"\n              heading=\"Large modal\"\n              onDismiss={() => { dispatch({type: 'none'}) }}\n              footer={<Heading size=\"md\">Footer</Heading>}\n              size=\"lg\"\n            >\n              <Box padding={8}>\n                <Heading size=\"md\">Children</Heading>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Default padding &amp; styling\"\n    description={`\n      Some of the padding required to style your modal has already been provided for ease of use. The modal shown\n      by clicking on the \"View padding\" button highlights the default behavior. The shadow (when scrolling) between\n      the \\`heading\\`, \\`children\\`, and \\`footer\\` are included as well.\n    `}\n    defaultCode={`\nfunction Example(props) {\n  const [showModal, setShowModal] = React.useState(false);\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"View padding\"\n          onClick={() => { setShowModal(!showModal) }}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View default padding and styling\"\n              heading=\"Heading\"\n              onDismiss={() => { setShowModal(!showModal) }}\n              footer={\n                <Box color=\"lightGray\">\n                  <Heading size=\"md\">Footer</Heading>\n                </Box>\n              }\n              size=\"md\"\n            >\n              <Box>\n                <Heading size=\"md\">Children</Heading>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"heading\"\n    name=\"Custom heading\"\n    description=\"\n      If you need more control over the Modal heading besides a wrapped and centered text element,\n      you can pass a custom React node as the heading prop and the Modal will render that instead.\n    \"\n    defaultCode={`\nfunction HeadingExample(props) {\n  const [showModal, setShowModal] = React.useState(false);\n  const [activeTabIndex, setActiveTabIndex] = React.useState(0);\n\n  const handleChangeTab = ({ activeTabIndex, event }) => {\n    event.preventDefault();\n    setActiveTabIndex(activeTabIndex);\n  }\n\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"View heading\"\n          onClick={() => { setShowModal(!showModal) }}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View custom modal heading\"\n              heading={\n                <Box padding={8}>\n                  <Tabs\n                    tabs={[\n                      {\n                        text: \"Boards\",\n                        href: \"#\"\n                      },\n                      {\n                        text: \"Pins\",\n                        href: \"#\"\n                      },\n                      {\n                        text: \"Topics\",\n                        href: \"#\"\n                      }\n                    ]}\n                    activeTabIndex={activeTabIndex}\n                    onChange={handleChangeTab}\n                  />\n                </Box>\n              }\n              onDismiss={() => { setShowModal(!showModal) }}\n              footer={\n                <Box color=\"lightGray\">\n                  <Heading size=\"md\">Footer</Heading>\n                </Box>\n              }\n              size=\"md\"\n            >\n              <Box color=\"lightGray\" minHeight={400}>\n                <Heading size=\"md\">Children</Heading>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"role\"\n    name=\"Alert Dialogs\"\n    description={`\n      The \\`alertdialog\\` role is used to notify the user of urgent information that demands the user's immediate attention.\n      We need to specify this role separately from other dialogs for accessibility.\n    `}\n    defaultCode={`\nfunction Example(props) {\n  const [showModal, setShowModal] = React.useState(false);\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"Block Chris\"\n          onClick={() => { setShowModal(!showModal) }}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"Would you like to block Chris?\"\n              heading=\"Block Chris?\"\n              onDismiss={() => { setShowModal(!showModal) }}\n              footer={\n                <Box\n                  display=\"flex\"\n                  marginLeft={-1}\n                  marginRight={-1}\n                  justifyContent=\"center\"\n                >\n                  <Box padding={1}>\n                    <Button\n                      size=\"lg\"\n                      text=\"Cancel\"\n                      onClick={() => { setShowModal(!showModal) }}\n                    />\n                  </Box>\n                  <Box padding={1}>\n                    <Button\n                      size=\"lg\"\n                      color=\"red\"\n                      text=\"Block\"\n                      onClick={() => { setShowModal(!showModal) }}\n                    />\n                  </Box>\n                </Box>\n              }\n              role=\"alertdialog\"\n              size=\"sm\"\n            >\n              <Box paddingX={8}>\n                <Text align=\"center\">\n                  You will not be able to follow each other or interact with each\n                  others Pins.\n                </Text>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Static Content Example\"\n    description={`\n      Here is an example of the \\`Modal\\` component with static content.\n    `}\n    defaultCode={`\nfunction Example(props) {\n  const [showModal, setShowModal] = React.useState(false);\n\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"Edit board\"\n          onClick={() => { setShowModal(!showModal) }}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"Edit Julia's board\"\n              heading=\"Edit your board\"\n              onDismiss={() => { setShowModal(!showModal) }}\n              footer={\n                <Box\n                  justifyContent=\"between\"\n                  display=\"flex\"\n                  direction=\"row\"\n                  marginLeft={-1}\n                  marginRight={-1}\n                >\n                  <Box column={6} paddingX={1}>\n                    <Button text=\"Delete Board\" inline size=\"lg\" />\n                  </Box>\n                  <Box column={6} paddingX={1}>\n                    <Box\n                      display=\"flex\"\n                      direction=\"row\"\n                      justifyContent=\"end\"\n                      marginLeft={-1}\n                      marginRight={-1}\n                    >\n                      <Box paddingX={1}>\n                        <Button text=\"Cancel\" inline onClick={() => { setShowModal(!showModal) }} size=\"lg\" />\n                      </Box>\n                      <Box paddingX={1}>\n                        <Button color=\"red\" inline text=\"Save\" size=\"lg\" />\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n              size=\"md\"\n            >\n              <Box display=\"flex\" direction=\"row\" position=\"relative\">\n                <Column span={12}>\n                  <Box paddingY={2} paddingX={8} display=\"flex\">\n                    <Column span={4}>\n                      <Label htmlFor=\"name\">\n                        <Text align=\"left\" weight=\"bold\">\n                          Name\n                        </Text>\n                      </Label>\n                    </Column>\n                    <Column span={8}>\n                      <TextField id=\"name\" onChange={() => undefined} />\n                    </Column>\n                  </Box>\n                  <Box paddingY={2} paddingX={8} display=\"flex\">\n                    <Column span={4}>\n                      <Label htmlFor=\"desc\">\n                        <Text align=\"left\" weight=\"bold\">\n                          Description\n                        </Text>\n                      </Label>\n                    </Column>\n                    <Column span={8}>\n                      <TextArea id=\"desc\" onChange={() => undefined} />\n                    </Column>\n                  </Box>\n                  <Box paddingY={2} paddingX={8} display=\"flex\">\n                    <Column span={4}>\n                      <Label htmlFor=\"notifications\">\n                        <Text align=\"left\" weight=\"bold\">\n                          Email Notifications\n                        </Text>\n                      </Label>\n                    </Column>\n                    <Column span={8}>\n                      <Switch id=\"notifications\" onChange={() => undefined} switched />\n                    </Column>\n                  </Box>\n                </Column>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Dynamic Content Example\"\n    description={`\n      Here is an example of the \\`Modal\\` component with dynamic children. You may want to display a \\`Spinner\\`\n      while waiting for content to load. You can achieve this in a few ways. As shown in this example, the \\`ImageModalContents\\`\n      component first renders a \\`Spinner\\` and then switches to the actual images once loaded. This results in\n      the \\`heading\\` and \\`footer\\` being rendered prior to the content. You could also choose to display the\n      \\`Spinner\\` while waiting for the contents to load and then only display the \\`Modal\\` once fully loaded.\n    `}\n    defaultCode={`\nfunction Example(props) {\n  const [showModal, setShowModal] = React.useState(false);\n  const [hasLoaded, setHasLoaded] = React.useState(false);\n\n  const handleToggleModal = () => {\n    setShowModal(!showModal);\n    setHasLoaded(false);\n  }\n\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"View images\"\n          onClick={handleToggleModal}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View random images\"\n              heading=\"Images\"\n              onDismiss={handleToggleModal}\n              footer={\n                <Box display=\"flex\" direction=\"row\" justifyContent=\"end\">\n                  <Button size=\"lg\" text=\"Cancel\" onClick={handleToggleModal} />\n                </Box>\n              }\n              size=\"lg\"\n            >\n              <Box display=\"flex\" direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n                <Spinner\n                  accessibilityLabel=\"random image\"\n                  show={!hasLoaded}\n                />\n                <Box maxWidth={400} width=\"100%\">\n                  <Image\n                    alt=\"LandScape\"\n                    onLoad={() => { setHasLoaded(true) }}\n                    src=\"https://i.picsum.photos/id/1000/5626/3635.jpg\"\n                    naturalHeight={3635}\n                    naturalWidth={5626}\n                  />\n                </Box>\n              </Box>\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Flyout inside of Modal Example\"\n    description=\"Opens a Flyout inside of a Modal and verifies that outside events work as expected with portals\"\n    defaultCode={`\nfunction Example(props) {\n  const [showModal, setShowModal] = React.useState(false);\n  const [showFlyout, setShowFlyout] = React.useState(false);\n  const anchorRef = React.useRef();\n  return (\n    <Box marginLeft={-1} marginRight={-1}>\n      <Box padding={1}>\n        <Button\n          text=\"View Modal\"\n          onClick={() => setShowModal(true)}\n        />\n        {showModal && (\n          <Layer>\n            <Modal\n              accessibilityModalLabel=\"View flyout modal\"\n              heading=\"Modal\"\n              onDismiss={() => {\n                setShowFlyout(false);\n                setShowModal(false)\n              }}\n            >\n              <Box margin={4} ref={anchorRef}>\n                <Button text=\"Open Flyout\" onClick={() => setShowFlyout(true)} />\n              </Box>\n              {showFlyout && (\n                <Layer>\n                  <Flyout\n                    anchor={anchorRef.current}\n                    color=\"blue\"\n                    idealDirection=\"up\"\n                    onDismiss={() => setShowFlyout(false)}\n                    positionRelativeToAnchor={false}\n                    showCaret\n                    shouldFocus={false}\n                    size=\"md\"\n                  >\n                    <Box padding={3}>\n                      <Text color=\"white\" weight=\"bold\">\n                        This flyout is in a React portal.\n                      </Text>\n                      <Box marginTop={3}>\n                        <Button text=\"Click me and the modal should not close\" />\n                      </Box>\n                    </Box>\n                  </Flyout>\n                </Layer>\n              )}\n            </Modal>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Card\n    id=\"accessibility\"\n    description={`\n    We want to make sure every button on the page is unique when being read by screenreader.\n\n    \\`accessibilityModalLabel\\` allows us to update the spoken text for the heading prop.\n\n    ~~~html\n    <Modal\n      accessibilityModalLabel=\"Edit the details about your board House and Home\"\n      heading=\"Edit board\"\n      onDismiss={handleModalDismiss}\n      footer={<Footer />}\n      size=\"lg\"\n    >\n      {children}\n    </Modal>\n    ~~~\n  `}\n    name=\"Accessibility Props\"\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Pog } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Pog\"\n    description=\"\nA lower-level functional component to show the active, hovered, & focused states of an [IconButton](#/IconButton).\n\nThis abstraction to allow for links that look like an IconButton.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'active',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'stateCombinations',\n      },\n      {\n        name: 'bgColor',\n        type: `\"transparent\" | \"transparentDarkGray\" | \"darkGray\" | \"gray\" | \"lightGray\" | \"white\" | \"red\"`,\n        defaultValue: 'transparent',\n        href: 'colorCombinations',\n      },\n      {\n        name: 'focused',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'stateCombinations',\n      },\n      {\n        name: 'hovered',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'stateCombinations',\n      },\n      {\n        name: 'iconColor',\n        type: `\"darkGray\" | \"gray\" | \"red\" | \"white\"`,\n        defaultValue: 'gray',\n        href: 'colorCombinations',\n      },\n      {\n        name: 'icon',\n        type: '$Keys<typeof icons>',\n        description: `This allows us to type check for a valid icon name based on the keys from the list of icons in\n        Icon`,\n      },\n      {\n        name: 'dangerouslySetSvgPath',\n        type: `{ __path: string }`,\n        description: `When using this prop, make sure that the viewbox around the SVG path is 24x24`,\n      },\n      {\n        name: 'selected',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'combinations',\n      },\n      {\n        name: 'size',\n        type: `\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"`,\n        description: `xs: 24px, sm: 32px, md: 40px, lg: 48px, xl: 56px`,\n        defaultValue: 'md',\n        href: 'sizeCombinations',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example\"\n    defaultCode={`\n<Pog\n  icon=\"heart\"\n  iconColor=\"red\"\n/>\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"stateCombinations\"\n    name=\"Combinations: State\"\n    hovered={[false, true]}\n    focused={[false, true]}\n    active={[false, true]}\n  >\n    {props => <Pog icon=\"heart\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"sizeCombinations\"\n    name=\"Combinations: Size\"\n    size={['xs', 'sm', 'md', 'lg', 'xl']}\n  >\n    {props => <Pog icon=\"heart\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"iconColorCombinations\"\n    name=\"Combinations: Icon Color\"\n    iconColor={['darkGray', 'gray', 'red', 'white']}\n  >\n    {props => <Pog icon=\"heart\" {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"backgroundColorCombinations\"\n    name=\"Combinations: Background Color\"\n    bgColor={[\n      'transparent',\n      'transparentDarkGray',\n      'darkGray',\n      'white',\n      'lightGray',\n      'gray',\n    ]}\n  >\n    {props => <Pog icon=\"heart\" {...props} />}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Pulsar\"\n    description=\"Pulsars bring focus to a specific element on the screen and act like training wheels\nto guide people towards the normal way to perform that action. They are used in isolation\nor combination with other education components for more instructions.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'paused',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'size',\n        type: `number`,\n        description: `Use numbers for pixel sizes`,\n        defaultValue: 120,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Pulsars can be shown and hidden using the \\`paused\\` prop.\n  `}\n    name=\"Example\"\n    defaultCode={`\n  function PulsarExample() {\n    const [isPulsing, setIsPulsing] = React.useState(true);\n\n    const text = isPulsing ? 'Click to pause' : 'Click to show';\n\n    return (\n      <Box display=\"flex\" direction=\"column\">\n        <Box marginBottom={4}>\n          <Button\n            text={text}\n            onClick={() => setIsPulsing(!isPulsing)}\n            inline\n            size=\"md\"\n          />\n        </Box>\n        <Pulsar paused={!isPulsing} />\n      </Box>\n    );\n  }\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n\n  \"\n    name=\"Example\"\n    defaultCode={`\nclass FlyoutExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.handleClick = this._handleClick.bind(this);\n    this.handleDismiss = this._handleDismiss.bind(this);\n    this.anchorRef = React.createRef();\n  }\n\n  _handleClick() {\n    this.setState(() => ({ open: !this.state.open }));\n  }\n  _handleDismiss() {\n    this.setState(() => ({ open: false }));\n  }\n\n  render() {\n    return (\n      <Box marginTop={10}>\n        <Box display=\"inlineBlock\" ref={this.anchorRef}>\n          <div style={{\n            position: \"absolute\",\n            top: 10,\n            left: 10,\n            pointerEvents: \"none\", }}>\n            <Touchable onTouch={({ event }) => this.handleClick(event)} rounding=\"circle\" fullWidth={false}>\n              <Pulsar paused={this.state.open} />\n            </Touchable>\n          </div>\n          <Button\n            accessibilityExpanded={!!this.state.open}\n            accessibilityHaspopup\n            onClick={this.handleClick}\n            text={this.state.open ? 'Hide Flyout' : 'Show Flyout'}\n          />\n        </Box>\n        {this.state.open && (\n          <Flyout\n            anchor={this.anchorRef.current}\n            color=\"darkGray\"\n            idealDirection=\"down\"\n            onDismiss={this.handleDismiss}\n            shouldFocus={false}\n          >\n            <Box column={12} padding={3}>\n              <Text color=\"white\" weight=\"bold\">\n                Create a board to save Pins about Kitchen Design for later\n              </Text>\n            </Box>\n          </Flyout>\n        )}\n      </Box>\n    );\n  }\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { RadioButton } from 'gestalt';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"RadioButton\"\n    description=\"Use radio buttons when you have a few options that a user can choose from. Never use\nradio buttons if the user can select more than one option from a list.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'checked',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'label',\n        type: 'string',\n      },\n      {\n        name: 'name',\n        type: 'string',\n        description: 'The name given for all radio buttons in a single group',\n      },\n      {\n        name: 'onChange',\n        type: '({ event: SyntheticInputEvent<>, checked: boolean }) => void',\n        required: true,\n      },\n      {\n        name: 'value',\n        type: 'string',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\"`,\n        description: `sm: 16px, md: 24px`,\n        defaultValue: 'md',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example\"\n    defaultCode={`\n<RadioButton\n  id=\"usa\"\n  checked\n  label=\"United States of America\"\n  onChange={() => {}}\n  value=\"usa\"\n/>`}\n  />\n);\n\ncard(\n  <Example\n    description=\"\n    Here is an example of an accessible group of radio buttons.\n  \"\n    name=\"Example: Group\"\n    defaultCode={`\nfunction RadioButtonExample() {\n  const [gender, setGender] = React.useState(undefined);\n\n  return (\n    <Box\n      role=\"list\"\n      display=\"flex\"\n      direction=\"column\"\n    >\n      <Box paddingY={1}>\n        <RadioButton\n          checked={gender === 'male'}\n          id=\"genderMale\"\n          label=\"Male\"\n          name=\"gender\"\n          onChange={() => setGender( 'male' )}\n          value=\"male\"\n        />\n      </Box>\n      <Box paddingY={1}>\n        <RadioButton\n          checked={gender === 'female'}\n          id=\"genderFemale\"\n          label=\"Female\"\n          name=\"gender\"\n          onChange={() => setGender( 'female' )}\n          value=\"female\"\n        />\n      </Box>\n      <Box paddingY={1}>\n        <RadioButton\n          checked={gender === 'other'}\n          id=\"genderOther\"\n          label=\"Other\"\n          name=\"gender\"\n          onChange={() => setGender( 'other' )}\n          value=\"other\"\n        />\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Combination\n    checked={[false, true]}\n    disabled={[false, true]}\n    size={['sm', 'md']}\n    heading={false}\n  >\n    {(props, i) => (\n      <RadioButton\n        id={`example-${i}`}\n        onChange={() => {}}\n        value=\"\"\n        {...props}\n      />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\n\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(<PageHeader name=\"SearchField\" />);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityLabel',\n        type: 'string',\n        required: true,\n        description:\n          'String that clients such as VoiceOver will read to describe the element. Always localize the label.',\n      },\n      {\n        name: 'autoComplete',\n        type: `\"on\" | \"off\" | \"username\" | \"name\"`,\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'onBlur',\n        type: '({ event: SyntheticEvent<HTMLInputElement> }) => void',\n      },\n      {\n        name: 'onChange',\n        type: `({\n        value: string,\n        syntheticEvent: SyntheticEvent<HTMLInputElement>\n      }) => void`,\n        required: true,\n      },\n      {\n        name: 'onFocus',\n        type: `({\n        value: string,\n        syntheticEvent: SyntheticEvent<HTMLInputElement>\n      }) => void`,\n      },\n      {\n        name: 'placeholder',\n        type: 'string',\n      },\n      {\n        name: 'size',\n        type: '\"md\" | \"lg\"',\n        required: false,\n        description: 'md: 40px, lg: 48px',\n        defaultValue: 'md',\n      },\n      {\n        name: 'value',\n        type: 'string',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    We want to make sure every button on the page is unique when being read by screenreader.\n    \\`accessibilityExpanded\\` allows us to specify that the associated content (i.e. Flyout) is open.\n    \\`accessibilityHaspopup\\` allows us to specify that the button has associated content (i.e. Flyout).\n    \\`accessibilityLabel\\` allows us to update the spoken text.\n\n    Be sure to internationalize your \\`accessibilityLabel\\`.\n  `}\n    name=\"Example: Accessibility\"\n    useCheckerboard={false}\n    defaultCode={`\n  function SearchFieldExample() {\n    const [value, setValue] = React.useState('');\n\n    return (\n      <Box color=\"white\" rounding={2} padding={3} display=\"flex\" alignItems=\"center\">\n        <Box padding={3}>\n          <Icon\n            icon=\"pinterest\"\n            color=\"red\"\n            size={20}\n            accessibilityLabel=\"Pinterest\"\n          />\n        </Box>\n        <Box flex=\"grow\" paddingX={2}>\n          <SearchField\n            accessibilityLabel=\"Demo Search Field\"\n            id=\"searchField\"\n            onChange={({value}) => setValue(value)}\n            placeholder=\"Search and explore\"\n            value={value}\n          />\n        </Box>\n        <Box paddingX={2}>\n          <IconButton\n            accessibilityLabel=\"Notifications\"\n            icon=\"speech-ellipsis\"\n            size=\"md\"\n          />\n        </Box>\n        <Box paddingX={2}>\n          <IconButton accessibilityLabel=\"Profile\" icon=\"person\" size=\"md\" />\n        </Box>\n      </Box>\n    );\n  }\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"SegmentedControl\"\n    description=\"\nSegmented Controls may be used to group between multiple selections.\nThe controls display the current state and related state.\n\nCreate layout to convey clear sense of information hierarchy.\nWhen a control is engaged, information below the control should get updated.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'items',\n        type: 'Array<React.Node>',\n        required: true,\n      },\n      {\n        name: 'onChange',\n        type: '({ event: SyntheticMouseEvent<>, activeIndex: number }) => void',\n        required: true,\n      },\n      {\n        name: 'responsive',\n        type: 'boolean',\n        required: false,\n        description:\n          'By default, items have equal widths. If this prop is true, the width of an item is based on its content.',\n      },\n      {\n        name: 'selectedItemIndex',\n        type: 'number',\n        required: true,\n        description: 'Index of element in `items` that is selected.',\n      },\n      {\n        name: 'size',\n        type: '\"md\" | \"lg\"',\n        required: false,\n        description: 'md: 40px, lg: 48px',\n        defaultValue: 'md',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description=\"Segmented Controls are naive components, meaning you need to wire up the behavior when you click on an item.\n\n    If you'd like the tabs to control hiding or showing content, that state should\n    live in a parent component.\n    \"\n    name=\"Example\"\n    defaultCode={`\nfunction SegmentedControlExample() {\n\n  const [itemIndex, setItemIndex] = React.useState(0);\n\n  const items = [\n    'News',\n    'You',\n    'Messages',\n    <Icon\n      icon=\"pin\"\n      accessibilityLabel=\"Pin\"\n      color={itemIndex === 3 ? 'darkGray' : 'gray'}\n    />,\n  ];\n\n  return (\n    <SegmentedControl\n      items={items}\n      selectedItemIndex={itemIndex}\n      onChange={({ activeIndex }) => setItemIndex(activeIndex)}\n    />\n  );\n}\n    `}\n  />\n);\n\ncard(\n  <Example\n    description=\"Segmented Controls can have responsive widths where the width of an item is based on its content.\"\n    name=\"Example\"\n    defaultCode={`\nfunction SegmentedControlExample() {\n\n  const [itemIndex, setItemIndex] = React.useState(0);\n\n  const props = {\n    items: ['Short', 'Really really really long title'],\n    selectedItemIndex: itemIndex,\n    onChange: ({ activeIndex }) => setItemIndex(activeIndex),\n  };\n\n  return (\n    <Box>\n      <h3>Equal widths</h3>\n      <SegmentedControl {...props} />\n      <h3>Responsive widths</h3>\n      <SegmentedControl {...props} responsive />\n    </Box>\n  );\n}\n    `}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"SelectList\"\n    description={`Use a \\`SelectList\\` when you have four or more items you want a user to choose from.`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: 'false',\n      },\n      {\n        name: 'errorMessage',\n        type: 'string',\n        href: 'exampleWithError',\n      },\n      {\n        name: 'helperText',\n        type: 'string',\n        description: 'More information about how to complete the form field',\n        href: 'helperText',\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'label',\n        type: 'string',\n      },\n      {\n        name: 'name',\n        type: 'string',\n        href: 'basicExample',\n      },\n      {\n        name: 'onChange',\n        type: '({ event: SyntheticInputEvent<>, value: string }) => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'options',\n        type: 'Array<{ label: string, value: string }>',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'placeholder',\n        type: 'string',\n        href: 'basicExample',\n      },\n      {\n        name: 'size',\n        type: '\"md\" | \"lg\"',\n        required: false,\n        description: 'md: 40px, lg: 48px',\n        defaultValue: 'md',\n      },\n      {\n        name: 'value',\n        type: 'string',\n        description: 'Value that is selected.',\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Example\"\n    description={`Make sure to attach a \\`Label\\` to every SelectList.`}\n    defaultCode={`\nfunction Example(props) {\n  const [city, setCity] = React.useState('la')\n  const cityOptions = [\n    {\n      value: \"bos\",\n      label: \"Boston\"\n    },\n    {\n      value: \"la\",\n      label: \"Los Angeles\"\n    },\n    {\n      value: \"sf\",\n      label: \"San Francisco\"\n    }\n  ];\n  return (\n    <SelectList\n      id=\"city\"\n      name=\"city\"\n      onChange={({ value }) => setCity(value)}\n      options={cityOptions}\n      placeholder=\"Select city\"\n      label=\"City\"\n      value={city}\n    />\n  );\n}\n    `}\n  />\n);\n\ncard(\n  <Example\n    id=\"helperText\"\n    name=\"Example: Helper Text\"\n    description={`Whenever you want to provide more information about a form field, you should use \\`helperText\\`.`}\n    defaultCode={`\nfunction Example(props) {\n  const [country, setCountry] = React.useState('belgium')\n  const countries = [\n    {\n      value: \"belgium\",\n      label: \"Belgium\"\n    },\n    {\n      value: \"france\",\n      label: \"France\"\n    },\n    {\n      value: \"usa\",\n      label: \"USA\"\n    }\n  ];\n  return (\n    <Box padding={2} color=\"white\">\n      <SelectList\n        id=\"country\"\n        name=\"country\"\n        onChange={({ value }) => setCountry(value)}\n        options={countries}\n        placeholder=\"Select country\"\n        label=\"Country\"\n        helperText=\"Pick your favourite country (the one with the best fries)\"\n        value={country}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"exampleWithError\"\n    name=\"Example: With Error Message\"\n    description={`SelectList can display error messages if you'd like.\n    To use our errors, simply pass in an \\`errorMessage\\` when there is an error present.`}\n    defaultCode={`\nfunction Example(props) {\n  const [hobby, setHobby] = React.useState('sailing')\n  const hobbies = [\n    {\n      value: \"sailing\",\n      label: \"Sailing\"\n    },\n    {\n      value: \"skiing\",\n      label: \"Skiing\"\n    },\n    {\n      value: \"cycling\",\n      label: \"Cycling\"\n    }\n  ];\n  return (\n    <SelectList\n      id=\"hobby\"\n      name=\"hobby\"\n      errorMessage={ hobby === 'sailing' ? 'Sailing is not a hobby, it is a passion' : null}\n      onChange={({ value }) => setHobby(value)}\n      options={hobbies}\n      placeholder=\"Select hobby\"\n      label=\"Hobby\"\n      value={hobby}\n    />\n  );\n}\n    `}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(<PageHeader name=\"Spinner\" />);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityLabel',\n        type: 'string',\n        required: true,\n        description:\n          'String that clients such as VoiceOver will read to describe the element. Always localize the label.',\n      },\n      {\n        name: 'show',\n        type: 'boolean',\n        required: true,\n        defaultValue: false,\n      },\n      {\n        name: 'delay',\n        type: 'boolean',\n        required: false,\n        defaultValue: true,\n        description:\n          'Whether or not to render with a 300ms delay. The delay is for perceived performance so you should rarely need to remove it.',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\"`,\n        description: `sm: 32px, md: 40px`,\n        defaultValue: 'md',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Spinners indicate when a user has to wait for something else to occur. They delay showing for 300ms to improve perceived performance.\n\n    The label on a spinner is for accessibility. You should pick labels that relate to the specific part of the product it's being used in (\"Loading homefeed\" for instance).\n  `}\n    name=\"Example\"\n    defaultCode={`\nfunction SpinnerExample() {\n  const [show, setShow] = React.useState(false);\n\n  return (\n    <Box>\n      <Box paddingY={2}>\n        <Button\n          inline\n          text={!show ? \"Show spinner\" : \"Hide spinner\"}\n          onClick={() => setShow(!show)}\n          size=\"md\"\n        />\n      </Box>\n      <Spinner show={show} accessibilityLabel=\"Example spinner\" />\n    </Box>\n  );\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Sticky\"\n    description=\"Sticky allows an element to become fixed when it reaches a threshold (top, left, bottom, or right).\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'bottom',\n        type: 'number | string',\n        description: `Use numbers for pixels: bottom={100} and strings for percentages: width=\"100%\"`,\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'left',\n        type: 'number | string',\n        description: `Use numbers for pixels: left={100} and strings for percentages: left=\"100%\"`,\n      },\n      {\n        name: 'right',\n        type: 'number | string',\n        description: `Use numbers for pixels: right={100} and strings for percentages: right=\"100%\"`,\n      },\n      {\n        name: 'top',\n        type: 'number | string',\n        description: `Use numbers for pixels: top={100} and strings for percentages: top=\"100%\"`,\n      },\n      {\n        name: 'dangerouslySetZIndex',\n        type: '{ __zIndex: number }',\n        defaultValue: '{ __zIndex: 1 }',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example: Sticky top\"\n    defaultCode={`\n<Box color=\"white\" height={200} overflow=\"scroll\">\n  <Box height={500} marginTop={10}>\n    <Box>\n      <Sticky top={0}>\n        <Box alignItems=\"center\" color=\"lightGray\" display=\"flex\" height={40}>\n          <Text>This should stick</Text>\n        </Box>\n      </Sticky>\n      <Box marginTop={10} position=\"relative\">\n        <Text>Scroll</Text>\n        <Text>Keep scrolling</Text>\n        <Text>Scroll more</Text>\n      </Box>\n    </Box>\n    <Box>\n      <Sticky top={0} dangerouslySetZIndex={{ __zIndex: 3 }}>\n      <Box alignItems=\"center\" color=\"lightGray\" display=\"flex\" height={40} position=\"relative\" dangerouslySetInlineStyle={{ __style: { zIndex: 2 } }}>\n          <Text>This should also stick</Text>\n        </Box>\n      </Sticky>\n      <Box marginTop={10}>\n        <Text>Still scrolling</Text>\n        <Text>Tadaaaaa</Text>\n      </Box>\n    </Box>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Switch } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport Combination from './components/Combination.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Switch\"\n    description={`Use switches for single cell options that can be turned on and off only.\nIf you have a cell with multiple options that can activated, consider using check marks.\n\\`Switch\\` component supports right-to-left(RTL) language locales layout\n(auto flip on RTL locales like Arabic).`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'switchCombinations',\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'name',\n        type: 'string',\n        href: 'basicExample',\n      },\n      {\n        name: 'onChange',\n        type: '({ event: SyntheticInputEvent<>, value: boolean }) => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'switched',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'switchCombinations',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    description={`\n    Whenever you are using a \\`Switch\\` component, you should use a [Label](#/Label) with it to make your component accessible.\n  `}\n    name=\"Example: Using a label\"\n    defaultCode={`\nfunction SwitchExample() {\n  const [switched, setSwitched] = React.useState(false);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box paddingX={2} flex=\"grow\">\n        <Label htmlFor=\"emailNotifications\">\n          <Text>Airplane mode</Text>\n        </Label>\n      </Box>\n      <Switch\n        onChange={() => setSwitched(!switched)}\n        id=\"emailNotifications\"\n        switched={switched}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"switchCombinations\"\n    disabled={[false, true]}\n    switched={[false, true]}\n    heading={false}\n  >\n    {(props, i) => (\n      <Switch id={`example-${i}`} onChange={() => {}} {...props} />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Tabs } from 'gestalt';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Tabs\"\n    description={`Tabs may be used navigate between multiple URLs. Tabs are intended as page-level navigation - if you're looking at just switching panels please use a SegmentedControl.`}\n  />\n);\n\ncard(\n  <PropTable\n    Component={Tabs}\n    props={[\n      {\n        name: 'activeTabIndex',\n        type: 'number',\n        required: true,\n      },\n      {\n        name: 'tabs',\n        type: `Array<{| text: React.Node, href: string |}>`,\n        required: true,\n      },\n      {\n        name: 'onChange',\n        type: `({ event: SyntheticMouseEvent<>, activeTabIndex: number }) => void`,\n        required: true,\n        description:\n          'If your app uses a tool such as react-router to navigate between pages, be sure to use onChange to navigate instead of getting a full page refresh with href',\n      },\n      {\n        name: 'size',\n        type: '\"md\" | \"lg\"',\n        required: false,\n        description: 'md: 40px, lg: 48px',\n        defaultValue: 'md',\n      },\n      {\n        name: 'wrap',\n        type: 'boolean',\n        description: `By default, flex items will all try to fit onto one line. You can change that and allow the items to wrap onto multiple lines, from top to bottom.`,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Example\"\n    direction=\"row\"\n    defaultCode={`\nfunction TabExample() {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const handleChange = ({ activeTabIndex, event }) => {\n    event.preventDefault();\n    setActiveIndex(activeTabIndex)\n  }\n  return (\n    <Tabs\n      tabs={[\n        {\n          text: \"Boards\",\n          href: \"#\"\n        },\n        {\n          text: \"Pins\",\n          href: \"#\"\n        },\n        {\n          text: \"Topics\",\n          href: \"#\"\n        }\n      ]}\n      activeTabIndex={activeIndex}\n      onChange={handleChange}\n    />\n  );\n}\n  `}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Text\"\n    description=\"The Text component should be used for all text on the page.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'align',\n        type: `\"left\" | \"right\" | \"center\" | \"justify\"`,\n        defaultValue: 'left',\n        href: 'align',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'color',\n        type: `\"blue\" | \"darkGray\" | \"eggplant\" | \"gray\" | \"green\" | \"lightGray\" | \"maroon\" | \"midnight\" | \"navy\" | \"olive\" | \"orange\" | \"orchid\" | \"pine\" | \"purple\" | \"red\" | \"watermelon\" | \"white\"`,\n        defaultValue: 'darkGray',\n        href: 'color',\n      },\n      {\n        name: 'inline',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'inline',\n      },\n      {\n        name: 'italic',\n        type: 'boolean',\n        defaultValue: false,\n        href: 'styles',\n      },\n      {\n        name: 'overflow',\n        type: `\"normal\" | \"breakWord\"`,\n        defaultValue: 'breakWord',\n        href: 'overflow',\n      },\n      {\n        name: 'size',\n        type: `\"sm\" | \"md\" | \"lg\"`,\n        description: `sm: 12px, md: 14px, lg: 16px`,\n        defaultValue: 'lg',\n        href: 'size',\n      },\n      {\n        name: 'truncate',\n        type: 'boolean',\n        description:\n          'Truncate the text to a single line. Add the title attribute if `<Text>` only contains text.',\n        href: 'overflow',\n        defaultValue: false,\n      },\n      {\n        name: 'weight',\n        type: `\"bold\" | \"normal\"`,\n        defaultValue: 'normal',\n        href: 'styles',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description=\"Use this to adjust the positioning of text within wrapper elements.\"\n    id=\"align\"\n    name=\"Alignment\"\n    defaultCode={`\n<Box maxWidth=\"8em\">\n  <Text align=\"left\">Left (default)</Text>\n  <Text align=\"right\">Right</Text>\n  <Text align=\"center\">Center</Text>\n  <Text align=\"justify\">Justify</Text>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    The Text component allows you to specifiy whether you want \\`block\\` or \\`inline\\` text.\n  `}\n    id=\"inline\"\n    name=\"Block vs inline\"\n    defaultCode={`\n<Box>\n  <Box marginBottom={2}>\n    <Text>Some content in a default block element. (default)</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text inline>Inline text with the inline prop.</Text>\n    {' '}\n    <Text inline>More inline text.</Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"You can specify which color you want for your text.\"\n    id=\"color\"\n    name=\"Colors\"\n    defaultCode={`\n<Box>\n  <Box color=\"darkGray\" marginBottom={2}>\n    <Text color=\"white\">White</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text color=\"gray\">Gray</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text color=\"darkGray\">Dark Gray (default)</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text color=\"blue\">Blue</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text color=\"red\">Red</Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description=\"Gestalt provides utility options to deal with text overflow.\"\n    id=\"overflow\"\n    name=\"Overflow\"\n    defaultCode={`\n<Box maxWidth={240}>\n  <Box marginBottom={2}>\n    <Text weight=\"bold\">normal:</Text>\n    <Text overflow=\"normal\">\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉&#39;\n    </Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text weight=\"bold\">breakWord:</Text>\n    <Text>\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉\n      ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ&#39;\n    </Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text weight=\"bold\">truncate:</Text>\n    <Text truncate>\n      This is a long and Supercalifragilisticexpialidocious sentence.\n      次の単語グレートブリテンおよび北アイルランド連合王国で本当に大きな言葉\n      ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ&#39;\n    </Text>\n  </Box>\n</Box>\n`}\n  />\n);\ncard(\n  <Example\n    description={`\n    You can apply \\`size\\` options to define the size of the text.\n  `}\n    id=\"size\"\n    name=\"Sizes\"\n    defaultCode={`\n<Box>\n  <Box marginBottom={2}>\n    <Text inline size=\"sm\">\n      {'Small'}\n    </Text>{' '}\n    <span lang=\"ja\">\n      <Text inline size=\"sm\">\n        こんにちは\n      </Text>\n    </span>\n  </Box>\n  <Box marginBottom={2}>\n    <Text inline size=\"md\">\n      {'Medium (default size)'}\n    </Text>{' '}\n    <span lang=\"ja\">\n      <Text inline size=\"md\">\n        こんにちは\n      </Text>\n    </span>\n  </Box>\n  <Box marginBottom={2}>\n    <Text inline size=\"lg\">\n      {'Large'}\n    </Text>{' '}\n    <span lang=\"ja\">\n      <Text inline size=\"lg\">\n        こんにちは\n      </Text>\n    </span>\n  </Box>\n</Box>\n`}\n  />\n);\ncard(\n  <Example\n    description=\"\n    There are multiple styles, such as bold and italic, that we can\n    attach to the Text component.\n  \"\n    id=\"styles\"\n    name=\"Styles\"\n    defaultCode={`\n<Box>\n  <Box marginBottom={2}>\n    <Text weight=\"bold\">Bold</Text>\n  </Box>\n  <Box marginBottom={2}>\n    <Text italic>Italic</Text>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"TextArea\"\n    description=\"TextArea allows for multi-line input.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: 'false',\n        href: 'disabledExample',\n      },\n      {\n        name: 'errorMessage',\n        type: 'string',\n        href: 'errorMessageExample',\n      },\n      {\n        name: 'helperText',\n        type: 'string',\n        description: 'More information about how to complete the form field',\n        href: 'helperText',\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'label',\n        type: 'string',\n      },\n      {\n        name: 'name',\n        type: 'string',\n      },\n      {\n        name: 'onBlur',\n        type:\n          '({ event: SyntheticFocusEvent<HTMLTextAreaElement>, value: string }) => void',\n      },\n      {\n        name: 'onChange',\n        type:\n          '({ event: SyntheticInputEvent<HTMLTextAreaElement>, value: string }) => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'onFocus',\n        type:\n          '({ event: SyntheticFocusEvent<HTMLTextAreaElement>, value: string }) => void',\n      },\n      {\n        name: 'onKeyDown',\n        type:\n          '({ event: SyntheticKeyboardEvent<HTMLTextAreaElement>, value: string }) => void',\n      },\n      {\n        name: 'placeholder',\n        type: 'string',\n        href: 'basicExample',\n      },\n      {\n        name: 'rows',\n        type: 'number',\n        description: 'Number of rows to display',\n        defaultValue: 3,\n      },\n      {\n        name: 'value',\n        type: 'string',\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Example\"\n    description={`\n    A \\`TextArea\\` will expand to fill the width of the parent container.\n  `}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextArea\n      id=\"aboutme\"\n      onChange={({value}) => setValue(value)}\n      placeholder=\"Write something about yourself...\"\n      label=\"With a placeholder\"\n      value={value}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"disabledExample\"\n    name=\"Example: Disabled\"\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextArea\n      disabled\n      id=\"disabled\"\n      onChange={({value}) => setValue(value)}\n      placeholder=\"Write something about yourself...\"\n      label=\"With a placeholder\"\n      value={value}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"helperText\"\n    name=\"Example: Helper Text\"\n    description={`Whenever you want to provide more information about a form field, you should use \\`helperText\\`.`}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <Box padding={2} color=\"white\">\n      <TextArea\n        id=\"aboutmemore\"\n        onChange={({value}) => setValue(value)}\n        placeholder=\"Write something about yourself...\"\n        helperText=\"I love to sail, run and visit remote places\"\n        label=\"With a placeholder\"\n        value={value}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"errorMessageExample\"\n    name=\"Example: Error message\"\n    description={`\n    A TextArea can display its own error message.\n    To use our errors, simply pass in an \\`errorMessage\\` when there is an error present and we will     handle the rest.`}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextArea\n      id=\"witherror\"\n      onChange={({value}) => setValue(value)}\n      errorMessage={!value ? \"This field can't be blank!\" : null}\n      placeholder=\"Write something about yourself...\"\n      label=\"With an error message\"\n      value={value}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    \\`TextArea\\` intentionally lacks support for autofocus. Generally speaking,\n    autofocus interrupts normal page flow for screen readers making it an\n    anti-pattern for accessibility.\n  `}\n    name=\"Autofocus\"\n  />\n);\n\ncard(\n  <Card\n    description={`\n    \\`TextArea\\` is commonly used as an input in forms alongside submit buttons.\n    In these cases, users expect that pressing Enter or Return with the input\n    focused will submit the form.\n\n    Out of the box, \\`TextArea\\` doesn't expose an \\`onSubmit\\` handler or\n    individual key event handlers due to the complexities of handling these\n    properly. Instead, developers are encouraged to wrap the \\`TextArea\\`\n    in a \\`form\\` and attach an \\`onSubmit\\` handler to that \\`form\\`.\n  `}\n    name=\"onSubmit\"\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\nimport Card from './components/Card.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader name=\"TextField\" description=\"TextField allows for text input.\" />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'autoComplete',\n        type: `\"current-password\" | \"new-password\" | \"on\" | \"off\" | \"username\"`,\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        defaultValue: 'false',\n        href: 'disabledExample',\n      },\n      {\n        name: 'errorMessage',\n        type: 'string',\n        href: 'errorMessageExample',\n      },\n      {\n        name: 'helperText',\n        type: 'string',\n        description: 'More information about how to complete the form field',\n        href: 'helperText',\n      },\n      {\n        name: 'id',\n        type: 'string',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'label',\n        type: 'string',\n      },\n      {\n        name: 'name',\n        type: 'string',\n      },\n      {\n        name: 'onBlur',\n        type:\n          '({ event: SyntheticFocusEvent<HTMLInputElement>, value: string }) => void',\n      },\n      {\n        name: 'onChange',\n        type:\n          '({ event: SyntheticInputEvent<HTMLInputElement>, value: string }) => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'onFocus',\n        type:\n          '({ event: SyntheticFocusEvent<HTMLInputElement>, value: string }) => void',\n      },\n      {\n        name: 'onKeyDown',\n        type:\n          '({ event: SyntheticKeyboardEvent<HTMLInputElement>, value: string }) => void',\n      },\n      {\n        name: 'placeholder',\n        type: 'string',\n        href: 'basicExample',\n      },\n      {\n        name: 'size',\n        type: '\"md\" | \"lg\"',\n        required: false,\n        description: 'md: 40px, lg: 48px',\n        defaultValue: 'md',\n      },\n      {\n        name: 'type',\n        type: `\"date\" | \"email\" | \"number\" | \"password\" | \"text\" | \"url\"`,\n        defaultValue: 'text',\n        href: 'basicExample',\n      },\n      {\n        name: 'value',\n        type: 'string',\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Example\"\n    description={`\n    A \\`TextField\\` will expand to fill the width of the parent container.\n  `}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextField\n      id=\"email\"\n      onChange={({value}) => setValue(value)}\n      placeholder=\"Add email\"\n      label=\"Email\"\n      value={value}\n      type=\"email\"\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"disabledExample\"\n    name=\"Example: Disabled\"\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextField\n      disabled\n      id=\"name\"\n      onChange={({value}) => setValue(value)}\n      placeholder=\"Name\"\n      label=\"Disabled\"\n      value={value}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"helperText\"\n    name=\"Example: Helper Text\"\n    description={`Whenever you want to provide more information about a form field, you should use \\`helperText\\`.`}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <Box padding={2} color=\"white\">\n      <TextField\n        id=\"username\"\n        helperText={'https://pinterest.com/' + value}\n        onChange={({value}) => setValue(value)}\n        label=\"Username\"\n        value={value}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"errorMessageExample\"\n    name=\"Example: Error message\"\n    description={`\n    A TextField can display its own error message.\n    To use our errors, simply pass in an \\`errorMessage\\` when there is an error present and we will     handle the rest.`}\n    defaultCode={`\nfunction Example(props) {\n  const [value, setValue] = React.useState('')\n  return (\n    <TextField\n      id=\"aboutme\"\n      errorMessage={!value ? \"This field can't be blank!\" : null}\n      onChange={({value}) => setValue(value)}\n      label=\"With an error message\"\n      value={value}\n    />\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Card\n    description={`\n    \\`TextField\\` intentionally lacks support for autofocus. Generally speaking,\n    autofocus interrupts normal page flow for screen readers making it an\n    anti-pattern for accessibility.\n  `}\n    name=\"Autofocus\"\n  />\n);\n\ncard(\n  <Card\n    description={`\n    \\`TextField\\` is commonly used as an input in forms alongside submit buttons.\n    In these cases, users expect that pressing Enter or Return with the input\n    focused will submit the form.\n\n    Out of the box, \\`TextField\\` doesn't expose an \\`onSubmit\\` handler or\n    individual key event handlers due to the complexities of handling these\n    properly. Instead, developers are encouraged to wrap the \\`TextField\\`\n    in a \\`form\\` and attach an \\`onSubmit\\` handler to that \\`form\\`.\n  `}\n    name=\"onSubmit\"\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Button, Link, Image, Text, Toast } from 'gestalt';\nimport Combination from './components/Combination.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\nimport PropTable from './components/PropTable.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Toast\"\n    description={`Toasts can educate people on the content of the screen, provide confirmation when people complete an action, or simply communicate a short message.\n\nThe Toast component is purely visual. In order to properly handle the showing and dismissing of Toasts, as well as any animations, you will need to implement a Toast manager.`}\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'button',\n        type: 'React.Node',\n        href: 'imageTextButtonExample',\n      },\n      {\n        name: 'thumbnail',\n        type: 'React.Node',\n        href: 'imageTextExample',\n      },\n      {\n        name: 'thumbnailShape',\n        type: `'circle' | 'rectangle' | 'square'`,\n        defaultValue: 'square',\n        href: 'imageTextExample',\n      },\n      {\n        name: 'text',\n        type: 'string | Array<string>',\n        description:\n          'Use string for guide toasts (one line of text) and Array<string> for confirmation toasts (two lines of text).',\n        href: 'textOnlyExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"textOnlyExample\"\n    name=\"Example: Text only\"\n    defaultCode={`\nfunction ToastExample() {\n  const [showToast, setShowToast] = React.useState(false);\n  return (\n    <Box>\n      <Button\n        inline\n        text={ showToast ? 'Close toast' : 'Show toast' }\n        onClick={() => setShowToast(!showToast)}\n      />\n      <Layer>\n        <Box\n          fit\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 50,\n              left: '50%',\n              transform: 'translateX(-50%)',\n            },\n          }}\n          paddingX={1}\n          position='fixed'\n        >\n          {showToast && (\n            <Toast\n              text={\n                <>\n                  Saved to{' '}\n                  <Text inline color=\"white\" weight=\"bold\">\n                    <Link inline target=\"blank\" href=\"https://www.pinterest.com/search/pins/?q=home%20decor\">\n                      Home decor\n                    </Link>\n                  </Text>\n                </>\n              }\n            />\n          )}\n        </Box>\n      </Layer>\n    </Box>\n  );\n}`}\n  />\n);\n\ncard(\n  <Example\n    id=\"imageTextExample\"\n    name=\"Example: Image + Text\"\n    defaultCode={`\nfunction ToastExample() {\n  const [showToast, setShowToast] = React.useState(false);\n  return (\n    <Box>\n      <Button\n        inline\n        text={ showToast ? 'Close toast' : 'Show toast' }\n        onClick={() => setShowToast(!showToast)}\n      />\n      <Layer>\n        <Box\n          fit\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 150,\n              left: '50%',\n              transform: 'translateX(-50%)',\n            },\n          }}\n          paddingX={1}\n          position='fixed'\n        >\n          {showToast && (\n            <Toast\n              thumbnail={\n                <Image\n                  alt='Saved to home decor board'\n                  naturalHeight={564}\n                  naturalWidth={564}\n                  src='https://i.ibb.co/Lx54BCT/stock1.jpg'\n                />\n              }\n              text={\n                <>\n                  Saved to{' '}\n                  <Text inline color=\"white\" weight=\"bold\">\n                    <Link inline target=\"blank\" href=\"https://www.pinterest.com/search/pins/?q=home%20decor\">\n                      Home decor\n                    </Link>\n                  </Text>\n                </>\n              }\n            />\n          )}\n        </Box>\n      </Layer>\n    </Box>\n  );\n}`}\n  />\n);\n\ncard(\n  <Example\n    id=\"imageTextButtonExample\"\n    name=\"Example: Image + Text + Button\"\n    defaultCode={`\nfunction ToastExample() {\n  const [showToast, setShowToast] = React.useState(false);\n  return (\n    <Box>\n      <Button\n        inline\n        text={ showToast ? 'Close toast' : 'Show toast' }\n        onClick={() => setShowToast(!showToast)}\n      />\n      <Layer>\n        <Box\n          fit\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 250,\n              left: '50%',\n              transform: 'translateX(-50%)',\n            },\n          }}\n          paddingX={1}\n          position='fixed'\n        >\n          {showToast && (\n            <Toast\n              thumbnail={\n                <Image\n                  alt='Saved to home decor board'\n                  naturalHeight={564}\n                  naturalWidth={564}\n                  src='https://i.ibb.co/Lx54BCT/stock1.jpg'\n                />\n              }\n              text={\n                <>\n                  Saved to{' '}\n                  <Text inline color=\"white\" weight=\"bold\">\n                    <Link inline target=\"blank\" href=\"https://www.pinterest.com/search/pins/?q=home%20decor\">\n                      Home decor\n                    </Link>\n                  </Text>\n                </>\n              }\n              button={<Button key=\"button-key\" inline text=\"Undo\" size=\"lg\" />}\n            />\n          )}\n        </Box>\n      </Layer>\n    </Box>\n  );\n}`}\n  />\n);\n\ncard(\n  <Combination\n    id=\"combinations\"\n    name=\"Combinations: Overview\"\n    fullWidth\n    showValues={false}\n    text={[\n      'Section created!',\n      <>\n        Saved to{' '}\n        <Text inline color=\"white\" weight=\"bold\">\n          <Link\n            inline\n            target=\"blank\"\n            href=\"https://www.pinterest.com/search/pins/?q=home%20decor\"\n          >\n            Home decor\n          </Link>\n        </Text>\n      </>,\n    ]}\n    thumbnail={[\n      null,\n      <Image\n        key=\"image-key\"\n        alt=\"Saved to home decor board\"\n        naturalHeight={564}\n        naturalWidth={564}\n        src=\"https://i.ibb.co/Lx54BCT/stock1.jpg\"\n      />,\n    ]}\n    button={[null, <Button key=\"button-key\" inline text=\"Undo\" size=\"lg\" />]}\n  >\n    {props => <Toast {...props} />}\n  </Combination>\n);\n\ncard(\n  <Combination\n    id=\"combinations\"\n    name=\"Combinations: Thumbnail shapes\"\n    fullWidth\n    showValues={false}\n    thumbnailShape={['circle', 'rectangle', 'square']}\n  >\n    {props => (\n      <Toast\n        {...props}\n        thumbnail={\n          <Image\n            key=\"image-key\"\n            alt=\"Saved to home decor board\"\n            naturalHeight={751}\n            naturalWidth={564}\n            src=\"https://i.ibb.co/7bQQYkX/stock2.jpg\"\n          />\n        }\n        text={\n          <>\n            Saved to{' '}\n            <Text inline color=\"white\" weight=\"bold\">\n              <Link\n                inline\n                target=\"blank\"\n                href=\"https://www.pinterest.com/search/pins/?q=home%20decor\"\n              >\n                Home decor\n              </Link>\n            </Text>\n          </>\n        }\n        button={<Button key=\"button-key\" inline text=\"Undo\" size=\"lg\" />}\n      />\n    )}\n  </Combination>\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport Example from './components/Example.js';\nimport PropTable from './components/PropTable.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Tooltip\"\n    description=\"The Tooltip component allows you to wrap a child with a help tooltip when hovered.\n    Tooltips are about way finding, not feature adoption, education, or promotion. They should\n    only include short descriptive text and are co-located with the element they describe.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n        required: true,\n        description: 'The element to wrap with a tooltip on hover.',\n      },\n      {\n        name: 'idealDirection',\n        type: `'up' | 'right' | 'down' | 'left'`,\n        description: 'Preferred direction for the Tooltip to open',\n      },\n      {\n        name: 'inline',\n        type: 'boolean',\n        href: 'inline',\n        description:\n          'Flag used to help render the tooltip inline to the element',\n      },\n      {\n        name: 'text',\n        type: 'string',\n        required: true,\n        description:\n          'String that is shown as addition information in a tooltip bubble to describe the child. Always localize the text.',\n      },\n      {\n        name: 'link',\n        type: 'React.Node',\n        required: false,\n        description: 'A link which will show on the bottom of a tooltip',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    name=\"Tooltips\"\n    description=\"General Tooltip usage involves wrapping your target in a Tooltip. Notice how long\n    text is wrapped around underneath.\"\n    defaultCode={`\n<Tooltip inline text=\"Logout\">\n  <Icon\n    accessibilityLabel=\"Logout of your profile\"\n    color=\"pine\"\n    icon=\"logout\"\n  />\n</Tooltip>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Tooltips with link\"\n    description=\"Passing in a link will render the link in the tooltip\"\n    defaultCode={`\n<Tooltip\n  inline\n  text=\"Logout\"\n  link={\n    <Link href=\"https://pinterest.com\" target=\"blank\">\n      <Text color=\"white\" size=\"sm\" weight=\"bold\">\n        Learn more\n      </Text>\n    </Link>\n  }\n>\n  <Icon\n    accessibilityLabel=\"Logout of your profile\"\n    color=\"pine\"\n    icon=\"logout\"\n  />\n</Tooltip>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"inline\"\n    name=\"Inlining Tooltips\"\n    description=\"Pass this flag in when rendering the tooltip around an inline element such as an Icon,\n      IconButton, or a Button with the inline prop set. This will help correctly position the tooltip\n      alongside the element.\"\n    defaultCode={`\n<Box>\n  <Box padding={2}>\n    <Tooltip inline text=\"Inline tooltip\">\n      <Button\n        accessibilityLabel=\"This tooltip wraps an inline button and occupies the same space\"\n        color=\"gray\"\n        text=\"Inline\"\n        inline\n      />\n    </Tooltip>\n  </Box>\n  <Box padding={2}>\n    <Tooltip text=\"Full width tooltip\">\n      <Button\n        accessibilityLabel=\"This tooltip wraps and allows a button to remain full width\"\n        color=\"red\"\n        text=\"Full width\"\n      />\n    </Tooltip>\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Accessibility\"\n    description={`\n      If more information is needed to describe an IconButton, you can wrap it in a Tooltip\n      in order to reveal more help text on hover.\n\n      Screenreaders will pick up on the accessibilityLabel supplied to the child, in this case\n      IconButton, while the Tooltip just provides a more visible on screen description.\n\n      Be sure to internationalize your \\`text\\`.\n  `}\n    defaultCode={`\n<Tooltip inline text=\"Remove image\">\n  <IconButton\n    accessibilityLabel=\"Delete this image from your profile\"\n    bgColor=\"white\"\n    icon=\"trash-can\"\n    iconColor=\"darkGray\"\n    onClick={() => { console.log('😱')}}\n  />\n</Tooltip>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Touchable\"\n    description=\"Touchable allows for elements to be clickable / touched in an accessible way. We add cursor & focus styles, trigger the `onTouch` when hitting Space / Enter and correct aria roles.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'children',\n        type: 'React.Node',\n      },\n      {\n        name: 'fullHeight',\n        type: 'boolean',\n        href: 'fullHeightWidthExample',\n      },\n      {\n        name: 'fullWidth',\n        type: 'boolean',\n        defaultValue: true,\n        href: 'fullHeightWidthExample',\n      },\n      {\n        name: 'mouseCursor',\n        type: `\"copy\" | \"grab\" | \"grabbing\" | \"move\" | \"noDrop\" | \"pointer\" | \"zoomIn\" | \"zoomOut\"`,\n        defaultValue: 'pointer',\n        href: 'basicExample',\n      },\n      {\n        name: 'onBlur',\n        type: '({ event: SyntheticFocusEvent<HTMLDivElement> }) => void',\n      },\n      {\n        name: 'onFocus',\n        type: '({ event: SyntheticFocusEvent<HTMLDivElement> }) => void',\n      },\n      {\n        name: 'onMouseEnter',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> }) => void',\n      },\n      {\n        name: 'onMouseLeave',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> }) => void',\n      },\n      {\n        name: 'onTouch',\n        type:\n          '({ event: SyntheticMouseEvent<HTMLDivElement> | SyntheticKeyboardEvent<HTMLDivElement> }) => void',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'rounding',\n        type: `\"pill\" | \"circle\" | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8`,\n        href: 'basicExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    description={`\n    For a generic container to be clickable, use the Touchable component.\n\n    If you have a \\`Link\\` or \\`Button\\` inside of Touchable, you can apply \\`e.stopPropagation()\\` so the \\`onTouch\\` doesn't get triggered.\n  `}\n    name=\"Example\"\n    defaultCode={`\nfunction TouchableExample() {\n  const [clicks, setClicks] = React.useState(0);\n\n  return (\n    <Box padding={2} width={150}>\n      <Touchable\n        mouseCursor=\"zoomIn\"\n        onTouch={() => setClicks(clicks + 1)}\n        rounding={2}\n      >\n        <Mask rounding={2}>\n          <Image\n            alt=\"Antelope Canyon\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"https://i.ibb.co/DwYrGy6/stock14.jpg\"\n          />\n        </Mask>\n        <Box paddingY={2}>\n          <Link\n            href=\"https://en.wikipedia.org/wiki/Antelope_Canyon\"\n            onClick={({ event }) => event.stopPropagation()}\n          >\n            <Text align=\"center\">Wiki Link</Text>\n          </Link>\n        </Box>\n      </Touchable>\n      <Box paddingY={2}>\n        <Text color=\"gray\" align=\"center\">\n          Clicked{' '}\n          {clicks}{' '}\n          {clicks === 1 ? 'time' : 'times'}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"fullHeightWidthExample\"\n    description={`\n    \\`fullWidth\\` and \\`fullHeight\\` are flags on \\`Touchable\\` controlling how it is sized relative to the parent container.\n    If one is set to \\`true\\`, the \\`Touchable\\` component will expand to the full size of its parent in that direction.\n  `}\n    name=\"Full width and full height\"\n    defaultCode={`\n<Box color=\"white\" display=\"flex\" width={500} height={250}>\n  <Box column={6}>\n    <Touchable fullHeight>\n      <Box height=\"100%\" color=\"lightGray\">\n        <Text align=\"center\">\n          Full parent height\n        </Text>\n      </Box>\n    </Touchable>\n  </Box>\n  <Box column={6}>\n    <Touchable>\n      <Box height=\"100%\" color=\"lightGray\">\n        <Text align=\"center\">\n          Child height only\n        </Text>\n      </Box>\n    </Touchable>\n  </Box>\n</Box>\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Video\"\n    description=\"\nLike an Image, a Video component is used for media layout. This component is\nsupercharged with lots of goodies to turn a regular video in a full blown viewing experience.\n\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'accessibilityMaximizeLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the fullscreen maximize button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'accessibilityMinimizeLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the fullscreen minimize button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'accessibilityMuteLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the mute button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'accessibilityPauseLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the pause button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'accessibilityPlayLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the play button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'accessibilityUnmuteLabel',\n        type: 'string',\n        description:\n          'Accessibility label for the unmute button if controls are shown',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'aspectRatio',\n        type: 'number',\n        description: `Proportional relationship between width and height of the video, calculated as width / height.`,\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'captions',\n        type: 'string',\n        description: 'The URL of the captions track for the video (.vtt file)',\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'children',\n        type: 'React.Node',\n        description: `This \\`children\\` prop is not same as children inside the native html \\`video\\` element.\n          Instead it serves to add overlays on top of the html video element, while still being under the video controls.`,\n      },\n      {\n        name: 'controls',\n        type: 'boolean',\n        description: 'Show the video player controls',\n        href: 'videoControlsExample',\n      },\n      {\n        name: 'loop',\n        type: 'boolean',\n        description: 'The video will start playing over again when finished',\n        href: 'nativeVideoAttributesExample',\n      },\n      {\n        name: 'onDurationChange',\n        type:\n          '({ event: SyntheticEvent<HTMLVideoElement>, duration: number }) => void',\n        description:\n          'Sent when the metadata has loaded or changed, indicating a change in duration',\n      },\n      {\n        name: 'onEnded',\n        type: '({ event: SyntheticEvent<HTMLVideoElement> }) => void',\n        description: 'Sent when playback of the video completes',\n      },\n      {\n        name: 'onFullscreenChange',\n        type: '({ event: Event, fullscreen: boolean }) => void',\n        description: 'Sent when the video full screen status changes',\n      },\n      {\n        name: 'onLoadedChange',\n        type:\n          '({ event: SyntheticEvent<HTMLVideoElement>, loaded: number }) => void',\n        description: 'Sent when progress happens on downloading the media',\n      },\n      {\n        name: 'onPlay',\n        type: '({ event: SyntheticEvent<HTMLDivElement> }) => void',\n        description:\n          'Sent when playback of the media starts after having been paused',\n        href: 'videoUpdatesExample',\n      },\n      {\n        name: 'onPlayheadDown',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> }) => void',\n        description: 'Sent when mouse down event occurs on playhead',\n      },\n      {\n        name: 'onPlayheadUp',\n        type: '({ event: SyntheticMouseEvent<HTMLDivElement> }) => void',\n        description: 'Sent when mouse up event occurs on playhead',\n      },\n      {\n        name: 'onPause',\n        type: '({ event: SyntheticEvent<HTMLDivElement> }) => void',\n        description: 'Sent when playback is paused',\n        href: 'videoUpdatesExample',\n      },\n      {\n        name: 'onReady',\n        type: '({ event: SyntheticEvent<HTMLVideoElement> }) => void',\n        description: 'Sent when video is loaded and ready to play.',\n      },\n      {\n        name: 'onSeek',\n        type: '({ event: SyntheticEvent<HTMLVideoElement> }) => void',\n        description: 'Sent when a seek operation completes from the playhead',\n      },\n      {\n        name: 'onTimeChange',\n        type:\n          '({ event: SyntheticEvent<HTMLVideoElement>, time: number }) => void',\n        description:\n          \"Sent when the time indicated by the element's currentTime attribute has changed\",\n      },\n      {\n        name: 'onVolumeChange',\n        type:\n          '({ event: SyntheticEvent<HTMLDivElement>, volume: number }) => void',\n        description: 'Sent when the audio volume changes',\n        href: 'videoUpdatesExample',\n      },\n      {\n        name: 'playbackRate',\n        type: 'number',\n        description:\n          'Specifies the speed at which the video plays: 1 for normal',\n        defaultValue: 1,\n        href: 'videoUpdatesExample',\n      },\n      {\n        name: 'playing',\n        type: 'boolean',\n        description: 'Specifies whether the video should play or not',\n        defaultValue: false,\n        href: 'nativeVideoAttributesExample',\n      },\n      {\n        name: 'playsInline',\n        type: 'boolean',\n        description: `Serves as a hint to the user agent that the video should to be displayed \"inline\" in\n          the document by default, constrained to the element's playback area, instead of being displayed\n          fullscreen or in an independent resizable window. This attribute is mainly relevant to\n          iOS Safari browsers`,\n      },\n      {\n        name: 'poster',\n        type: 'string',\n        description: 'The image to show while the video is downloading',\n        href: 'basicExample',\n      },\n      {\n        name: 'preload',\n        type: `\"auto\" | \"metadata\" | \"none\"`,\n        defaultValue: 'auto',\n        description:\n          'Specifies how, if any, the video should be loaded when the page loads',\n      },\n      {\n        name: 'src',\n        type:\n          'string | Array<{| type: \"video/m3u8\" | \"video/mp4\" | \"video/ogg, src: string |}>',\n        description: `The URL of the video file to play. This can also be supplied as a list of video types to respective\n          video source urls in fallback order for support on various browsers.`,\n        required: true,\n        href: 'basicExample',\n      },\n      {\n        name: 'volume',\n        type: 'number',\n        description:\n          'Specifies the volume of the video audio: 0 for muted, 1 for max',\n        defaultValue: 1,\n        href: 'nativeVideoAttributesExample',\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    id=\"basicExample\"\n    name=\"Video media basics\"\n    description={`\n    The source url you pass into \\`Video\\` will be used to download and play the video file. While it is\n    downloading the metadata, you may show a thumbnail image by using the \\`poster\\` prop.\n  `}\n    defaultCode={`\n<Video\n  aspectRatio={853 / 480}\n  captions=\"\"\n  poster=\"https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217\"\n  src=\"http://media.w3.org/2010/05/bunny/movie.mp4\"\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Video multiple sources\"\n    description={`\n    Not all browsers support the same video encoding types. If you have multiple video file sources, you can pass\n    them as a list to \\`Video\\` in the order you want the HTML video tag to use as fallbacks.\n  `}\n    defaultCode={`\n<Video\n  aspectRatio={426 / 240}\n  captions=\"\"\n  playing\n  volume={0}\n  src={[\n    {\n      type: \"video/mp4\",\n      src: \"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\"\n    },\n    {\n      type: \"video/ogg\",\n      src: \"https://archive.org/download/ElephantsDream/ed_hd.ogv\"\n    },\n  ]}\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"nativeVideoAttributesExample\"\n    name=\"Native video attributes\"\n    description={`\n    \\`Video\\` supports the native HTML video attributes such as \\`autoPlay\\`, \\`loop\\`, \\`muted\\`, and more.\n    Simply pass these through as props on the \\`Video\\` component.\n  `}\n    defaultCode={`\n<Video\n  aspectRatio={1920 / 1080}\n  captions=\"\"\n  loop\n  playing\n  src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n  volume={0}\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"videoControlsExample\"\n    name=\"Video controls\"\n    description={`\n    \\`Video\\` components can show a control bar to users in order to allow them access to certain features\n    such as play/pause, timestamps, mute, and fullscreen. Pass in the \\`controls\\` prop to make them appear.\n  `}\n    defaultCode={`\n<Video\n  accessibilityMaximizeLabel=\"Maximize\"\n  accessibilityMinimizeLabel=\"Minimize\"\n  accessibilityMuteLabel=\"Mute\"\n  accessibilityPauseLabel=\"Pause\"\n  accessibilityPlayLabel=\"Play\"\n  accessibilityUnmuteLabel=\"Unmute\"\n  aspectRatio={853 / 480}\n  captions=\"\"\n  controls\n  src=\"http://media.w3.org/2010/05/bunny/movie.mp4\"\n/>\n`}\n  />\n);\n\ncard(\n  <Example\n    name=\"Video with children\"\n    description={`\n    \\`Video\\` component can show components in the \\`chilren\\` prop on top of the html video element, while under the controls.\n    The children of \\`Video\\` are not same as the children of the html \\`video\\` element; they're \"outside\" the html \\`video\\` element.\n  `}\n    defaultCode={`\n<Video\n  accessibilityMaximizeLabel=\"Maximize\"\n  accessibilityMinimizeLabel=\"Minimize\"\n  accessibilityMuteLabel=\"Mute\"\n  accessibilityPauseLabel=\"Pause\"\n  accessibilityPlayLabel=\"Play\"\n  accessibilityUnmuteLabel=\"Unmute\"\n  aspectRatio={853 / 480}\n  captions=\"\"\n  controls\n  playing\n  src=\"http://media.w3.org/2010/05/bunny/movie.mp4\"\n>\n  <Box width=\"100%\" height=\"100%\"\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    dangerouslySetInlineStyle={{__style:{backgroundColor:'rgba(0, 0, 0, 0.3)'}}}>\n      <IconButton\n        accessibilityLabel=\"Love\"\n        bgColor=\"white\"\n        icon=\"trash-can\"\n        size=\"lg\" />\n  </Box>\n</Video>\n`}\n  />\n);\n\ncard(\n  <Example\n    id=\"videoUpdatesExample\"\n    name=\"Video updates\"\n    description={`\n    \\`Video\\` is robust enough to handle any updates, such as changing the source, volume, or speed.`}\n    defaultCode={`\nfunction Example() {\n  const [input, setInput] = React.useState(\"http://media.w3.org/2010/05/bunny/movie.mp4\");\n  const [playbackRate, setPlaybackRate] = React.useState(1);\n  const [playing, setPlaying] = React.useState(false);\n  const [src, setSrc] = React.useState(\"http://media.w3.org/2010/05/bunny/movie.mp4\");\n  const [volume, setVolume] = React.useState(1);\n\n  return (\n    <Box>\n      <Box paddingY={2}>\n        <Box marginBottom={2}>\n          <Label htmlFor=\"video-source\">\n            <Text>Video source URL</Text>\n          </Label>\n        </Box>\n        <Box display=\"flex\" marginLeft={-1} marginRight={-1}>\n          <Box flex=\"grow\" paddingX={1}>\n            <TextField\n              id=\"video-source\"\n              onChange={({ value }) => setInput(value)}\n              value={input}\n            />\n          </Box>\n          <Box paddingX={1}>\n            <Button\n              text=\"Submit\"\n              color=\"red\"\n              onClick={() => setSrc(input)}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box paddingY={2}>\n        <Button\n          text={volume === 0 ? \"Unmute\" : \"Mute\"}\n          onClick={() => setVolume(volume === 0 ? 1 : 0)}\n        />\n      </Box>\n      <Box display=\"flex\" paddingY={2} marginLeft={-1} marginRight={-1}>\n        <Box paddingX={1} column={6}>\n          <Button\n            text=\"Playback x0.5\"\n            onClick={() => setPlaybackRate(playbackRate / 2)}\n          />\n        </Box>\n        <Box paddingX={1} column={6}>\n          <Button\n            text=\"Playback x2\"\n            onClick={() => setPlaybackRate(playbackRate * 2)}\n          />\n        </Box>\n      </Box>\n      <Video\n        accessibilityMaximizeLabel=\"Maximize\"\n        accessibilityMinimizeLabel=\"Minimize\"\n        accessibilityMuteLabel=\"Mute\"\n        accessibilityPauseLabel=\"Pause\"\n        accessibilityPlayLabel=\"Play\"\n        accessibilityUnmuteLabel=\"Unmute\"\n        aspectRatio={853 / 480}\n        captions=\"\"\n        controls\n        onPlay={() => setPlaying(true)}\n        onPause={() => setPlaying(false)}\n        onVolumeChange={({ volume }) => setVolume(volume)}\n        playbackRate={playbackRate}\n        playing={playing}\n        src={src}\n        volume={volume}\n      />\n    </Box>\n  );\n}\n`}\n  />\n);\n\nexport default cards;\n","// @flow strict\nimport * as React from 'react';\nimport { Link as GestaltLink } from 'gestalt';\nimport { createLocation } from 'history';\nimport { withRouter } from 'react-router-dom';\n\ntype Props = {|\n  children?: React.Node,\n  history: *,\n  onClick: Function,\n  replace?: boolean,\n  target?: null | 'self' | 'blank',\n  to: string | Object,\n|};\n\nconst isModifiedEvent = event =>\n  !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\nconst Link = ({\n  children,\n  history,\n  onClick,\n  replace = false,\n  target,\n  to,\n}: Props) => {\n  const href = history.createHref(\n    typeof to === 'string'\n      ? createLocation(to, null, null, history.location)\n      : to\n  );\n\n  const handleClick = React.useCallback(\n    ({ event }) => {\n      if (onClick) onClick({ event });\n\n      if (\n        !event.defaultPrevented && // onClick prevented default\n        event.button === 0 && // ignore everything but left clicks\n        !target && // let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        if (replace) {\n          history.replace(to);\n        } else {\n          history.push(to);\n        }\n      }\n    },\n    [history, onClick, replace, target, to]\n  );\n\n  return (\n    <GestaltLink target={target} onClick={handleClick} href={href}>\n      {children}\n    </GestaltLink>\n  );\n};\n\nexport default withRouter(Link);\n","// @flow strict\nimport React from 'react';\nimport { Box, Text, Icon, IconButton, Link as GestaltLink } from 'gestalt';\nimport Link from './Link.js';\n\nexport default function Header() {\n  const [isRTL, setIsRTL] = React.useState(false);\n\n  const toggleRTL = () => {\n    if (document && document.documentElement) {\n      document.documentElement.dir = isRTL ? 'ltr' : 'rtl';\n      setIsRTL(!isRTL);\n    }\n  };\n  const togglePageDirSvgPath = {\n    __path: isRTL\n      ? 'M9 10v5h2V4h2v11h2V4h2V2H9C6.79 2 5 3.79 5 6s1.79 4 4 4zm12 8l-4-4v3H5v2h12v3l4-4z'\n      : 'M10 10v5h2V4h2v11h2V4h2V2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4zm-2 7v-3l-4 4 4 4v-3h12v-2H8z',\n  };\n\n  return (\n    <Box\n      paddingY={2}\n      paddingX={4}\n      mdPaddingX={6}\n      lgPaddingX={8}\n      color=\"pine\"\n      display=\"flex\"\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box marginStart={-2} marginEnd={-2}>\n        <Text color=\"white\" weight=\"bold\">\n          <Link to=\"/\">\n            <Box padding={2}>\n              <Box\n                display=\"flex\"\n                direction=\"row\"\n                alignItems=\"center\"\n                marginLeft={-1}\n                marginRight={-1}\n              >\n                <Box paddingX={1}>\n                  <Icon\n                    icon=\"pinterest\"\n                    color=\"white\"\n                    size={24}\n                    accessibilityLabel=\"Pinterest Logo\"\n                  />\n                </Box>\n                <Box paddingX={1}>Gestalt</Box>\n              </Box>\n            </Box>\n          </Link>\n        </Text>\n      </Box>\n\n      <Box flex=\"grow\" />\n\n      <Box\n        marginStart={-2}\n        marginEnd={-2}\n        display=\"flex\"\n        direction=\"row\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <IconButton\n            size=\"md\"\n            accessibilityLabel=\"toggle page direction\"\n            iconColor=\"white\"\n            dangerouslySetSvgPath={togglePageDirSvgPath}\n            onClick={toggleRTL}\n          />\n        </Box>\n        <Text color=\"white\">\n          <GestaltLink\n            href=\"https://codesandbox.io/s/k5plvp9v8v\"\n            target=\"blank\"\n          >\n            <Box padding={2}>Playground</Box>\n          </GestaltLink>\n        </Text>\n\n        <Text color=\"white\">\n          <GestaltLink\n            href=\"https://github.com/pinterest/gestalt\"\n            target=\"blank\"\n          >\n            <Box padding={2}>GitHub</Box>\n          </GestaltLink>\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n","// @flow strict\nimport * as React from 'react';\nimport { Link, Text } from 'gestalt';\nimport { withRouter, Route } from 'react-router-dom';\nimport { createLocation } from 'history';\n\ntype Props = {|\n  children?: React.Node,\n  to: string,\n  history: *,\n|};\n\nconst isLeftClickEvent = event => event.button === 0;\nconst isModifiedEvent = event =>\n  !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\nconst NavLink = ({ children, to, history }: Props) => {\n  const location = createLocation(to, null, null, history.location);\n  const href = history.createHref(location);\n  const handleClick = ({ event }) => {\n    if (event.defaultPrevented) return;\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;\n    event.preventDefault();\n    history.push(to);\n  };\n  return (\n    <Route path={to} location={history.location}>\n      {({ match }) => (\n        <Text weight={match ? 'bold' : 'normal'}>\n          <Link href={href} onClick={handleClick}>\n            {children}\n          </Link>\n        </Text>\n      )}\n    </Route>\n  );\n};\n\nexport default withRouter(NavLink);\n","// @flow strict\nconst routes = {};\n\nconst requireCard = require.context('..', true, /\\.doc\\.js$/);\nconst paths = requireCard.keys();\npaths.sort((a, b) => a.localeCompare(b));\npaths.forEach(path => {\n  const pathname = path.match(/\\.\\/(.+)\\.doc\\.js$/)[1];\n  routes[pathname] = requireCard(path).default;\n});\n\nexport default routes;\n","// @flow strict\nimport React from 'react';\nimport { Box } from 'gestalt';\nimport NavLink from './NavLink.js';\nimport routes from './routes.js';\n\nconst components = Object.keys(routes);\n\nexport default function Navigation() {\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        mdDisplay=\"none\"\n        overflow=\"scrollX\"\n        paddingX={4}\n        paddingY={2}\n      >\n        <Box\n          display=\"flex\"\n          role=\"list\"\n          direction=\"row\"\n          marginStart={-2}\n          marginEnd={-2}\n        >\n          {components.map((component, i) => (\n            <Box role=\"listitem\" key={i} flex=\"none\">\n              <NavLink to={`/${component}`}>\n                <Box padding={2}>{component}</Box>\n              </NavLink>\n            </Box>\n          ))}\n        </Box>\n      </Box>\n      <Box\n        display=\"none\"\n        direction=\"column\"\n        mdDisplay=\"flex\"\n        padding={4}\n        mdPadding={6}\n        lgPadding={8}\n      >\n        <Box marginStart={-2} marginEnd={-2} role=\"list\">\n          {components.map((component, i) => (\n            <Box role=\"listitem\" key={i}>\n              <NavLink to={`/${component}`}>\n                <Box paddingY={1} paddingX={2}>\n                  {component}\n                </Box>\n              </NavLink>\n            </Box>\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Column, Divider, Link, Text } from 'gestalt';\nimport Header from './Header.js';\nimport Navigation from './Navigation.js';\n\ntype Props = {|\n  children?: React.Node,\n|};\n\nexport default function App(props: Props) {\n  const { children } = props;\n  return (\n    <Box minHeight=\"100vh\">\n      <Header />\n\n      <Box mdDisplay=\"flex\" direction=\"row\">\n        <Column span={12} mdSpan={2}>\n          <Navigation />\n        </Column>\n        <Divider />\n        <Column span={12} mdSpan={8}>\n          <Box padding={4} mdPadding={6} lgPadding={8}>\n            {children}\n          </Box>\n        </Column>\n      </Box>\n      {document.location.href.includes('netlify') ? (\n        <Box>\n          <Divider />\n\n          <Box padding={4} mdPadding={6} lgPadding={8}>\n            <Link href=\"https://www.netlify.com/\">\n              <Box paddingX={2} paddingY={1}>\n                <Text align=\"right\">This site is powered by Netlify</Text>\n              </Box>\n            </Link>\n          </Box>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","// @flow strict\nimport * as React from 'react';\n\ntype Props = {|\n  children?: React.Node,\n|};\n\nconst SearchContent = ({ children }: Props) => (\n  <div className=\"docSearch-content\">{children}</div>\n);\n\nexport default SearchContent;\n","// @flow strict\nimport * as React from 'react';\nimport { Box } from 'gestalt';\nimport SearchContent from './SearchContent.js';\n\ntype Props = {|\n  cards: Array<React.Node>,\n|};\n\nconst CardPage = ({ cards }: Props) => (\n  <SearchContent>\n    {cards.map((card, i) => (\n      <Box marginBottom={4} id={`card-${i}`} key={i}>\n        {card}\n      </Box>\n    ))}\n  </SearchContent>\n);\n\nexport default CardPage;\n","// @flow strict\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport 'gestalt/dist/gestalt.css';\nimport App from './components/App.js';\nimport CardPage from './components/CardPage.js';\nimport routes from './components/routes.js';\nimport './reset.css';\n\nconst container = document.getElementById('root');\n\nif (container instanceof Element) {\n  render(\n    <React.StrictMode>\n      <HashRouter>\n        <App>\n          <Switch>\n            {Object.keys(routes).map(pathname => (\n              <Route\n                path={`/${pathname}`}\n                key={pathname}\n                render={() => <CardPage cards={routes[pathname]} />}\n              />\n            ))}\n          </Switch>\n        </App>\n      </HashRouter>\n    </React.StrictMode>,\n    container\n  );\n} else {\n  throw new Error(\"No element with id 'root' found in index.html file\");\n}\n","// @flow strict\nimport * as React from 'react';\nimport { Box, Heading } from 'gestalt';\nimport Markdown from './Markdown.js';\n\ntype Props = {|\n  children?: React.Node,\n  description?: string,\n  heading?: boolean,\n  id: ?string,\n  name: string,\n  stacked?: boolean,\n|};\n\nexport default function Card({\n  children,\n  description,\n  heading = true,\n  id,\n  name,\n  stacked = false,\n}: Props) {\n  return (\n    <Box id={id}>\n      {heading && <Heading size=\"md\">{name}</Heading>}\n      <Box\n        marginLeft={-2}\n        marginRight={-2}\n        display=\"flex\"\n        direction={stacked ? 'column' : 'row'}\n      >\n        <Box marginTop={1} paddingX={2} column={12}>\n          {description && <Markdown text={description} />}\n          {children}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","var map = {\n\t\"./Avatar.doc.js\": 88,\n\t\"./Badge.doc.js\": 729,\n\t\"./Box.doc.js\": 730,\n\t\"./Button.doc.js\": 731,\n\t\"./Card.doc.js\": 732,\n\t\"./Checkbox.doc.js\": 733,\n\t\"./Collage.doc.js\": 734,\n\t\"./Column.doc.js\": 735,\n\t\"./Container.doc.js\": 736,\n\t\"./Divider.doc.js\": 737,\n\t\"./Flyout.doc.js\": 738,\n\t\"./GroupAvatar.doc.js\": 739,\n\t\"./Heading.doc.js\": 740,\n\t\"./Icon.doc.js\": 741,\n\t\"./IconButton.doc.js\": 742,\n\t\"./Image.doc.js\": 743,\n\t\"./Label.doc.js\": 744,\n\t\"./Layer.doc.js\": 745,\n\t\"./Letterbox.doc.js\": 746,\n\t\"./Link.doc.js\": 747,\n\t\"./Mask.doc.js\": 748,\n\t\"./Masonry.doc.js\": 749,\n\t\"./Modal.doc.js\": 750,\n\t\"./Pog.doc.js\": 751,\n\t\"./Pulsar.doc.js\": 752,\n\t\"./RadioButton.doc.js\": 753,\n\t\"./SearchField.doc.js\": 754,\n\t\"./SegmentedControl.doc.js\": 755,\n\t\"./SelectList.doc.js\": 756,\n\t\"./Spinner.doc.js\": 757,\n\t\"./Sticky.doc.js\": 758,\n\t\"./Switch.doc.js\": 759,\n\t\"./Tabs.doc.js\": 760,\n\t\"./Text.doc.js\": 761,\n\t\"./TextArea.doc.js\": 762,\n\t\"./TextField.doc.js\": 763,\n\t\"./Toast.doc.js\": 764,\n\t\"./Tooltip.doc.js\": 765,\n\t\"./Touchable.doc.js\": 766,\n\t\"./Video.doc.js\": 767\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 87;","// @flow strict\nimport * as React from 'react';\nimport PropTable from './components/PropTable.js';\nimport Example from './components/Example.js';\nimport PageHeader from './components/PageHeader.js';\n\nconst cards = [];\nconst card = c => cards.push(c);\n\ncard(\n  <PageHeader\n    name=\"Avatar\"\n    description=\"You can use an `Avatar` to represent a user. Every Avatar image has a subtle color wash.\"\n  />\n);\n\ncard(\n  <PropTable\n    props={[\n      {\n        name: 'name',\n        type: 'string',\n        required: true,\n      },\n      {\n        name: 'outline',\n        type: 'boolean',\n        defaultValue: false,\n        description: `Adds a white border around Avatar so it's visible when displayed on other images`,\n      },\n      {\n        name: 'size',\n        type: `\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"fit\"`,\n        defaultValue: 'fit',\n        description:\n          'xs: 24px, sm: 32px, md: 48px, lg: 64px, xl: 120px. If size is `fit`, Avatar will fill 100% of the parent container width',\n      },\n      {\n        name: 'src',\n        type: 'string',\n      },\n      {\n        name: 'verified',\n        type: 'boolean',\n        defaultValue: false,\n      },\n    ]}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    There are 5 sizes you can choose for an \\`Avatar\\`. For certain designs you may need a container-based size. More information on that option is below.\n  `}\n    name=\"Fixed Sizes\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\" marginLeft={-2} marginRight={-2} wrap>\n  <Box paddingX={2}>\n    <Avatar\n      size=\"xs\"\n      src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\"\n      name=\"Keerthi\"\n    />\n  </Box>\n  <Box paddingX={2}>\n    <Avatar\n      size=\"sm\"\n      src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\"\n      name=\"Keerthi\"\n    />\n  </Box>\n  <Box paddingX={2}>\n    <Avatar\n      size=\"md\"\n      src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\"\n      name=\"Keerthi\"\n    />\n  </Box>\n  <Box paddingX={2}>\n    <Avatar\n      size=\"lg\"\n      src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\"\n      name=\"Keerthi\"\n    />\n  </Box>\n  <Box paddingX={2}>\n    <Avatar\n      size=\"xl\"\n      src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\"\n      name=\"Keerthi\"\n    />\n  </Box>\n</Box>\n`}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    Avatars that are not given a \\`size\\` prop will be expand to fit to the width of their\n    parent container. A common use case is to achieve column-based sizing.\n\n    Resize the browser to see these Avatar change to match the width of the \\`Column\\` they\n    have been placed in.\n  `}\n    name=\"Container Based Sizes\"\n    defaultCode={`\n<Box display=\"flex\" direction=\"row\">\n  <Box width={40}>\n    <Avatar name=\"Julia\" />\n  </Box>\n  <Box column={2}>\n    <Avatar name=\"Julia\" />\n  </Box>\n  <Box column={4}>\n    <Avatar name=\"Keerthi\" src=\"https://i.ibb.co/ZfCZrY8/keerthi.jpg\" />\n  </Box>\n</Box>\n  `}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    If there is no image source provided to the \\`Avatar\\`, the first character of\n    the name provided will be used as a placeholder.\n  `}\n    name=\"Without an image\"\n    defaultCode={`\n<Avatar\n  name=\"Keerthi\"\n  size=\"lg\"\n/>\n  `}\n  />\n);\n\ncard(\n  <Example\n    description={`\n    When someone has a verified account, we can set the \\`verified\\` prop on it.\n  `}\n    name=\"Verified\"\n    defaultCode={`\n<Avatar\n  name=\"Shanice\"\n  size=\"lg\"\n  src=\"https://i.ibb.co/7tGKGvb/shanice.jpg\"\n  verified\n/>\n  `}\n  />\n);\n\nexport default cards;\n"],"sourceRoot":""}